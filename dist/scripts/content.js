// Generated by Haxe 3.4.0 (git build development @ a9c8d60)
(function ($hx_exports, $global) { "use strict";
$hx_exports["tannus"] = $hx_exports["tannus"] || {};
$hx_exports["tannus"]["sys"] = $hx_exports["tannus"]["sys"] || {};
;$hx_exports["tannus"]["media"] = $hx_exports["tannus"]["media"] || {};
;$hx_exports["tannus"]["ds"] = $hx_exports["tannus"]["ds"] || {};
;$hx_exports["tannus"]["css"] = $hx_exports["tannus"]["css"] || {};
$hx_exports["tannus"]["css"]["vals"] = $hx_exports["tannus"]["css"]["vals"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var crayon_Application = function() {
	var _gthis = this;
	var this1 = window;
	this.win = this1;
	this.self = tannus_ds_CObj.create(this);
	var this2 = function() {
		return _gthis.win.document.title;
	};
	var this3 = function(v) {
		return _gthis.win.document.title = v;
	};
	var this4 = new tannus_io__$Pointer_Ref(this2,this3);
	var rtitle = this4;
	var _this = this.self;
	var getter = rtitle.getter;
	var o = _this.o;
	var o1 = _this.o;
	var tmp;
	var func;
	if(o1 == null) {
		func = null;
	} else {
		var func1;
		if(o1.__properties__) {
			tmp = o1.__properties__["get_" + "__defineGetter__"];
			func1 = tmp;
		} else {
			func1 = false;
		}
		if(func1) {
			func = o1[tmp]();
		} else {
			func = o1["__defineGetter__"];
		}
	}
	func.apply(o,["title",getter]);
	var setter = rtitle.setter;
	var o2 = _this.o;
	var o3 = _this.o;
	var tmp1;
	var func2;
	if(o3 == null) {
		func2 = null;
	} else {
		var func3;
		if(o3.__properties__) {
			tmp1 = o3.__properties__["get_" + "__defineSetter__"];
			func3 = tmp1;
		} else {
			func3 = false;
		}
		if(func3) {
			func2 = o3[tmp1]();
		} else {
			func2 = o3["__defineSetter__"];
		}
	}
	func2.apply(o2,["title",setter]);
	this.body = new crayon_Body(this);
};
$hxClasses["crayon.Application"] = crayon_Application;
crayon_Application.__name__ = ["crayon","Application"];
crayon_Application.prototype = {
	start: function() {
	}
	,title: null
	,win: null
	,self: null
	,body: null
	,__class__: crayon_Application
};
var BPlayerMain = function() {
	crayon_Application.call(this);
};
$hxClasses["BPlayerMain"] = BPlayerMain;
BPlayerMain.__name__ = ["BPlayerMain"];
BPlayerMain.main = function() {
	new BPlayerMain().start();
};
BPlayerMain.__super__ = crayon_Application;
BPlayerMain.prototype = $extend(crayon_Application.prototype,{
	start: function() {
		this.title = "BPlayer";
		this.appDir = new pman_db_AppDir(this);
		this.db = new pman_db_PManDatabase(this);
		this.db.init(function() {
			console.log("Database initialized");
		});
		this.browserWindow = electron_ext_BrowserWindow.getAllWindows()[0];
		this.playerPage = new pman_ui_PlayerPage(this);
		this.body.open(this.playerPage);
		this.__buildMenus();
		this.keyboardCommands = new pman_ui_KeyboardCommands(this);
		this.keyboardCommands.bind();
		this.dragManager = new pman_ui_DragDropManager(this);
		this.dragManager.init();
		var this1 = new tannus_sys_CPath(electron_ext_ExtApp.getAppPath());
		var this2 = new electron_ext_NTray(electron_ext_ExtNativeImage.createFromPath(tannus_sys_CPath.join([this1,tannus_sys__$Path_Path_$Impl_$.fromString("assets/icon16.png")]).s));
		this.tray = this2;
		this.initTray();
	}
	,testSockets: function() {
		var bus = electron_ipc_IpcBus.get();
		var ping = bus.createSocket("ping");
		ping.on("test",function(m) {
			console.log("message: " + Std.string(m.data));
			console.log("responding..");
			m.reply("ping");
		});
	}
	,initTray: function() {
		var _gthis = this;
		var trayMenu = electron_ext_Menu.buildFromTemplate([{ label : "Open Media", click : function(item,window,event) {
			_gthis.playerPage.player.selectAndOpenFiles();
		}},{ label : "Quit", click : function(item1,window1,event1) {
			_gthis.quit();
		}}]);
		this.tray.setContextMenu(trayMenu);
	}
	,quit: function() {
		electron_ext_ExtApp.quit();
	}
	,errorMessage: function(error) {
		this.win.alert(Std.string(error));
	}
	,fileSystemPrompt: function(options,callback) {
		electron_ext_Dialog.showOpenDialog(this._convertFSPromptOptions(this._fillFSPromptOptions(options)),function(paths) {
			callback(paths);
		});
	}
	,__buildMenus: function() {
		var _gthis = this;
		this.playerPage.player.onReady(function() {
			var items = [];
			var mediaItem = new electron_ext_MenuItem({ label : "Media", submenu : [{ label : "Open File(s)", accelerator : "CtrlOrCmd+O", click : function(item,window,event) {
				_gthis.playerPage.player.selectAndOpenFiles();
			}},{ label : "Open Directory", accelerator : "CtrlOrCmd+F", click : function(item1,window1,event1) {
				_gthis.playerPage.player.selectAndOpenDirectory();
			}},{ type : "separator"},{ label : "Save Playlist", click : function(item2,window2,event2) {
				console.log("not yet implemented");
			}}]});
			items.push(mediaItem);
			var toolbarMenu = new electron_ext_Menu();
			var _g = 0;
			while(_g < items.length) {
				var item3 = items[_g];
				++_g;
				toolbarMenu.append(item3);
			}
			electron_ext_Menu.setApplicationMenu(toolbarMenu);
		});
	}
	,_fillFSPromptOptions: function(o) {
		if(o.directory == null) {
			o.directory = false;
		}
		if(o.title == null) {
			o.title = "BPlayer FileSystem Prompt";
		}
		return o;
	}
	,_convertFSPromptOptions: function(o) {
		var res = { title : o.title, buttonLabel : o.buttonLabel, defaultPath : o.defaultPath, filters : o.filters, properties : o.directory ? ["openDirectory"] : ["openFile","multiSelections"]};
		return res;
	}
	,get_player: function() {
		return this.playerPage.player;
	}
	,playerPage: null
	,browserWindow: null
	,keyboardCommands: null
	,appDir: null
	,db: null
	,dragManager: null
	,tray: null
	,__class__: BPlayerMain
	,__properties__: {get_player:"get_player"}
});
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			var tmp = this.r;
			var tmp1 = len < 0 ? s : HxOverrides.substr(s,0,pos + len);
			this.r.m = tmp.exec(tmp1);
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = ["IntIterator"];
IntIterator.prototype = {
	min: null
	,max: null
	,hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	var a = [];
	var i = $iterator(it)();
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.iter = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		f(x1);
	}
};
Lambda.empty = function(it) {
	return !$iterator(it)().hasNext();
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Slambda = function() { };
$hxClasses["Slambda"] = Slambda;
Slambda.__name__ = ["Slambda"];
var Slambda1 = function() { };
$hxClasses["Slambda1"] = Slambda1;
Slambda1.__name__ = ["Slambda1"];
var Slambda2 = function() { };
$hxClasses["Slambda2"] = Slambda2;
Slambda2.__name__ = ["Slambda2"];
var Slambda3 = function() { };
$hxClasses["Slambda3"] = Slambda3;
Slambda3.__name__ = ["Slambda3"];
var Slambda4 = function() { };
$hxClasses["Slambda4"] = Slambda4;
Slambda4.__name__ = ["Slambda4"];
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.htmlUnescape = function(s) {
	return s.split("&gt;").join(">").split("&lt;").join("<").split("&quot;").join("\"").split("&#039;").join("'").split("&amp;").join("&");
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) {
		throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	nodeType: null
	,nodeName: null
	,nodeValue: null
	,parent: null
	,children: null
	,attributeMap: null
	,get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.getReserved(att);
		} else {
			return _this.h[att];
		}
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			_this.setReserved(att,value);
		} else {
			_this.h[att] = value;
		}
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.existsReserved(att);
		} else {
			return _this.h.hasOwnProperty(att);
		}
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		return this.attributeMap.keys();
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		var ret = _g;
		return HxOverrides.iter(ret);
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,__class__: Xml
};
var tannus_io_EventDispatcher = function() {
	this.__checkEvents = true;
	this._sigs = new haxe_ds_StringMap();
};
$hxClasses["tannus.io.EventDispatcher"] = tannus_io_EventDispatcher;
tannus_io_EventDispatcher.__name__ = ["tannus","io","EventDispatcher"];
tannus_io_EventDispatcher.prototype = {
	addSignal: function(name,sig) {
		var this1 = this._sigs;
		var alt = new tannus_io_Signal();
		var v = sig != null ? sig : alt;
		var _this = this1;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,v);
		} else {
			_this.h[name] = v;
		}
	}
	,addSignals: function(names) {
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			this.addSignal(name);
		}
	}
	,getSignal: function(name) {
		if(!this.canDispatch(name)) {
			if(this.__checkEvents) {
				throw new js__$Boot_HaxeError("InvalidEvent: \"" + name + "\" is not a valid Event");
			} else {
				var this1 = this._sigs;
				var v = new tannus_io_Signal();
				var _this = this1;
				if(__map_reserved[name] != null) {
					_this.setReserved(name,v);
				} else {
					_this.h[name] = v;
				}
			}
		}
		var _this1 = this._sigs;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	,canDispatch: function(name) {
		var _this = this._sigs;
		if(__map_reserved[name] != null) {
			return _this.existsReserved(name);
		} else {
			return _this.h.hasOwnProperty(name);
		}
	}
	,on: function(name,action,once) {
		this.getSignal(name).listen(action,once);
	}
	,once: function(name,action) {
		this.on(name,action,true);
	}
	,dispatch: function(name,data) {
		this.getSignal(name).broadcast(data);
	}
	,off: function(name,action) {
		var sig = this.getSignal(name);
		if(action != null) {
			sig.ignore(action);
		} else {
			sig.handlers = [];
		}
	}
	,when: function(name,test,action) {
		this.getSignal(name).when(test,action);
	}
	,_sigs: null
	,__checkEvents: null
	,__class__: tannus_io_EventDispatcher
};
var tannus_html_Elementable = function() { };
$hxClasses["tannus.html.Elementable"] = tannus_html_Elementable;
tannus_html_Elementable.__name__ = ["tannus","html","Elementable"];
tannus_html_Elementable.prototype = {
	toElement: null
	,__class__: tannus_html_Elementable
};
var tannus_ds_Destructible = function() { };
$hxClasses["tannus.ds.Destructible"] = tannus_ds_Destructible;
tannus_ds_Destructible.__name__ = ["tannus","ds","Destructible"];
tannus_ds_Destructible.prototype = {
	destroy: null
	,__class__: tannus_ds_Destructible
};
var foundation_WidgetAsset = function() { };
$hxClasses["foundation.WidgetAsset"] = foundation_WidgetAsset;
foundation_WidgetAsset.__name__ = ["foundation","WidgetAsset"];
foundation_WidgetAsset.__interfaces__ = [tannus_ds_Destructible];
foundation_WidgetAsset.prototype = {
	activate: null
	,__class__: foundation_WidgetAsset
};
var foundation_Widget = function() {
	this._built = false;
	this._active = false;
	this.parentElement = null;
	this.parentWidget = null;
	var _gthis = this;
	tannus_io_EventDispatcher.call(this);
	this.__checkEvents = false;
	this.set_el(null);
	var this1 = function() {
		return _gthis.el;
	};
	var this2 = function(v) {
		return _gthis.set_el(v);
	};
	var this3 = new tannus_io__$Pointer_Ref(this1,this2);
	this.styles = new foundation_Styles(this3);
	this.assets = [];
	this.children = [];
	this.set_uid("wi-" + tannus_ds_Memory.allocRandomId(6));
	foundation_Widget.bindMetadataEventHandlers(this);
};
$hxClasses["foundation.Widget"] = foundation_Widget;
foundation_Widget.__name__ = ["foundation","Widget"];
foundation_Widget.__interfaces__ = [tannus_html_Elementable,foundation_WidgetAsset];
foundation_Widget.bindMetadataEventHandlers = function(w) {
	var meta = tannus_ds_CObj.create(haxe_rtti_Meta.getFields(w == null ? null : js_Boot.getClass(w)));
	var binders = ["on","once"];
	var wo = tannus_ds_CObj.create(w);
	var _g = 0;
	var _g1 = meta.keys();
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		var o = meta.o;
		var tmp;
		var d;
		if(o == null) {
			d = null;
		} else {
			var d1;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + name];
				d1 = tmp;
			} else {
				d1 = false;
			}
			if(d1) {
				d = o[tmp]();
			} else {
				d = o[name];
			}
		}
		var data = tannus_ds_CObj.create(d);
		var _g2 = 0;
		var _g3 = data.keys();
		while(_g2 < _g3.length) {
			var key = _g3[_g2];
			++_g2;
			var o1 = data.o;
			var tmp1;
			var params;
			if(o1 == null) {
				params = null;
			} else {
				var params1;
				if(o1.__properties__) {
					tmp1 = o1.__properties__["get_" + key];
					params1 = tmp1;
				} else {
					params1 = false;
				}
				if(params1) {
					params = o1[tmp1]();
				} else {
					params = o1[key];
				}
			}
			var params2 = params;
			if(Lambda.has(binders,key)) {
				var args = Std.string(params2[0]);
				var o2 = wo.o;
				var tmp2;
				var args1;
				if(o2 == null) {
					args1 = null;
				} else {
					var args2;
					if(o2.__properties__) {
						tmp2 = o2.__properties__["get_" + name];
						args2 = tmp2;
					} else {
						args2 = false;
					}
					if(args2) {
						args1 = o2[tmp2]();
					} else {
						args1 = o2[name];
					}
				}
				var o3 = wo.o;
				var o4 = wo.o;
				var tmp3;
				var func;
				if(o4 == null) {
					func = null;
				} else {
					var func1;
					if(o4.__properties__) {
						tmp3 = o4.__properties__["get_" + key];
						func1 = tmp3;
					} else {
						func1 = false;
					}
					if(func1) {
						func = o4[tmp3]();
					} else {
						func = o4[key];
					}
				}
				func.apply(o3,[args,args1]);
			}
		}
	}
};
foundation_Widget.__super__ = tannus_io_EventDispatcher;
foundation_Widget.prototype = $extend(tannus_io_EventDispatcher.prototype,{
	attach: function(asset) {
		this.assets.push(asset);
	}
	,destroy: function() {
		var _g = 0;
		var _g1 = this.assets;
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			if(js_Boot.__instanceof(x,foundation_Widget) && (js_Boot.__cast(x , foundation_Widget)).childOf(this)) {
				x.destroy();
			} else if(!js_Boot.__instanceof(x,foundation_Widget)) {
				x.destroy();
			}
		}
		if(this.el != null) {
			this.el.remove();
		}
	}
	,detach: function() {
		this.toElement().detach();
	}
	,toElement: function() {
		return this.el;
	}
	,'is': function(selector) {
		if(this.el == null) {
			return false;
		} else {
			return this.el["is"](selector);
		}
	}
	,engage: function() {
		tannus_html__$Element_Element_$Impl_$.plugin(this.el,"foundation");
	}
	,reflow: function() {
		var e = this.el;
		window.Foundation.reInit(e);
	}
	,activate: function() {
		this._active = true;
		var _g = 0;
		var this1 = $(this.toElement().children());
		var this2 = this1;
		var _g1 = [];
		var _g2 = 0;
		var _g11 = this2.length;
		while(_g2 < _g11) {
			var i = _g2++;
			var this3 = $(this2.get(i));
			_g1.push(this3);
		}
		var _g12 = _g1;
		while(_g < _g12.length) {
			var e = _g12[_g];
			++_g;
			try {
				var w = e.data("haxe-foundation-widget");
				if(w != null && !w._active) {
					w.activate();
				}
			} catch( error ) {
				if (error instanceof js__$Boot_HaxeError) error = error.val;
				var this4 = window;
				this4.console.error(error);
			}
		}
		this.dispatch("activate",this);
	}
	,build: function() {
		this.__ibuild();
	}
	,populate: function() {
	}
	,__ibuild: function() {
		this.populate();
		this._built = true;
		this.dispatch("build",this);
	}
	,appendTo: function(parent) {
		if(js_Boot.__instanceof(parent,foundation_Widget)) {
			var par = parent;
			par.append(this);
		} else {
			var this1 = $(parent);
			var par1 = this1;
			var this2 = this.toElement();
			var _g = [];
			var _g2 = 0;
			var _g1 = this2.length;
			while(_g2 < _g1) {
				var i = _g2++;
				var this3 = $(this2.get(i));
				_g.push(this3);
			}
			par1.append(_g);
			this.parentElement = par1;
			this.parentWidget = null;
		}
		this.__ac();
	}
	,append: function(child) {
		this._attach(child,function(l,r) {
			var _g = [];
			var _g2 = 0;
			var _g1 = r.length;
			while(_g2 < _g1) {
				var i = _g2++;
				var this1 = $(r.get(i));
				_g.push(this1);
			}
			l.append(_g);
		});
	}
	,prepend: function(child) {
		this._attach(child,function(l,r) {
			var _g = [];
			var _g2 = 0;
			var _g1 = r.length;
			while(_g2 < _g1) {
				var i = _g2++;
				var this1 = $(r.get(i));
				_g.push(this1);
			}
			l.prepend(_g);
		});
	}
	,after: function(tail) {
		this._attach(tail,function(l,r) {
			var _g = [];
			var _g2 = 0;
			var _g1 = r.length;
			while(_g2 < _g1) {
				var i = _g2++;
				var this1 = $(r.get(i));
				_g.push(this1);
			}
			l.after(_g);
		});
	}
	,before: function(head) {
		this._attach(head,function(l,r) {
			var _g = [];
			var _g2 = 0;
			var _g1 = r.length;
			while(_g2 < _g1) {
				var i = _g2++;
				var this1 = $(r.get(i));
				_g.push(this1);
			}
			l.before(_g);
		});
	}
	,_attach: function(child,attacher) {
		if(js_Boot.__instanceof(child,foundation_Widget)) {
			this._attachWidget(child,attacher);
		} else {
			var this1 = $(child);
			var ch = this1;
			var this2 = tannus_html__$Element_Element_$Impl_$.get_edata(ch);
			var key = tannus_ds_StringUtils.toCamelCase("haxe-foundation-widget");
			var this3 = this2().data();
			var tmp;
			var hwd;
			if(this3 == null) {
				hwd = null;
			} else {
				var hwd1;
				if(this3.__properties__) {
					tmp = this3.__properties__["get_" + key];
					hwd1 = tmp;
				} else {
					hwd1 = false;
				}
				if(hwd1) {
					hwd = this3[tmp]();
				} else {
					hwd = this3[key];
				}
			}
			var hwd2 = hwd;
			if(hwd2 != null && js_Boot.__instanceof(hwd2,foundation_Widget)) {
				this._attachWidget(hwd2,attacher);
			} else {
				this._attachElement(ch,attacher);
			}
		}
		this.__ac();
	}
	,_attachWidget: function(child,attacher) {
		attacher(this.toElement(),child.toElement());
		this.attach(child);
		child.parentWidget = this;
		child.parentElement = this.toElement();
		if(this._active) {
			child.activate();
		}
	}
	,_attachElement: function(child,attacher) {
		attacher(this.toElement(),child);
	}
	,parentOf: function(child) {
		if(js_Boot.__instanceof(child,foundation_Widget)) {
			var cw = child;
			return cw.el.closest(this.el).length > 0;
		} else {
			var this1 = $(child);
			var ce = this1;
			return ce.closest(this.el).length > 0;
		}
	}
	,childOf: function(parent) {
		if(js_Boot.__instanceof(parent,foundation_Widget)) {
			return (js_Boot.__cast(parent , foundation_Widget)).parentOf(parent);
		} else {
			var this1 = $(parent);
			return this.el.closest(this1).length > 0;
		}
	}
	,insertAt: function(child,index) {
		if(!this.parentOf(child)) {
			this.append(child);
		}
		if(js_Boot.__instanceof(child,foundation_Widget)) {
			tannus_html__$Element_Element_$Impl_$.index(this.el,(js_Boot.__cast(child , foundation_Widget)).toElement(),index);
		} else {
			var tmp = this.el;
			var this1 = $(child);
			var this2 = $(this1.get(0));
			tannus_html__$Element_Element_$Impl_$.index(tmp,this2,index);
		}
	}
	,replaceChild: function(child,repl) {
		if(this.parentOf(child)) {
			if(js_Boot.__instanceof(repl,foundation_Widget)) {
				var rw = repl;
				child.el.replaceWith(rw.el.get(0));
			} else {
				var child1 = child.el;
				var this1 = $(repl);
				child1.replaceWith(this1.get(0));
			}
		}
	}
	,replaceWith: function(repl) {
		if(this.parentWidget != null) {
			this.parentWidget.replaceChild(this,repl);
		}
	}
	,animate: function(properties,options) {
		var o = options;
		this.el.animate(properties,{ duration : o.duration, easing : o.easing, queue : o.queue, step : function(now,tween) {
			if(o.step != null) {
				var this1 = o.step;
				(this1 != null ? this1 : this1)(now);
			}
		}, complete : function() {
			if(o.complete != null) {
				var this2 = o.complete;
				(this2 != null ? this2 : this2)();
			}
		}, progress : function(anim,progress,remaining) {
			if(o.progress != null) {
				var this3 = o.progress;
				(this3 != null ? this3 : this3)(progress,remaining);
			}
		}});
	}
	,parentWidgetUntil: function(test) {
		if(this.parentWidget != null) {
			var pw = this.parentWidget;
			if(test(pw)) {
				return pw;
			} else {
				return pw.parentWidgetUntil(test);
			}
		} else {
			return null;
		}
	}
	,parentElementUntil: function(test) {
		var t = this.el.parent();
		while(t.length > 0) {
			if(test(t)) {
				return t;
			}
			t = t.parent();
		}
		return null;
	}
	,rect: function(r) {
		if(r == null) {
			var rr = this.el.get(0).getBoundingClientRect();
			var this1 = new tannus_geom_CRectangle(rr.left,rr.top,rr.width,rr.height);
			return this1;
		} else {
			var this2 = new tannus_geom_TPoint(r.x,r.y,r.z);
			this.pos(this2);
			var v = r.width;
			parseFloat(tannus_html__$Element_Element_$Impl_$.get_style(this.el).set("width",v + "px"));
			var v1 = r.height;
			parseFloat(tannus_html__$Element_Element_$Impl_$.get_style(this.el).set("height",v1 + "px"));
			return this.rect();
		}
	}
	,pos: function(p) {
		if(p == null) {
			var r = this.el.get(0).getBoundingClientRect();
			var this1 = new tannus_geom_TPoint(r.left,r.top,0);
			return this1;
		} else {
			tannus_html__$Element_Element_$Impl_$.get_style(this.el).applyObject({ "left" : p.get_x() + "px", "top" : p.get_y() + "px"});
			return this.pos();
		}
	}
	,get_css_property: function(name) {
		return tannus_html__$Element_Element_$Impl_$.get_style(this.el).get(name);
	}
	,gcp: function(n) {
		return tannus_html__$Element_Element_$Impl_$.get_style(this.el).get(n);
	}
	,gcp_float: function(n) {
		var this11 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		if(this11.get(n) != null) {
			var this11 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
			return parseFloat(this11.get(n));
		} else {
			return null;
		}
	}
	,gcp_int: function(n) {
		var this11 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		if(this11.get(n) != null) {
			var this11 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
			return Std.parseInt(this11.get(n));
		} else {
			return null;
		}
	}
	,set_css_property: function(name,value) {
		return tannus_html__$Element_Element_$Impl_$.get_style(this.el).set(name,value);
	}
	,scp: function(n,v) {
		return tannus_html__$Element_Element_$Impl_$.get_style(this.el).set(n,v);
	}
	,scp_float: function(n,v,unit) {
		if(unit == null) {
			unit = "px";
		}
		return parseFloat(tannus_html__$Element_Element_$Impl_$.get_style(this.el).set(n,v + unit));
	}
	,scp_int: function(n,v,unit) {
		if(unit == null) {
			unit = "px";
		}
		return Std.parseInt(tannus_html__$Element_Element_$Impl_$.get_style(this.el).set(n,v + unit));
	}
	,addClass: function(name) {
		this.el.addClass(name);
	}
	,addClasses: function(names) {
		Lambda.iter(names,$bind(this,this.addClass));
	}
	,removeClass: function(name) {
		this.el.removeClass(name);
	}
	,toggleClass: function(name) {
		this.el.toggleClass(name);
	}
	,classes: function() {
		var this11 = this.el;
		if(this11.attr("class") != null) {
			var this11 = this.el;
			return this11.attr("class").split(" ");
		} else {
			return [];
		}
	}
	,meta: function(name,value) {
		if(value == null) {
			return this.el.data(name);
		} else {
			this.el.data(name,value);
			return value;
		}
	}
	,forwardEvent: function(name,src,trans) {
		var _gthis = this;
		if(src == null) {
			src = this.el;
		}
		if(trans == null) {
			trans = function(x) {
				return x;
			};
		}
		src.on(name,function(raw_event) {
			var event = trans(raw_event);
			_gthis.dispatch(name,event);
		});
	}
	,unforwardEvent: function(name,src) {
		if(src == null) {
			src = this.el;
		}
		src.unbind(name);
	}
	,forwardEvents: function(names,src,trans) {
		var _g = 0;
		while(_g < names.length) {
			var n = names[_g];
			++_g;
			this.forwardEvent(n,src,trans);
		}
	}
	,onactivate: function(f) {
		if(this._active) {
			var this1 = window;
			this1.requestAnimationFrame(f);
		} else {
			this.once("activated",f);
		}
	}
	,__bindElement: function(e) {
		var this1 = tannus_html__$Element_Element_$Impl_$.get_edata(e);
		var key = tannus_ds_StringUtils.toCamelCase("haxe-foundation-widget");
		var this2 = this1().data();
		var tmp;
		var tmp1;
		if(this2.__properties__) {
			tmp = this2.__properties__["set_" + key];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			this2[tmp](this);
		} else {
			this2[key] = this;
		}
		var tmp2;
		if(this2 == null) {
			null;
		} else {
			var tmp3;
			if(this2.__properties__) {
				tmp2 = this2.__properties__["get_" + key];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				this2[tmp2]();
			}
		}
		if(!tannus_html__$Element_Element_$Impl_$.get_attributes(e)().get(0).hasAttribute("id")) {
			tannus_html__$Element_Element_$Impl_$.set(e,"id",this.uid);
		}
	}
	,elementWidget: function(e) {
		var this1 = tannus_html__$Element_Element_$Impl_$.get_edata(e);
		var key = tannus_ds_StringUtils.toCamelCase("haxe-foundation-widget");
		var this2 = this1().data();
		var tmp;
		var tmp1;
		if(this2 == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(this2.__properties__) {
				tmp = this2.__properties__["get_" + key];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = this2[tmp]();
			} else {
				tmp1 = this2[key];
			}
		}
		return tmp1;
	}
	,nearestWidget: function(ee) {
		var e = ee;
		while(e != null) {
			var this1 = tannus_html__$Element_Element_$Impl_$.get_edata(e);
			var key = tannus_ds_StringUtils.toCamelCase("haxe-foundation-widget");
			var this2 = this1().data();
			var tmp;
			var ew;
			if(this2 == null) {
				ew = null;
			} else {
				var ew1;
				if(this2.__properties__) {
					tmp = this2.__properties__["get_" + key];
					ew1 = tmp;
				} else {
					ew1 = false;
				}
				if(ew1) {
					ew = this2[tmp]();
				} else {
					ew = this2[key];
				}
			}
			var ew2 = ew;
			if(ew2 != null) {
				return ew2;
			} else {
				e = e.parent();
				continue;
			}
		}
		return null;
	}
	,__ac: function() {
		var tmp;
		var this1 = this.el;
		var this2 = $("html");
		if(this1.closest(this2).length > 0) {
			tmp = !this._active;
		} else {
			tmp = false;
		}
		if(tmp) {
			this.activate();
		}
	}
	,get_d: function() {
		var this1 = window;
		return this1.document;
	}
	,get_doc: function() {
		var this1 = window;
		var this2 = $(this1.document);
		return this2;
	}
	,get_text: function() {
		return this.el.text();
	}
	,set_text: function(nt) {
		var this1 = this.el;
		this1.text(nt);
		return this1.text();
	}
	,get_width: function() {
		return this.el.width();
	}
	,set_width: function(nw) {
		var this1 = this.el;
		this1.width(Math.round(nw));
		return this1.width();
	}
	,get_height: function() {
		return this.el.height();
	}
	,set_height: function(nh) {
		var this1 = this.el;
		this1.height(Math.round(nh));
		return this1.height();
	}
	,get_css: function() {
		return tannus_html__$Element_Element_$Impl_$.get_style(this.el);
	}
	,el: null
	,set_el: function(v) {
		var ee = this.el;
		this.el = v;
		return this.el;
	}
	,uid: null
	,set_uid: function(v) {
		this.uid = v;
		if(this.el != null) {
			tannus_html__$Element_Element_$Impl_$.set(this.el,"id",this.uid);
		}
		return this.uid;
	}
	,assets: null
	,children: null
	,styles: null
	,parentWidget: null
	,parentElement: null
	,_active: null
	,_built: null
	,__class__: foundation_Widget
	,__properties__: {set_uid:"set_uid",set_el:"set_el",get_css:"get_css",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_text:"set_text",get_text:"get_text",get_doc:"get_doc",get_d:"get_d"}
});
var crayon_Body = function(app) {
	foundation_Widget.call(this);
	var this1 = $("body");
	this.set_el(this1);
	this.pageChange = new tannus_io_Signal();
	this.set_currentPage(null);
	this.application = app;
	this.activate();
};
$hxClasses["crayon.Body"] = crayon_Body;
crayon_Body.__name__ = ["crayon","Body"];
crayon_Body.__super__ = foundation_Widget;
crayon_Body.prototype = $extend(foundation_Widget.prototype,{
	open: function(page) {
		if(this.currentPage != null) {
			this.currentPage.close();
			page.previousPage = this.currentPage;
		}
		console.log("body activated: " + Std.string(this._active));
		this.set_currentPage(page);
		this.append(page);
		this.set_currentPage(page);
		(page.opened ? $bind(page,page.reopen) : $bind(page,page.open))(this);
	}
	,get_title: function() {
		return this.application.title;
	}
	,set_title: function(v) {
		return this.application.title = v;
	}
	,currentPage: null
	,set_currentPage: function(newPage) {
		var previous = this.currentPage;
		var current = this.currentPage = newPage;
		var this1;
		var this2 = [current,previous];
		this1 = this2;
		var delta = this1;
		this.pageChange.broadcast(delta);
		return current;
	}
	,application: null
	,pageChange: null
	,__class__: crayon_Body
	,__properties__: $extend(foundation_Widget.prototype.__properties__,{set_currentPage:"set_currentPage",set_title:"set_title",get_title:"get_title"})
});
var foundation_Pane = function() {
	foundation_Widget.call(this);
	var this1 = $("<div></div>");
	this.set_el(this1);
};
$hxClasses["foundation.Pane"] = foundation_Pane;
foundation_Pane.__name__ = ["foundation","Pane"];
foundation_Pane.__super__ = foundation_Widget;
foundation_Pane.prototype = $extend(foundation_Widget.prototype,{
	__class__: foundation_Pane
});
var crayon_Page = function() {
	this.opened = false;
	this.previousPage = null;
	foundation_Pane.call(this);
	this.body = null;
	this.set_title("");
	this.attachments = [];
};
$hxClasses["crayon.Page"] = crayon_Page;
crayon_Page.__name__ = ["crayon","Page"];
crayon_Page.__super__ = foundation_Pane;
crayon_Page.prototype = $extend(foundation_Pane.prototype,{
	open: function(body) {
		if(!this.opened) {
			this.opened = true;
		}
		this.body = body;
		this.set_active(true);
	}
	,reopen: function(body) {
		this.body = body;
		this.set_active(true);
	}
	,close: function() {
		this.destroy();
		this.set_active(false);
	}
	,back: function() {
		if(this.previousPage != null) {
			this.body.open(this.previousPage);
		}
	}
	,attachController: function(c) {
		this.attachments.push(c);
		c.attach(this);
	}
	,detachController: function(c) {
		HxOverrides.remove(this.attachments,c);
		c.detach(this);
	}
	,disableAllControllers: function() {
		var _g = 0;
		var _g1 = this.attachments;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(!c._disabled) {
				c.disable();
			}
		}
	}
	,enableAllControllers: function() {
		var _g = 0;
		var _g1 = this.attachments;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c._disabled) {
				c.enable();
			}
		}
	}
	,get_active: function() {
		return this["is"](".active");
	}
	,set_active: function(v) {
		(v ? $bind(this,this.addClass) : $bind(this,this.removeClass))("active");
		return this["is"](".active");
	}
	,title: null
	,set_title: function(v) {
		var r = this.title = v;
		if(this.body != null) {
			this.body.application.title = this.title;
		}
		return r;
	}
	,body: null
	,previousPage: null
	,opened: null
	,attachments: null
	,__class__: crayon_Page
	,__properties__: $extend(foundation_Pane.prototype.__properties__,{set_title:"set_title",set_active:"set_active",get_active:"get_active"})
});
var crayon_PageController = function() {
	this.page = null;
	this._disabled = false;
};
$hxClasses["crayon.PageController"] = crayon_PageController;
crayon_PageController.__name__ = ["crayon","PageController"];
crayon_PageController.prototype = {
	attach: function(p) {
		this.page = p;
	}
	,detach: function(p) {
		this.page = null;
	}
	,disable: function() {
		this._disabled = true;
	}
	,enable: function() {
		this._disabled = false;
	}
	,isDisabled: function() {
		return this._disabled;
	}
	,page: null
	,_disabled: null
	,__class__: crayon_PageController
};
var electron_Tools = function() { };
$hxClasses["electron.Tools"] = electron_Tools;
electron_Tools.__name__ = ["electron","Tools"];
electron_Tools.defer = function(action) {
	process.nextTick(action);
};
var electron_ext_App = function() { };
$hxClasses["electron.ext.App"] = electron_ext_App;
electron_ext_App.__name__ = ["electron","ext","App"];
electron_ext_App.onReady = function(callback) {
	electron_ext_ExtApp.on("ready",callback);
};
electron_ext_App.quit = function() {
	electron_ext_ExtApp.quit();
};
electron_ext_App.exit = function(code) {
	electron_ext_ExtApp.exit(code);
};
electron_ext_App.relaunch = function(options) {
	electron_ext_ExtApp.relaunch(options);
};
electron_ext_App.isReady = function() {
	return electron_ext_ExtApp.isReady();
};
electron_ext_App.focus = function() {
	electron_ext_ExtApp.focus();
};
electron_ext_App.getAppPath = function() {
	var this1 = new tannus_sys_CPath(electron_ext_ExtApp.getAppPath());
	return this1;
};
electron_ext_App.getPath = function(name) {
	var this1 = new tannus_sys_CPath(electron_ext_ExtApp.getPath(name));
	return this1;
};
electron_ext_App.getVersion = function() {
	return electron_ext_ExtApp.getVersion();
};
electron_ext_App.getName = function() {
	return electron_ext_ExtApp.getName();
};
electron_ext_App.on = function(name,f) {
	electron_ext_ExtApp.on(name,f);
};
var electron_ext_BrowserWindow = require("electron").remote.BrowserWindow;
var electron_ext_Dialog = require("electron").remote.dialog;
var electron_ext_ExtApp = require("electron").remote.app;
var electron_ext_ExtNativeImage = require("electron").remote.nativeImage;
var electron_ext_FileFilter = function(name,extensions) {
	this.name = name;
	this.extensions = extensions;
};
$hxClasses["electron.ext.FileFilter"] = electron_ext_FileFilter;
electron_ext_FileFilter.__name__ = ["electron","ext","FileFilter"];
electron_ext_FileFilter.prototype = {
	name: null
	,extensions: null
	,__class__: electron_ext_FileFilter
};
var electron_ext_IpcRenderer = require("electron").ipcRenderer;
var electron_ext_Menu = require("electron").remote.Menu;
var electron_ext_MenuItem = require("electron").remote.MenuItem;
var electron_ext__$NativeImage_NativeImage_$Impl_$ = {};
$hxClasses["electron.ext._NativeImage.NativeImage_Impl_"] = electron_ext__$NativeImage_NativeImage_$Impl_$;
electron_ext__$NativeImage_NativeImage_$Impl_$.__name__ = ["electron","ext","_NativeImage","NativeImage_Impl_"];
electron_ext__$NativeImage_NativeImage_$Impl_$._new = function(img) {
	var this1 = img;
	return this1;
};
electron_ext__$NativeImage_NativeImage_$Impl_$.toPNG = function(this1) {
	return tannus_io_impl_NodeBinary.ofData(this1.toPNG());
};
electron_ext__$NativeImage_NativeImage_$Impl_$.toJPEG = function(this1,quality) {
	return tannus_io_impl_NodeBinary.ofData(this1.toJPEG(quality));
};
electron_ext__$NativeImage_NativeImage_$Impl_$.toBitmap = function(this1) {
	return tannus_io_impl_NodeBinary.ofData(this1.toBitmap());
};
electron_ext__$NativeImage_NativeImage_$Impl_$.getBitmap = function(this1) {
	return tannus_io_impl_NodeBinary.ofData(this1.getBitmap());
};
electron_ext__$NativeImage_NativeImage_$Impl_$.getSize = function(this1) {
	var s = this1.getSize();
	return new tannus_geom2_Rect(0,0,s.width,s.height);
};
electron_ext__$NativeImage_NativeImage_$Impl_$.crop = function(this1,x,y,w,h) {
	var this2 = this1.crop({ x : x, y : y, width : w, height : h});
	return this2;
};
electron_ext__$NativeImage_NativeImage_$Impl_$.createEmpty = function() {
	return electron_ext_ExtNativeImage.createEmpty();
};
electron_ext__$NativeImage_NativeImage_$Impl_$.createFromPath = function(path) {
	return electron_ext_ExtNativeImage.createFromPath(path);
};
electron_ext__$NativeImage_NativeImage_$Impl_$.createFromBuffer = function(buffer,options) {
	return electron_ext_ExtNativeImage.createFromBuffer(buffer,options);
};
electron_ext__$NativeImage_NativeImage_$Impl_$.createFromByteArray = function(bytes,options) {
	return electron_ext_ExtNativeImage.createFromBuffer(bytes.b,options);
};
electron_ext__$NativeImage_NativeImage_$Impl_$.createFromDataURL = function(url) {
	return electron_ext_ExtNativeImage.createFromDataURL(url);
};
electron_ext__$NativeImage_NativeImage_$Impl_$.ba = function(b) {
	return tannus_io_impl_NodeBinary.ofData(b);
};
var electron_ext_Remote = require("electron").remote;
var electron_ext__$Tray_Tray_$Impl_$ = {};
$hxClasses["electron.ext._Tray.Tray_Impl_"] = electron_ext__$Tray_Tray_$Impl_$;
electron_ext__$Tray_Tray_$Impl_$.__name__ = ["electron","ext","_Tray","Tray_Impl_"];
electron_ext__$Tray_Tray_$Impl_$._new = function(icon) {
	var this1 = new electron_ext_NTray(icon);
	return this1;
};
electron_ext__$Tray_Tray_$Impl_$.onClick = function(this1,handler) {
	this1.on("click",handler);
};
electron_ext__$Tray_Tray_$Impl_$.on = function(this1,name,handler) {
	this1.on(name,handler);
};
electron_ext__$Tray_Tray_$Impl_$.once = function(this1,name,handler) {
	this1.once(name,handler);
};
electron_ext__$Tray_Tray_$Impl_$.off = function(this1,name,handler) {
	this1.removeListener(name,handler);
};
var electron_ext_NTray = require("electron").remote.Tray;
var electron_ext_WebContentsInterface = function() { };
$hxClasses["electron.ext.WebContentsInterface"] = electron_ext_WebContentsInterface;
electron_ext_WebContentsInterface.__name__ = ["electron","ext","WebContentsInterface"];
electron_ext_WebContentsInterface.prototype = {
	loadURL: null
	,downloadURL: null
	,getURL: null
	,getTitle: null
	,isDestroyed: null
	,isFocused: null
	,isLoading: null
	,isLoadingMainFrame: null
	,isWaitingForResponse: null
	,stop: null
	,reload: null
	,reloadIgnoringCache: null
	,canGoBack: null
	,canGoForward: null
	,canGoToOffset: null
	,clearHistory: null
	,goBack: null
	,goForward: null
	,goToIndex: null
	,goToOffset: null
	,isCrashed: null
	,getUserAgent: null
	,setUserAgent: null
	,insertCSS: null
	,executeJavaScript: null
	,isAudioMuted: null
	,setAudioMuted: null
	,setZoomFactor: null
	,getZoomFactor: null
	,setZoomLevel: null
	,getZoomLevel: null
	,undo: null
	,redo: null
	,cut: null
	,copy: null
	,copyImageAt: null
	,paste: null
	,pasteAndMatchStyle: null
	,'delete': null
	,selectAll: null
	,unselect: null
	,replace: null
	,insertText: null
	,addWorkSpace: null
	,removeWorkSpace: null
	,openDevTools: null
	,closeDevTools: null
	,isDevToolsOpened: null
	,isDevToolsFocused: null
	,toggleDevTools: null
	,inspectElement: null
	,session: null
	,hostWebContents: null
	,devToolsWebContents: null
	,__class__: electron_ext_WebContentsInterface
};
var electron_ipc_IpcAddress = function(id,type) {
	this.id = id;
	this.type = type;
};
$hxClasses["electron.ipc.IpcAddress"] = electron_ipc_IpcAddress;
electron_ipc_IpcAddress.__name__ = ["electron","ipc","IpcAddress"];
electron_ipc_IpcAddress.prototype = {
	clone: function() {
		return new electron_ipc_IpcAddress(this.id,this.type);
	}
	,hxSerialize: function(s) {
		var w = $bind(s,s.serialize);
		w(this.id);
		w(this.type);
	}
	,hxUnserialize: function(u) {
		var r = $bind(u,u.unserialize);
		this.id = r();
		this.type = r();
	}
	,id: null
	,type: null
	,__class__: electron_ipc_IpcAddress
};
var electron_ipc_IpcAddressType = $hxClasses["electron.ipc.IpcAddressType"] = { __ename__ : ["electron","ipc","IpcAddressType"], __constructs__ : ["TMain","TBrowserWindow"] };
electron_ipc_IpcAddressType.TMain = ["TMain",0];
electron_ipc_IpcAddressType.TMain.toString = $estr;
electron_ipc_IpcAddressType.TMain.__enum__ = electron_ipc_IpcAddressType;
electron_ipc_IpcAddressType.TBrowserWindow = function(windowId) { var $x = ["TBrowserWindow",1,windowId]; $x.__enum__ = electron_ipc_IpcAddressType; $x.toString = $estr; return $x; };
var electron_ipc_IpcBus = function() {
	this.sockets = new haxe_ds_StringMap();
	this.socketConnected = new tannus_io_Signal();
	this.__init();
};
$hxClasses["electron.ipc.IpcBus"] = electron_ipc_IpcBus;
electron_ipc_IpcBus.__name__ = ["electron","ipc","IpcBus"];
electron_ipc_IpcBus.get = function() {
	if(electron_ipc_IpcBus._instance == null) {
		electron_ipc_IpcBus._instance = new electron_ipc_IpcBus_$Renderer();
	}
	return electron_ipc_IpcBus._instance;
};
electron_ipc_IpcBus.prototype = {
	__init: function() {
		return;
	}
	,createSocket: function(id,peerType) {
		throw new js__$Boot_HaxeError("Not implemented!");
	}
	,canConnectTo: function(address) {
		return true;
	}
	,_address: function(id) {
		return new electron_ipc_IpcAddress(id,this.addressType);
	}
	,_broadcast: function(message) {
		throw new js__$Boot_HaxeError("Not implemented!");
	}
	,_socket: function(peer) {
		throw new js__$Boot_HaxeError("Not implemented!");
	}
	,socketConnected: null
	,addressType: null
	,sockets: null
	,__class__: electron_ipc_IpcBus
};
var electron_ipc_IpcBusPacket = $hxClasses["electron.ipc.IpcBusPacket"] = { __ename__ : ["electron","ipc","IpcBusPacket"], __constructs__ : ["Connect","Message"] };
electron_ipc_IpcBusPacket.Connect = function(address) { var $x = ["Connect",0,address]; $x.__enum__ = electron_ipc_IpcBusPacket; $x.toString = $estr; return $x; };
electron_ipc_IpcBusPacket.Message = function(message) { var $x = ["Message",1,message]; $x.__enum__ = electron_ipc_IpcBusPacket; $x.toString = $estr; return $x; };
var electron_ipc_IpcBus_$Renderer = function() {
	electron_ipc_IpcBus.call(this);
	this.__init();
};
$hxClasses["electron.ipc.IpcBus_Renderer"] = electron_ipc_IpcBus_$Renderer;
electron_ipc_IpcBus_$Renderer.__name__ = ["electron","ipc","IpcBus_Renderer"];
electron_ipc_IpcBus_$Renderer.__super__ = electron_ipc_IpcBus;
electron_ipc_IpcBus_$Renderer.prototype = $extend(electron_ipc_IpcBus.prototype,{
	__init: function() {
		this.bw = electron_ext_Remote.getCurrentWindow();
		this.addressType = electron_ipc_IpcAddressType.TBrowserWindow(this.bw.id);
		electron_ext_IpcRenderer.on("ipc::sockets",$bind(this,this.__incoming_raw));
	}
	,createSocket: function(id,peerType) {
		var _gthis = this;
		if(peerType == null) {
			peerType = electron_ipc_IpcAddressType.TMain;
		}
		var packet = electron_ipc_IpcBusPacket.Connect(new electron_ipc_IpcAddress(id,this.addressType));
		var frozenPacket = electron_ipc_IpcTools.serialize(packet);
		console.log("packet: " + frozenPacket);
		var status = electron_ext_IpcRenderer.sendSync("ipc::sockets" + "-sync",[frozenPacket]);
		console.log("status: " + (status == null ? "null" : "" + status));
		if(status) {
			var socket = this._socket(new electron_ipc_IpcAddress(id,peerType));
			var _this = this.sockets;
			if(__map_reserved[id] != null) {
				_this.setReserved(id,socket);
			} else {
				_this.h[id] = socket;
			}
			var this1 = window;
			this1.requestAnimationFrame(function() {
				_gthis.socketConnected.broadcast(socket);
			});
			return socket;
		}
		throw new js__$Boot_HaxeError("Error: Peer socket was not created");
	}
	,_broadcast: function(message) {
		var _g = message.address.type;
		switch(_g[1]) {
		case 0:
			this._sendToMain(message);
			break;
		case 1:
			var wid = _g[2];
			var $window = electron_ext_BrowserWindow.fromId(wid);
			if($window == null) {
				throw new js__$Boot_HaxeError("Error: Invalid window id " + wid);
			}
			this._sendToBrowserWindow($window,message);
			break;
		}
	}
	,_sendToMain: function(message) {
		console.log("message sent: #" + message.id);
		var frozenMsg = message.freeze();
		var packet = electron_ipc_IpcBusPacket.Message(frozenMsg);
		electron_ext_IpcRenderer.send("ipc::sockets",[electron_ipc_IpcTools.serialize(packet)]);
	}
	,_sendToBrowserWindow: function(window,message) {
	}
	,deliver: function(msg) {
		var key = msg.address.id;
		var _this = this.sockets;
		var socket = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(socket != null) {
			socket._deliver(msg);
		} else {
			throw new js__$Boot_HaxeError("Error: Socket not found");
		}
	}
	,__incoming_raw: function(event,values) {
		if(!Lambda.empty(values)) {
			var str_data = Std.string(values[0]);
			try {
				var data = haxe_Unserializer.run(str_data);
				if(js_Boot.__instanceof(data,electron_ipc_IpcBusPacket)) {
					this.__incoming_packet(event,js_Boot.__cast(data , electron_ipc_IpcBusPacket));
				}
			} catch( error ) {
				return;
			}
		}
	}
	,__incoming_packet: function(event,packet) {
		console.log(packet);
		if(packet[1] == 1) {
			var frozenMsg = packet[2];
			var message = frozenMsg.thaw();
			this.deliver(message);
		} else {
			return;
		}
	}
	,_socket: function(peer) {
		return new electron_ipc_IpcSocket_$Renderer(this,new electron_ipc_IpcAddress(peer.id,this.addressType),peer);
	}
	,bw: null
	,__class__: electron_ipc_IpcBus_$Renderer
});
var electron_ipc_IpcFrozenMessage = function(type,id,channel,data,sender,address) {
	this.id = id;
	this.type = type;
	this.channel = channel;
	this.data = data;
	this.sender = sender;
	this.address = address;
};
$hxClasses["electron.ipc.IpcFrozenMessage"] = electron_ipc_IpcFrozenMessage;
electron_ipc_IpcFrozenMessage.__name__ = ["electron","ipc","IpcFrozenMessage"];
electron_ipc_IpcFrozenMessage.prototype = {
	clone: function() {
		return new electron_ipc_IpcFrozenMessage(Type.createEnumIndex(electron_ipc_IpcMessageType,this.type[1],this.type.slice(2).slice()),this.id,this.channel,this.data,this.sender.clone(),this.address.clone());
	}
	,thaw: function() {
		var cookedData = haxe_Unserializer.run(this.data);
		var message = new electron_ipc_IpcMessage(Type.createEnumIndex(electron_ipc_IpcMessageType,this.type[1],this.type.slice(2).slice()),this.channel,cookedData,this.sender.clone(),this.address.clone());
		message.id = this.id;
		return message;
	}
	,type: null
	,channel: null
	,id: null
	,data: null
	,sender: null
	,address: null
	,__class__: electron_ipc_IpcFrozenMessage
};
var electron_ipc_IpcMessage = function(type,channel,data,sender,address) {
	this.id = tannus_ds_Memory.allocRandomId(8);
	this.type = type;
	this.channel = channel;
	this.data = data;
	this.sender = sender;
	this.address = address;
};
$hxClasses["electron.ipc.IpcMessage"] = electron_ipc_IpcMessage;
electron_ipc_IpcMessage.__name__ = ["electron","ipc","IpcMessage"];
electron_ipc_IpcMessage.prototype = {
	clone: function() {
		return new electron_ipc_IpcMessage(this.type,this.channel,this.data,this.sender.clone(),this.address.clone());
	}
	,freeze: function() {
		var s = new haxe_Serializer();
		s.useCache = s.useEnumIndex = true;
		s.serialize(this.data);
		var frozenData = s.toString();
		return new electron_ipc_IpcFrozenMessage(this.type,this.id,this.channel,frozenData,this.sender.clone(),this.address.clone());
	}
	,reply: function(data) {
		return;
	}
	,getRecipientId: function() {
		return this.address.id;
	}
	,getSenderId: function() {
		return this.sender.id;
	}
	,id: null
	,type: null
	,channel: null
	,data: null
	,sender: null
	,address: null
	,__class__: electron_ipc_IpcMessage
};
var electron_ipc_IpcMessageType = $hxClasses["electron.ipc.IpcMessageType"] = { __ename__ : ["electron","ipc","IpcMessageType"], __constructs__ : ["TNormal","TDestroy","TReply"] };
electron_ipc_IpcMessageType.TNormal = ["TNormal",0];
electron_ipc_IpcMessageType.TNormal.toString = $estr;
electron_ipc_IpcMessageType.TNormal.__enum__ = electron_ipc_IpcMessageType;
electron_ipc_IpcMessageType.TDestroy = ["TDestroy",1];
electron_ipc_IpcMessageType.TDestroy.toString = $estr;
electron_ipc_IpcMessageType.TDestroy.__enum__ = electron_ipc_IpcMessageType;
electron_ipc_IpcMessageType.TReply = ["TReply",2];
electron_ipc_IpcMessageType.TReply.toString = $estr;
electron_ipc_IpcMessageType.TReply.__enum__ = electron_ipc_IpcMessageType;
var electron_ipc_IpcSocket = function(address) {
	this.address = address;
	this.ed = new tannus_io_EventDispatcher();
	this.ed.__checkEvents = false;
	this.awaitingReply = new haxe_ds_StringMap();
};
$hxClasses["electron.ipc.IpcSocket"] = electron_ipc_IpcSocket;
electron_ipc_IpcSocket.__name__ = ["electron","ipc","IpcSocket"];
electron_ipc_IpcSocket.create = function(address) {
	var _g = address.type;
	switch(_g[1]) {
	case 0:
		return new electron_ipc_IpcSocket(address);
	case 1:
		var windowId = _g[2];
		return new electron_ipc_IpcSocket(address);
	}
};
electron_ipc_IpcSocket.prototype = {
	on: function(channel,handler) {
		this.ed.on(channel,handler);
	}
	,once: function(channel,handler) {
		this.ed.once(channel,handler);
	}
	,_deliver: function(message) {
		throw new js__$Boot_HaxeError("Not implemented!");
	}
	,send: function(channel,data,onreply) {
		var message = new electron_ipc_IpcMessage(electron_ipc_IpcMessageType.TNormal,channel,data,this.address,this.peerAddress);
		var messageId = message.id;
		if(onreply != null) {
			var _this = this.awaitingReply;
			if(__map_reserved[messageId] != null) {
				_this.setReserved(messageId,onreply);
			} else {
				_this.h[messageId] = onreply;
			}
		}
		this.bus._broadcast(message);
	}
	,sendReply: function(message,data) {
		var replyMsg = new electron_ipc_IpcMessage(electron_ipc_IpcMessageType.TReply,message.channel,data,message.address,message.sender);
		replyMsg.id = message.id;
		this._deliver(replyMsg);
	}
	,address: null
	,peerAddress: null
	,bus: null
	,ed: null
	,awaitingReply: null
	,__class__: electron_ipc_IpcSocket
};
var electron_ipc_IpcSocket_$Renderer = function(bus,address,peerAddress) {
	electron_ipc_IpcSocket.call(this,address);
	this.bus = bus;
	this.peerAddress = peerAddress;
};
$hxClasses["electron.ipc.IpcSocket_Renderer"] = electron_ipc_IpcSocket_$Renderer;
electron_ipc_IpcSocket_$Renderer.__name__ = ["electron","ipc","IpcSocket_Renderer"];
electron_ipc_IpcSocket_$Renderer.__super__ = electron_ipc_IpcSocket;
electron_ipc_IpcSocket_$Renderer.prototype = $extend(electron_ipc_IpcSocket.prototype,{
	_deliver: function(msg) {
		var _g = msg.type;
		switch(_g[1]) {
		case 0:
			var f = $bind(this,this.sendReply);
			var a1 = msg;
			msg.reply = function(a2) {
				f(a1,a2);
			};
			this.ed.dispatch(msg.channel,msg);
			break;
		case 1:
			console.log("deleting IpcSocket..");
			break;
		case 2:
			console.log("received reply-type message for #" + msg.id);
			var handler = this.awaitingReply.get(msg.id);
			console.log(handler);
			if(handler != null) {
				handler(msg.data);
			}
			break;
		}
	}
	,window: null
	,__class__: electron_ipc_IpcSocket_$Renderer
});
var electron_ipc_IpcTools = function() { };
$hxClasses["electron.ipc.IpcTools"] = electron_ipc_IpcTools;
electron_ipc_IpcTools.__name__ = ["electron","ipc","IpcTools"];
electron_ipc_IpcTools.serialize = function(value) {
	var s = new haxe_Serializer();
	s.useCache = s.useEnumIndex = true;
	s.serialize(value);
	return s.toString();
};
electron_ipc_IpcTools.unserialize = function(data) {
	return haxe_Unserializer.run(data);
};
var foundation_Input = function() {
	foundation_Widget.call(this);
};
$hxClasses["foundation.Input"] = foundation_Input;
foundation_Input.__name__ = ["foundation","Input"];
foundation_Input.__super__ = foundation_Widget;
foundation_Input.prototype = $extend(foundation_Widget.prototype,{
	getValue: function() {
		return null;
	}
	,setValue: function(value) {
	}
	,__class__: foundation_Input
});
var foundation_DOMInput = function() {
	this._label = null;
	this.lastValue = null;
	foundation_Input.call(this);
	this.changed = new tannus_io_Signal();
	var this1 = $("<input></input>");
	this.set_el(this1);
	this.__listen();
};
$hxClasses["foundation.DOMInput"] = foundation_DOMInput;
foundation_DOMInput.__name__ = ["foundation","DOMInput"];
foundation_DOMInput.__super__ = foundation_Input;
foundation_DOMInput.prototype = $extend(foundation_Input.prototype,{
	focus: function() {
		this.get_iel().focus();
	}
	,select: function(start,end) {
		this.get_iel().select();
		if(start != null) {
			this.get_iel().selectionStart = start;
			var tmp = end == null ? this.get_iel().value.length : end;
			this.get_iel().selectionEnd = tmp;
		}
	}
	,__listen: function() {
		this.forwardEvent("change");
		this.on("change",$bind(this,this.__change));
	}
	,__change: function(event) {
		var this1;
		var this2 = [this.getValue(),this.lastValue];
		this1 = this2;
		var delta = this1;
		this.lastValue = this.getValue();
		this.changed.broadcast(delta);
	}
	,label: function(txt) {
		var _gthis = this;
		if(this._active) {
			var this1 = window;
			this1.requestAnimationFrame(function() {
				if(_gthis._label == null) {
					_gthis._label = new foundation_Label();
					_gthis._label.set_owner(_gthis);
					_gthis.after(_gthis._label);
				}
				_gthis._label.set_text(txt);
			});
		} else {
			this.once("activated",function() {
				if(_gthis._label == null) {
					_gthis._label = new foundation_Label();
					_gthis._label.set_owner(_gthis);
					_gthis.after(_gthis._label);
				}
				_gthis._label.set_text(txt);
			});
		}
	}
	,getValue: function() {
		return this.get_iel().value;
	}
	,setValue: function(v) {
		this.get_iel().value = v;
	}
	,get_ntype: function() {
		return this.get_iel().type;
	}
	,set_ntype: function(v) {
		return this.get_iel().type = v;
	}
	,get_iel: function() {
		return this.el.get(0);
	}
	,changed: null
	,lastValue: null
	,_label: null
	,__class__: foundation_DOMInput
	,__properties__: $extend(foundation_Input.prototype.__properties__,{get_iel:"get_iel",set_ntype:"set_ntype",get_ntype:"get_ntype"})
});
var foundation_FlexPane = function() {
	foundation_Pane.call(this);
	this.addClass("columns");
	this._columnManager = new foundation_FlexColumnSizing(this);
};
$hxClasses["foundation.FlexPane"] = foundation_FlexPane;
foundation_FlexPane.__name__ = ["foundation","FlexPane"];
foundation_FlexPane.__super__ = foundation_Pane;
foundation_FlexPane.prototype = $extend(foundation_Pane.prototype,{
	getColumns: function(n) {
		return this._columnManager.sizeManager(n).get_size();
	}
	,setColumns: function(c,n) {
		return this._columnManager.sizeManager(n).set_size(c);
	}
	,get_columns: function() {
		return this._columnManager;
	}
	,_columnManager: null
	,__class__: foundation_FlexPane
	,__properties__: $extend(foundation_Pane.prototype.__properties__,{get_columns:"get_columns"})
});
var foundation_FlexColumnSizing = function(p) {
	this.pane = p;
	this.breakpoints = new tannus_ds_dict_StringDict();
	var _g = 0;
	var _g1 = foundation_Foundation.mqBreakpoints;
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		this.breakpoints.set(name,new foundation_FlexColumnSize(this.pane,name));
	}
};
$hxClasses["foundation.FlexColumnSizing"] = foundation_FlexColumnSizing;
foundation_FlexColumnSizing.__name__ = ["foundation","FlexColumnSizing"];
foundation_FlexColumnSizing.prototype = {
	on: function(breakpoint) {
		var _this = this.breakpoints.m;
		return __map_reserved[breakpoint] != null ? _this.getReserved(breakpoint) : _this.h[breakpoint];
	}
	,sizeManager: function(name) {
		if(name == null) {
			name = window.Foundation.MediaQuery.current;
		}
		return this.breakpoints.get(name);
	}
	,getSize: function(name) {
		return this.sizeManager(name).get_size();
	}
	,setSize: function(value,name) {
		return this.sizeManager(name).set_size(value);
	}
	,pane: null
	,breakpoints: null
	,__class__: foundation_FlexColumnSizing
};
var foundation_FlexColumnSize = function(pan,nam) {
	this.pane = pan;
	this.name = nam;
};
$hxClasses["foundation.FlexColumnSize"] = foundation_FlexColumnSize;
foundation_FlexColumnSize.__name__ = ["foundation","FlexColumnSize"];
foundation_FlexColumnSize.prototype = {
	'is': function(value) {
		return this.set_size(value);
	}
	,get_size: function() {
		var _gthis = this;
		var _this = this.pane;
		var scn;
		var this11 = _this.el;
		if(this11.attr("class") != null) {
			var this11 = _this.el;
			scn = this11.attr("class").split(" ");
		} else {
			scn = [];
		}
		var scn1 = tannus_ds_ArrayTools.firstMatch(scn,function(item) {
			return StringTools.startsWith(item,"" + _gthis.name + "-");
		});
		if(scn1 == null) {
			return null;
		} else {
			return Std.parseInt(tannus_ds_StringUtils.after(scn1,"" + this.name + "-"));
		}
	}
	,set_size: function(v) {
		var _gthis = this;
		if(v == null) {
			var _g = 0;
			var _this = this.pane;
			var _g1;
			var this11 = _this.el;
			if(this11.attr("class") != null) {
				var this11 = _this.el;
				_g1 = this11.attr("class").split(" ");
			} else {
				_g1 = [];
			}
			var _g11 = _g1.filter(function(item) {
				return StringTools.startsWith(item,"" + _gthis.name + "-");
			});
			while(_g < _g11.length) {
				var c = _g11[_g];
				++_g;
				this.pane.removeClass(c);
			}
			return null;
		} else {
			var _this1 = this.pane;
			var scn;
			var this21 = _this1.el;
			if(this21.attr("class") != null) {
				var this21 = _this1.el;
				scn = this21.attr("class").split(" ");
			} else {
				scn = [];
			}
			var scn1 = tannus_ds_ArrayTools.firstMatch(scn,function(item1) {
				return StringTools.startsWith(item1,"" + _gthis.name + "-");
			});
			this.pane.removeClass(scn1);
			this.pane.addClass("" + this.name + "-" + v);
			return v;
		}
	}
	,get_shrinks: function() {
		return this.pane["is"](".shrink");
	}
	,set_shrinks: function(v) {
		if(v) {
			this.pane.addClass("shrink");
		} else {
			this.pane.removeClass("shrink");
		}
		return this.pane["is"](".shrink");
	}
	,get_expand: function() {
		if(this.get_size() == null) {
			return !this.pane["is"](".shrink");
		} else {
			return false;
		}
	}
	,set_expand: function(v) {
		if(v) {
			this.set_size(null);
			return !this.set_shrinks(false);
		} else {
			var _g = 0;
			var _this = this.pane;
			var _g1;
			var this11 = _this.el;
			if(this11.attr("class") != null) {
				var this11 = _this.el;
				_g1 = this11.attr("class").split(" ");
			} else {
				_g1 = [];
			}
			var _g11 = _g1.filter(function(item) {
				return StringTools.endsWith(item,"expand");
			});
			while(_g < _g11.length) {
				var item1 = _g11[_g];
				++_g;
				this.pane.removeClass(item1);
			}
			return false;
		}
	}
	,pane: null
	,name: null
	,__class__: foundation_FlexColumnSize
	,__properties__: {set_expand:"set_expand",get_expand:"get_expand",set_shrinks:"set_shrinks",get_shrinks:"get_shrinks",set_size:"set_size",get_size:"get_size"}
};
var foundation_Row = function() {
	foundation_Pane.call(this);
	this.addClass("row");
};
$hxClasses["foundation.Row"] = foundation_Row;
foundation_Row.__name__ = ["foundation","Row"];
foundation_Row.__super__ = foundation_Pane;
foundation_Row.prototype = $extend(foundation_Pane.prototype,{
	collapse: function(doit,breakpoint) {
		if(breakpoint == null) {
			breakpoint = "";
		}
		if(doit == null) {
			doit = true;
		}
		(doit ? $bind(this,this.addClass) : $bind(this,this.removeClass))(breakpoint == null ? "collapse" : "" + breakpoint + "-collapse");
	}
	,uncollapse: function(breakpoint) {
		if(breakpoint == null) {
			this.removeClass("collapse");
		} else {
			this.removeClass("" + breakpoint + "-collapse");
			this.addClass("" + breakpoint + "-uncollapse");
		}
	}
	,get_alignments: function() {
		var tmp;
		var this11 = this.el;
		if(this11.attr("class") != null) {
			var this11 = this.el;
			tmp = this11.attr("class").split(" ");
		} else {
			tmp = [];
		}
		return tannus_ds_ArrayTools.mapfilter(tmp,function(item) {
			return StringTools.startsWith(item,"align-");
		},function(item1) {
			return tannus_ds_StringUtils.after(item1,"align-");
		});
	}
	,set_alignments: function(list) {
		var _g = 0;
		var _g1 = this.get_alignments();
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			this.removeClass("align-" + x);
		}
		var _g2 = 0;
		while(_g2 < list.length) {
			var x1 = list[_g2];
			++_g2;
			this.addClass("align-" + x1);
		}
		return list;
	}
	,__class__: foundation_Row
	,__properties__: $extend(foundation_Pane.prototype.__properties__,{set_alignments:"set_alignments",get_alignments:"get_alignments"})
});
var foundation_FlexRow = function(cols,autoBuild) {
	if(autoBuild == null) {
		autoBuild = true;
	}
	var _gthis = this;
	foundation_Row.call(this);
	this.el.css("max-width","100%");
	if(autoBuild) {
		this.__buildPanes(cols);
	}
	this.on("activate",function(x) {
		tannus_html__$Element_Element_$Impl_$.plugin(_gthis.el,"foundation");
	});
};
$hxClasses["foundation.FlexRow"] = foundation_FlexRow;
foundation_FlexRow.__name__ = ["foundation","FlexRow"];
foundation_FlexRow.__super__ = foundation_Row;
foundation_FlexRow.prototype = $extend(foundation_Row.prototype,{
	__buildPanes: function(list) {
		this.panes = [];
		var _g = 0;
		while(_g < list.length) {
			var count = list[_g];
			++_g;
			this.addPane(count);
		}
	}
	,addPane: function(size) {
		var pane = new foundation_FlexPane();
		pane._columnManager.breakpoints.get("small").set_size(size);
		this.panes.push(pane);
		this.append(pane);
		return pane;
	}
	,pane: function(i) {
		return this.panes[i];
	}
	,iterator: function() {
		return HxOverrides.iter(this.panes);
	}
	,columns: function(breakpoint) {
		var setters = this.panes.map(function(item) {
			return ($_=item._columnManager.sizeManager(breakpoint),$bind($_,$_.set_size));
		});
		console.log(setters);
		return function(sizes) {
			var tups = tannus_ds_ArrayTools.zip(setters,sizes);
			var _g = 0;
			while(_g < tups.length) {
				var t = tups[_g];
				++_g;
				t.left(t.right);
			}
		};
	}
	,panes: null
	,__class__: foundation_FlexRow
});
var foundation_Foundation = $hx_exports["hxFoundation"] = function() { };
$hxClasses["foundation.Foundation"] = foundation_Foundation;
foundation_Foundation.__name__ = ["foundation","Foundation"];
foundation_Foundation.__properties__ = {get_l:"get_l",get_mq:"get_mq"}
foundation_Foundation.initialize = function(element) {
	tannus_html__$Element_Element_$Impl_$.plugin(element,"foundation");
};
foundation_Foundation.reInitializePlugin = function(name) {
	window.Foundation.reInit(name);
};
foundation_Foundation.reInitializePluginList = function(plugins) {
	window.Foundation.reInit(plugins);
};
foundation_Foundation.reInitializeElement = function(e) {
	window.Foundation.reInit(e);
};
foundation_Foundation.pluginInstance = function(pluginName,args) {
	var o = window.Foundation;
	var tmp;
	var tmp1;
	if(o == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + pluginName];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = o[tmp]();
		} else {
			tmp1 = o[pluginName];
		}
	}
	return Type.createInstance(tmp1,args);
};
foundation_Foundation.plugin = function(name) {
	var o = window.Foundation;
	var tmp;
	var pc;
	if(o == null) {
		pc = null;
	} else {
		var pc1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + name];
			pc1 = tmp;
		} else {
			pc1 = false;
		}
		if(pc1) {
			pc = o[tmp]();
		} else {
			pc = o[name];
		}
	}
	if(pc != null) {
		var cl = pc;
		return Reflect.makeVarArgs(function(a1) {
			return Type.createInstance(cl,a1);
		});
	} else {
		return null;
	}
};
foundation_Foundation.get_mq = function() {
	return window.Foundation.MediaQuery;
};
foundation_Foundation.get_l = function() {
	return window.Foundation;
};
var foundation_TextualWidget = function() {
	foundation_Widget.call(this);
};
$hxClasses["foundation.TextualWidget"] = foundation_TextualWidget;
foundation_TextualWidget.__name__ = ["foundation","TextualWidget"];
foundation_TextualWidget.__super__ = foundation_Widget;
foundation_TextualWidget.prototype = $extend(foundation_Widget.prototype,{
	get_textColor: function() {
		var tc = this.el.css("color");
		return tannus_graphics__$Color_TColor.fromString(tc);
	}
	,set_textColor: function(tc) {
		this.el.css("color",tc.toString());
		return this.get_textColor();
	}
	,get_textAlign: function() {
		return this.el.css("text-align");
	}
	,set_textAlign: function(v) {
		this.el.css("text-align",v);
		return v;
	}
	,get_fontFamily: function() {
		return this.el.css("font-family");
	}
	,set_fontFamily: function(nf) {
		this.el.css("font-family",nf);
		return this.get_fontFamily();
	}
	,get_fontSize: function() {
		return this.el.css("font-size");
	}
	,set_fontSize: function(nf) {
		this.el.css("font-size",nf);
		return this.get_fontSize();
	}
	,get_lineHeight: function() {
		return this.el.css("line-height");
	}
	,set_lineHeight: function(nf) {
		this.el.css("line-height",nf);
		return this.get_lineHeight();
	}
	,__class__: foundation_TextualWidget
	,__properties__: $extend(foundation_Widget.prototype.__properties__,{set_lineHeight:"set_lineHeight",get_lineHeight:"get_lineHeight",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_fontFamily:"set_fontFamily",get_fontFamily:"get_fontFamily",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_textColor:"set_textColor",get_textColor:"get_textColor"})
});
var foundation_Heading = function(lvl,txt) {
	foundation_TextualWidget.call(this);
	var this1 = $("<h" + lvl + "></h" + lvl + ">");
	this.set_el(this1);
	if(txt != null) {
		this.set_text(txt);
	}
};
$hxClasses["foundation.Heading"] = foundation_Heading;
foundation_Heading.__name__ = ["foundation","Heading"];
foundation_Heading.__super__ = foundation_TextualWidget;
foundation_Heading.prototype = $extend(foundation_TextualWidget.prototype,{
	__class__: foundation_Heading
});
var foundation_IInput = function() { };
$hxClasses["foundation.IInput"] = foundation_IInput;
foundation_IInput.__name__ = ["foundation","IInput"];
foundation_IInput.prototype = {
	get_name: null
	,set_name: null
	,getValue: null
	,setValue: null
	,__class__: foundation_IInput
	,__properties__: {set_name:"set_name",get_name:"get_name"}
};
var foundation_Image = function(source) {
	foundation_Widget.call(this);
	var this1 = $("<img></img>");
	this.set_el(this1);
	if(source != null) {
		this.el.get(0).src = source;
	}
};
$hxClasses["foundation.Image"] = foundation_Image;
foundation_Image.__name__ = ["foundation","Image"];
foundation_Image.__super__ = foundation_Widget;
foundation_Image.prototype = $extend(foundation_Widget.prototype,{
	get_image: function() {
		return this.el.get(0);
	}
	,get_src: function() {
		return this.el.get(0).src;
	}
	,set_src: function(v) {
		return this.el.get(0).src = v;
	}
	,get_naturalWidth: function() {
		return this.el.get(0).naturalWidth;
	}
	,get_naturalHeight: function() {
		return this.el.get(0).naturalHeight;
	}
	,get_width: function() {
		return this.el.get(0).width;
	}
	,set_width: function(v) {
		return this.el.get(0).width = Math.round(v);
	}
	,get_height: function() {
		return this.el.get(0).height;
	}
	,set_height: function(v) {
		return this.el.get(0).height = Math.round(v);
	}
	,get_complete: function() {
		if(this.el.get(0).complete && this.el.get(0).src != null) {
			return this.el.get(0).src != "";
		} else {
			return false;
		}
	}
	,__class__: foundation_Image
	,__properties__: $extend(foundation_Widget.prototype.__properties__,{get_complete:"get_complete",get_naturalHeight:"get_naturalHeight",get_naturalWidth:"get_naturalWidth",set_src:"set_src",get_src:"get_src",get_image:"get_image"})
});
var foundation_Label = function() {
	foundation_Widget.call(this);
	var this1 = $("<label></label>");
	this.set_el(this1);
	this.position = "after";
};
$hxClasses["foundation.Label"] = foundation_Label;
foundation_Label.__name__ = ["foundation","Label"];
foundation_Label.__super__ = foundation_Widget;
foundation_Label.prototype = $extend(foundation_Widget.prototype,{
	applyOptions: function(o) {
		if(o != null) {
			if(o.position != null) {
				this.position = o.position;
			}
		}
	}
	,link: function(w) {
		this.set_owner(w);
		var _g = this.position;
		switch(_g) {
		case "after":
			w.after(this);
			break;
		case "before":
			w.before(this);
			break;
		}
	}
	,get_ownerId: function() {
		return this.el.attr("for");
	}
	,set_ownerId: function(v) {
		return tannus_html__$Element_Element_$Impl_$.set(this.el,"for",v);
	}
	,get_owner: function() {
		if(this.el.attr("for") != null) {
			var this1 = $("#" + this.uid);
			var oe = this1;
			return oe.data("haxe-foundation-widget");
		} else {
			return null;
		}
	}
	,set_owner: function(v) {
		if(v != null) {
			tannus_html__$Element_Element_$Impl_$.set(this.el,"for",v.uid);
		} else {
			tannus_html__$Element_Element_$Impl_$.set(this.el,"for",null);
		}
		return this.get_owner();
	}
	,position: null
	,__class__: foundation_Label
	,__properties__: $extend(foundation_Widget.prototype.__properties__,{set_owner:"set_owner",get_owner:"get_owner",set_ownerId:"set_ownerId",get_ownerId:"get_ownerId"})
});
var foundation__$Label_LabelPos_$Impl_$ = {};
$hxClasses["foundation._Label.LabelPos_Impl_"] = foundation__$Label_LabelPos_$Impl_$;
foundation__$Label_LabelPos_$Impl_$.__name__ = ["foundation","_Label","LabelPos_Impl_"];
foundation__$Label_LabelPos_$Impl_$.fromString = function(s) {
	var _g = StringTools.trim(s).toLowerCase();
	switch(_g) {
	case "after":
		return "after";
	case "before":
		return "before";
	default:
		throw new js__$Boot_HaxeError("Error: \"" + s + "\" is not a valid LabelPos");
	}
};
var foundation_LabelSpan = function() {
	foundation_Widget.call(this);
	var this1 = $("<span></span>");
	this.set_el(this1);
	this.addClass("label");
};
$hxClasses["foundation.LabelSpan"] = foundation_LabelSpan;
foundation_LabelSpan.__name__ = ["foundation","LabelSpan"];
foundation_LabelSpan.__super__ = foundation_Widget;
foundation_LabelSpan.prototype = $extend(foundation_Widget.prototype,{
	cs: function(n,v) {
		if(v == null) {
			v = true;
		}
		(v ? $bind(this,this.addClass) : $bind(this,this.removeClass))(n);
		return this["is"]("." + n);
	}
	,secondary: function(v) {
		(v ? $bind(this,this.addClass) : $bind(this,this.removeClass))("secondary");
		this["is"]("." + "secondary");
	}
	,success: function(v) {
		(v ? $bind(this,this.addClass) : $bind(this,this.removeClass))("success");
		this["is"]("." + "success");
	}
	,alert: function(v) {
		(v ? $bind(this,this.addClass) : $bind(this,this.removeClass))("alter");
		this["is"]("." + "alter");
	}
	,warning: function(v) {
		(v ? $bind(this,this.addClass) : $bind(this,this.removeClass))("warning");
		this["is"]("." + "warning");
	}
	,__class__: foundation_LabelSpan
});
var foundation_List = function(ordered) {
	if(ordered == null) {
		ordered = true;
	}
	foundation_Widget.call(this);
	var tag = ordered ? "ul" : "ol";
	var this1 = $("<" + tag + "></" + tag + ">");
	this.set_el(this1);
	this.listItems = [];
};
$hxClasses["foundation.List"] = foundation_List;
foundation_List.__name__ = ["foundation","List"];
foundation_List.__super__ = foundation_Widget;
foundation_List.prototype = $extend(foundation_Widget.prototype,{
	addItem: function(thing) {
		var item = new foundation_ListItem(this);
		if(js_Boot.__instanceof(thing,foundation_Widget)) {
			var w = thing;
			item.append(w);
			this.listItems.push(item);
		} else {
			var w1 = new foundation_Widget();
			var this1 = $(thing);
			w1.set_el(this1);
			item.append(w1);
			this.listItems.push(item);
		}
		this.append(item);
		this.attach(item);
	}
	,listItems: null
	,__class__: foundation_List
});
var foundation_ListItem = function(l,c) {
	foundation_Widget.call(this);
	var this1 = $("<li></li>");
	this.set_el(this1);
	if(c != null) {
		this.append(c);
	}
};
$hxClasses["foundation.ListItem"] = foundation_ListItem;
foundation_ListItem.__name__ = ["foundation","ListItem"];
foundation_ListItem.__super__ = foundation_Widget;
foundation_ListItem.prototype = $extend(foundation_Widget.prototype,{
	__class__: foundation_ListItem
});
var foundation_Styles = function(ref) {
	this._el = ref;
};
$hxClasses["foundation.Styles"] = foundation_Styles;
foundation_Styles.__name__ = ["foundation","Styles"];
foundation_Styles.prototype = {
	css: function() {
		var e = this._el.get();
		if(e == null) {
			throw new js__$Boot_HaxeError("WidgetError: Cannot modify an Element which does not exist!");
		} else {
			return tannus_html__$Element_Element_$Impl_$.get_style(e);
		}
	}
	,margin: function(nm) {
		if(nm != null) {
			if((nm instanceof Array) && nm.__enum__ == null) {
				var na = nm;
				this.set_marginTop(na.shift());
				this.set_marginRight(na.shift());
				this.set_marginBottom(na.shift());
				this.set_marginLeft(na.shift());
			} else if(typeof(nm) == "number") {
				this.set_marginTop(nm);
				this.set_marginBottom(nm);
				this.set_marginLeft(nm);
				this.set_marginRight(nm);
			}
		}
		return [this.get_marginTop(),this.get_marginRight(),this.get_marginBottom(),this.get_marginLeft()];
	}
	,padding: function(top,right,bottom,left) {
		var c = this.css();
		if(top != null && right != null && bottom != null && left != null) {
			c.set("padding-top",(top != null ? top : top) + "px");
			c.set("padding-right",(right != null ? right : right) + "px");
			c.set("padding-left",(left != null ? left : left) + "px");
			c.set("padding-bottom",(bottom != null ? bottom : bottom) + "px");
		} else if(top != null) {
			c.set("padding",(top != null ? top : top) + "px");
		}
		return { top : parseFloat(c.get("padding-top")), bottom : parseFloat(c.get("padding-bottom")), left : parseFloat(c.get("padding-left")), "right" : parseFloat(c.get("padding-right"))};
	}
	,border: function(type,color,size) {
		var c = this.css();
		if(type != null && color != null && size != null) {
			c.set("border-style",type != null ? type : type);
			c.set("border-color",(color != null ? color : color).toString());
			c.set("border-width",Std.string(size != null ? size : size));
		}
		return { "style" : c.get("border-style"), color : tannus_graphics__$Color_TColor.fromString(c.get("border-color")), "size" : parseFloat(c.get("border-width"))};
	}
	,backgroundColor: function(color) {
		var c = this.css();
		if(color != null) {
			c.set("background-color",color.toString());
		}
		return tannus_graphics__$Color_TColor.fromString(c.get("background-color"));
	}
	,'float': function(dir) {
		var c = this.css();
		if(dir == null) {
			var this1 = c.get("float");
			if(this1 != null) {
				return this1;
			} else {
				return this1;
			}
		} else {
			return c.set("float",dir);
		}
	}
	,position: function(pos) {
		var c = this.css();
		if(pos == null) {
			var tpos = tannus_ds_CObj.create(c.pluck(["top","left","bottom","right"]));
			console.log(tpos.o);
			tpos.set("type",c.get("position"));
			var this1 = tpos.o;
			return this1;
		} else {
			c.set("position",pos.type != null ? pos.type : "initial");
			if(pos.top != null) {
				c.set("top",pos.top + "px");
			}
			if(pos.left != null) {
				c.set("left",pos.left + "px");
			}
			if(pos.bottom != null) {
				c.set("bottom",pos.bottom + "px");
			}
			if(pos.right != null) {
				c.set("right",pos.right + "px");
			}
			return this.position();
		}
	}
	,display: function(d) {
		this.css().set("display",d);
	}
	,get_el: function() {
		return this._el.get();
	}
	,get_marginLeft: function() {
		return parseFloat(this.css().get("margin-left"));
	}
	,set_marginLeft: function(ml) {
		var c = this.css();
		c.set("margin-left",ml + "px");
		return ml;
	}
	,get_marginRight: function() {
		return parseFloat(this.css().get("margin-right"));
	}
	,set_marginRight: function(mr) {
		var c = this.css();
		c.set("margin-right",mr + "px");
		return mr;
	}
	,get_marginTop: function() {
		return parseFloat(this.css().get("margin-top"));
	}
	,set_marginTop: function(mr) {
		var c = this.css();
		c.set("margin-top",mr + "px");
		return mr;
	}
	,get_marginBottom: function() {
		return parseFloat(this.css().get("margin-bottom"));
	}
	,set_marginBottom: function(mr) {
		var c = this.css();
		c.set("margin-bottom",mr + "px");
		return mr;
	}
	,_el: null
	,__class__: foundation_Styles
	,__properties__: {set_marginBottom:"set_marginBottom",get_marginBottom:"get_marginBottom",set_marginTop:"set_marginTop",get_marginTop:"get_marginTop",set_marginRight:"set_marginRight",get_marginRight:"get_marginRight",set_marginLeft:"set_marginLeft",get_marginLeft:"get_marginLeft",get_el:"get_el"}
};
var foundation_TextInput = function() {
	foundation_DOMInput.call(this);
	this.get_iel().type = "text";
	this.forwardEvents(["input","keypress","keydown","keyup"],this.el,tannus_events_KeyboardEvent.fromJqEvent);
};
$hxClasses["foundation.TextInput"] = foundation_TextInput;
foundation_TextInput.__name__ = ["foundation","TextInput"];
foundation_TextInput.__super__ = foundation_DOMInput;
foundation_TextInput.prototype = $extend(foundation_DOMInput.prototype,{
	get_placeholder: function() {
		var this1 = this.el.attr("placeholder");
		if(this1 != null) {
			return this1;
		} else {
			return "";
		}
	}
	,set_placeholder: function(v) {
		return tannus_html__$Element_Element_$Impl_$.set(this.el,"placeholder",v);
	}
	,__class__: foundation_TextInput
	,__properties__: $extend(foundation_DOMInput.prototype.__properties__,{set_placeholder:"set_placeholder",get_placeholder:"get_placeholder"})
});
var foundation_Tools = function() { };
$hxClasses["foundation.Tools"] = foundation_Tools;
foundation_Tools.__name__ = ["foundation","Tools"];
foundation_Tools.__properties__ = {get_c:"get_c",get_console:"get_console",get_win:"get_win"}
foundation_Tools.defer = function(action) {
	var this1 = window;
	this1.requestAnimationFrame(action);
};
foundation_Tools.printError = function(err) {
	var this1 = window;
	this1.console.error(err);
};
foundation_Tools.printObject = function(o) {
	var this1 = window;
	this1.console.dir(o);
};
foundation_Tools.printTabular = function(o) {
	var this1 = window;
	this1.console.table(o);
};
foundation_Tools.get_win = function() {
	var this1 = window;
	return this1;
};
foundation_Tools.get_console = function() {
	var this1 = window;
	return this1.console;
};
foundation_Tools.get_c = function() {
	var this1 = window;
	return this1.console;
};
var foundation_styles__$Pos_Pos_$Impl_$ = {};
$hxClasses["foundation.styles._Pos.Pos_Impl_"] = foundation_styles__$Pos_Pos_$Impl_$;
foundation_styles__$Pos_Pos_$Impl_$.__name__ = ["foundation","styles","_Pos","Pos_Impl_"];
foundation_styles__$Pos_Pos_$Impl_$.__properties__ = {get_o:"get_o",set_type:"set_type",get_type:"get_type"}
foundation_styles__$Pos_Pos_$Impl_$._new = function(o) {
	var this1 = o;
	return this1;
};
foundation_styles__$Pos_Pos_$Impl_$.get_type = function(this1) {
	if(this1.type != null) {
		return this1.type;
	} else {
		return "initial";
	}
};
foundation_styles__$Pos_Pos_$Impl_$.set_type = function(this1,v) {
	return this1.type = v;
};
foundation_styles__$Pos_Pos_$Impl_$.get_o = function(this1) {
	return this1;
};
var gryffin_Tools = $hx_exports["gryfutils"] = function() { };
$hxClasses["gryffin.Tools"] = gryffin_Tools;
gryffin_Tools.__name__ = ["gryffin","Tools"];
gryffin_Tools.__properties__ = {get_win:"get_win",get_now:"get_now"}
gryffin_Tools.wait = function(ms,action) {
	var this1 = window;
	return this1.setTimeout(action,ms);
};
gryffin_Tools.defer = function(f) {
	process.nextTick(f);
};
gryffin_Tools.makeUniqueIdentifier = function(digits) {
	var id = "";
	var r = new tannus_math_Random();
	var _g1 = 0;
	var _g = digits;
	while(_g1 < _g) {
		var i = _g1++;
		var range = [0,0];
		var letter = Math.floor(r.nextInt() / 2147483647 * 2) == 1;
		if(letter) {
			var upper = Math.floor(r.nextInt() / 2147483647 * 2) == 1;
			if(upper) {
				range = [65,90];
			} else {
				range = [97,122];
			}
		} else {
			range = [48,57];
		}
		var min = range[0];
		var n = Math.floor(r.nextInt() / 2147483647 * (range[1] - min + 1) + min);
		var this1;
		if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
			throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
		}
		this1 = n;
		var c = this1;
		id += String.fromCharCode(c);
	}
	if(Lambda.has(gryffin_Tools.used_idents,id)) {
		return gryffin_Tools.makeUniqueIdentifier(digits);
	} else {
		gryffin_Tools.used_idents.push(id);
		return id;
	}
};
gryffin_Tools.deleteUniqueIdentifier = function(id) {
	return HxOverrides.remove(gryffin_Tools.used_idents,id);
};
gryffin_Tools.get_now = function() {
	return new Date().getTime();
};
gryffin_Tools.get_win = function() {
	var this1 = window;
	return this1;
};
var gryffin_core_EventDispatcher = function() {
	this.__sigs = new haxe_ds_StringMap();
	this.__metaBind();
};
$hxClasses["gryffin.core.EventDispatcher"] = gryffin_core_EventDispatcher;
gryffin_core_EventDispatcher.__name__ = ["gryffin","core","EventDispatcher"];
gryffin_core_EventDispatcher.prototype = {
	sig: function(name) {
		var _this = this.__sigs;
		if(!(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name))) {
			var this1 = this.__sigs;
			var value = new tannus_io_Signal();
			var _this1 = this1;
			if(__map_reserved[name] != null) {
				_this1.setReserved(name,value);
			} else {
				_this1.h[name] = value;
			}
		}
		var _this2 = this.__sigs;
		if(__map_reserved[name] != null) {
			return _this2.getReserved(name);
		} else {
			return _this2.h[name];
		}
	}
	,on: function(name,handler) {
		this.sig(name).listen(handler,false);
	}
	,once: function(name,handler) {
		this.sig(name).listen(handler,true);
	}
	,when: function(name,test,handler) {
		this.sig(name).when(test,handler);
	}
	,times: function(name,count,handler) {
		this.sig(name).times(count,handler);
	}
	,every: function(name,interval,handler) {
		this.sig(name).every(interval,handler);
	}
	,off: function(name,handler) {
		var s = this.sig(name);
		if(handler != null) {
			s.ignore(handler);
		} else {
			s.handlers = [];
		}
	}
	,ignore: function(name,handler) {
		this.off(name,handler);
	}
	,dispatch: function(name,data) {
		this.sig(name).broadcast(data);
	}
	,call: function(name,data) {
		this.dispatch(name,data);
	}
	,forward: function(event,target,mapper) {
		this.on(event,function(data) {
			var data1 = mapper != null ? mapper(data) : data;
			target.dispatch(event,data1);
		});
	}
	,forwardAll: function(events,target,mapper) {
		var _handler = function(name,data) {
			var data1 = mapper != null ? mapper(data) : data;
			target.dispatch(name,data1);
		};
		var _g = 0;
		while(_g < events.length) {
			var event = events[_g];
			++_g;
			this.on(event,(function(a1,f) {
				return function(a2) {
					f[0](a1[0],a2);
				};
			})([event],[_handler]));
		}
	}
	,__metaBind: function() {
		var klass = js_Boot.getClass(this);
		var meta = tannus_ds_CObj.create(haxe_rtti_Meta.getFields(klass));
		var self = tannus_ds_CObj.create(this);
		var _g = 0;
		var _g1 = meta.keys();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var o = meta.o;
			var tmp;
			var d;
			if(o == null) {
				d = null;
			} else {
				var d1;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + key];
					d1 = tmp;
				} else {
					d1 = false;
				}
				if(d1) {
					d = o[tmp]();
				} else {
					d = o[key];
				}
			}
			var metas = tannus_ds_CObj.create(d);
			if(Object.prototype.hasOwnProperty.call(metas.o,"on")) {
				var o1 = metas.o;
				var tmp1;
				var args;
				if(o1 == null) {
					args = null;
				} else {
					var args1;
					if(o1.__properties__) {
						tmp1 = o1.__properties__["get_" + "on"];
						args1 = tmp1;
					} else {
						args1 = false;
					}
					if(args1) {
						args = o1[tmp1]();
					} else {
						args = o1["on"];
					}
				}
				var args2 = args;
				var o2 = self.o;
				var tmp2;
				var handler;
				if(o2 == null) {
					handler = null;
				} else {
					var handler1;
					if(o2.__properties__) {
						tmp2 = o2.__properties__["get_" + key];
						handler1 = tmp2;
					} else {
						handler1 = false;
					}
					if(handler1) {
						handler = o2[tmp2]();
					} else {
						handler = o2[key];
					}
				}
				var handler2 = handler;
				handler2 = Reflect.makeVarArgs((function(a1,o3) {
					return function(a2) {
						return Reflect.callMethod(o3[0],a1[0],a2);
					};
				})([handler2],[this]));
				var _g2 = 0;
				while(_g2 < args2.length) {
					var name = args2[_g2];
					++_g2;
					this.__mbind(name,handler2);
				}
			}
		}
	}
	,__mbind: function(key,handler) {
		var forwardPattern = new EReg("\\[([A-Z0-9_]+)\\]->(.+)","gi");
		if(tannus_ds_StringUtils.has(key,",")) {
			var keys = key.split(",").map(function(item) {
				return StringTools.trim(item);
			});
			var _g = 0;
			while(_g < keys.length) {
				var k = keys[_g];
				++_g;
				this.__mbind(k,handler);
			}
		} else if(forwardPattern.match(key)) {
			var data = tannus_io__$RegEx_RegEx_$Impl_$.matches(forwardPattern,key)[0];
			var self = tannus_ds_CObj.create(this);
			gryffin_Tools.defer(function() {
				var key1 = data[1];
				var o = self.o;
				var tmp;
				var field;
				if(o == null) {
					field = null;
				} else {
					var field1;
					if(o.__properties__) {
						tmp = o.__properties__["get_" + key1];
						field1 = tmp;
					} else {
						field1 = false;
					}
					if(field1) {
						field = o[tmp]();
					} else {
						field = o[key1];
					}
				}
				var field2 = field;
				field2.__mbind(data[2],handler);
			});
		} else {
			this.on(key,handler);
		}
	}
	,__sigs: null
	,__class__: gryffin_core_EventDispatcher
};
var gryffin_media_MediaObject = function() { };
$hxClasses["gryffin.media.MediaObject"] = gryffin_media_MediaObject;
gryffin_media_MediaObject.__name__ = ["gryffin","media","MediaObject"];
gryffin_media_MediaObject.prototype = {
	get_src: null
	,set_src: null
	,get_duration: null
	,get_durationTime: null
	,get_currentTime: null
	,set_currentTime: null
	,get_time: null
	,set_time: null
	,get_progress: null
	,set_progress: null
	,get_playbackRate: null
	,set_playbackRate: null
	,get_paused: null
	,get_volume: null
	,set_volume: null
	,get_muted: null
	,set_muted: null
	,get_buffered: null
	,get_played: null
	,get_ended: null
	,onload: null
	,onerror: null
	,onended: null
	,oncanplay: null
	,onplay: null
	,onpause: null
	,onprogress: null
	,onloadedmetadata: null
	,ondurationchange: null
	,onvolumechange: null
	,onratechange: null
	,clear: null
	,destroy: null
	,play: null
	,pause: null
	,load: null
	,__class__: gryffin_media_MediaObject
	,__properties__: {get_ended:"get_ended",get_played:"get_played",get_buffered:"get_buffered",set_muted:"set_muted",get_muted:"get_muted",set_volume:"set_volume",get_volume:"get_volume",get_paused:"get_paused",set_playbackRate:"set_playbackRate",get_playbackRate:"get_playbackRate",set_progress:"set_progress",get_progress:"get_progress",set_time:"set_time",get_time:"get_time",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime",get_durationTime:"get_durationTime",get_duration:"get_duration",set_src:"set_src",get_src:"get_src"}
};
var tannus_ds_Stateful = function() { };
$hxClasses["tannus.ds.Stateful"] = tannus_ds_Stateful;
tannus_ds_Stateful.__name__ = ["tannus","ds","Stateful"];
tannus_ds_Stateful.prototype = {
	getState: null
	,setState: null
	,__class__: tannus_ds_Stateful
};
var gryffin_audio_Audio = function(s) {
	gryffin_core_EventDispatcher.call(this);
	this.sound = s != null ? s : window.document.createElement("audio");
	this.onerror = new tannus_io_Signal();
	this.ondurationchange = new tannus_io_Signal();
	this.onvolumechange = new tannus_io_Signal();
	this.onratechange = new tannus_io_Signal();
	this.onstatechange = new tannus_io_Signal();
	this.onended = new tannus_io_VoidSignal();
	this.oncanplay = new tannus_io_VoidSignal();
	this.onplay = new tannus_io_VoidSignal();
	this.onpause = new tannus_io_VoidSignal();
	this.onload = new tannus_io_VoidSignal();
	this.onprogress = new tannus_io_Signal();
	this.onloadedmetadata = new tannus_io_VoidSignal();
	this.listen();
};
$hxClasses["gryffin.audio.Audio"] = gryffin_audio_Audio;
gryffin_audio_Audio.__name__ = ["gryffin","audio","Audio"];
gryffin_audio_Audio.__interfaces__ = [gryffin_media_MediaObject,tannus_ds_Stateful];
gryffin_audio_Audio.createSound = function() {
	return window.document.createElement("audio");
};
gryffin_audio_Audio.__super__ = gryffin_core_EventDispatcher;
gryffin_audio_Audio.prototype = $extend(gryffin_core_EventDispatcher.prototype,{
	destroy: function() {
		this.sound.remove();
	}
	,play: function() {
		this.sound.play();
		this.dispatch("play",null);
	}
	,pause: function() {
		this.sound.pause();
		this.dispatch("pause",null);
	}
	,load: function(url,can_manipulate,can_play) {
		this.pause();
		this.set_src(url);
		this.onloadedmetadata.once(function() {
			console.log("soundeo's metadata has been loaded");
			if(can_manipulate != null) {
				can_manipulate();
			}
		});
		this.oncanplay.once(function() {
			console.log("soundeo can be played now");
			if(can_play != null) {
				can_play();
			}
		});
		this.onerror.listen(function(error) {
			window.console.error(error);
		},true);
	}
	,getState: function() {
		return { "volume" : this.sound.volume, "speed" : this.sound.playbackRate};
	}
	,setState: function(state) {
		this.set_volume(state.volume);
		this.set_playbackRate(state.speed);
	}
	,clear: function() {
		var state = this.getState();
		this.pause();
		this.sound.remove();
		this.sound = null;
		this.sound = window.document.createElement("audio");
		this.setState(state);
	}
	,listen: function() {
		var _gthis = this;
		var f = ($_=this.sound,$bind($_,$_.addEventListener));
		var on = function(a1,a2) {
			f(a1,a2);
		};
		on("error",function() {
			_gthis.onerror.broadcast(_gthis.sound.error);
		});
		on("ended",($_=this.onended,$bind($_,$_.fire)));
		on("canplay",($_=this.oncanplay,$bind($_,$_.fire)));
		on("play",($_=this.onplay,$bind($_,$_.fire)));
		on("pause",($_=this.onpause,$bind($_,$_.fire)));
		on("load",($_=this.onload,$bind($_,$_.fire)));
		on("progress",function(e) {
			_gthis.onprogress.broadcast(tannus_math__$Percent_Percent_$Impl_$.percent(_gthis.sound.currentTime,_gthis.sound.duration));
		});
		on("loadedmetadata",($_=this.onloadedmetadata,$bind($_,$_.fire)));
		this.durationChanged();
		this.volumeChanged();
		this.rateChanged();
	}
	,durationChanged: function() {
		var _gthis = this;
		var last_duration = null;
		this.sound.addEventListener("durationchange",function() {
			var cur_dur = tannus_media_CDur.fromSecondsI(Math.floor(_gthis.sound.duration));
			var this1;
			var this2 = [cur_dur,last_duration];
			this1 = this2;
			var delta = this1;
			_gthis.ondurationchange.broadcast(delta);
			last_duration = cur_dur;
		});
	}
	,volumeChanged: function() {
		var _gthis = this;
		var last_vol = this.sound.volume;
		this.sound.addEventListener("volumechange",function() {
			var this1;
			var this2 = [_gthis.sound.volume,last_vol];
			this1 = this2;
			var delta = this1;
			_gthis.onvolumechange.broadcast(delta);
			_gthis.onstatechange.broadcast(_gthis.getState());
			_gthis.dispatch("volumechange",delta);
			last_vol = _gthis.sound.volume;
		});
	}
	,rateChanged: function() {
		var _gthis = this;
		var last_rate = this.sound.playbackRate;
		this.sound.addEventListener("ratechange",function() {
			var this1;
			var this2 = [_gthis.sound.playbackRate,last_rate];
			this1 = this2;
			var delta = this1;
			_gthis.onratechange.broadcast(delta);
			_gthis.onstatechange.broadcast(_gthis.getState());
			_gthis.dispatch("ratechange",delta);
			last_rate = _gthis.sound.playbackRate;
		});
	}
	,get_src: function() {
		return Std.string(this.sound.currentSrc);
	}
	,set_src: function(v) {
		this.sound.src = v.toString();
		return this.get_src();
	}
	,get_duration: function() {
		return tannus_media_CDur.fromSecondsI(Math.floor(this.sound.duration));
	}
	,get_durationTime: function() {
		return this.sound.duration;
	}
	,get_currentTime: function() {
		return this.sound.currentTime;
	}
	,set_currentTime: function(v) {
		return this.sound.currentTime = v;
	}
	,get_time: function() {
		return tannus_media_CDur.fromSecondsI(Math.floor(this.sound.currentTime));
	}
	,set_time: function(v) {
		this.sound.currentTime = 3600 * v.hours + 60 * v.minutes + v.seconds;
		return tannus_media_CDur.fromSecondsI(Math.floor(this.sound.currentTime));
	}
	,get_progress: function() {
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.sound.currentTime,this.sound.duration);
	}
	,set_progress: function(v) {
		this.sound.currentTime = this.sound.duration * (v / 100);
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.sound.currentTime,this.sound.duration);
	}
	,get_playbackRate: function() {
		return this.sound.playbackRate;
	}
	,set_playbackRate: function(v) {
		this.sound.playbackRate = v;
		this.sound.playbackRate = Math.round(this.sound.playbackRate * 100) / 100;
		return this.sound.playbackRate;
	}
	,get_paused: function() {
		return this.sound.paused;
	}
	,get_volume: function() {
		return this.sound.volume;
	}
	,set_volume: function(v) {
		return this.sound.volume = v < 0 ? 0 : v > 1 ? 1 : v;
	}
	,get_muted: function() {
		return this.sound.muted;
	}
	,set_muted: function(v) {
		return this.sound.muted = v;
	}
	,get_buffered: function() {
		return tannus_media__$TimeRanges_TimeRanges_$Impl_$.fromJavaScriptTimeRanges(this.sound.buffered);
	}
	,get_played: function() {
		return tannus_media__$TimeRanges_TimeRanges_$Impl_$.fromJavaScriptTimeRanges(this.sound.played);
	}
	,get_ended: function() {
		return this.sound.ended;
	}
	,sound: null
	,onload: null
	,onerror: null
	,onended: null
	,oncanplay: null
	,onplay: null
	,onpause: null
	,onprogress: null
	,onloadedmetadata: null
	,ondurationchange: null
	,onvolumechange: null
	,onratechange: null
	,onstatechange: null
	,__class__: gryffin_audio_Audio
	,__properties__: {get_ended:"get_ended",get_played:"get_played",get_buffered:"get_buffered",set_muted:"set_muted",get_muted:"get_muted",set_volume:"set_volume",get_volume:"get_volume",get_paused:"get_paused",set_playbackRate:"set_playbackRate",get_playbackRate:"get_playbackRate",set_progress:"set_progress",get_progress:"get_progress",set_time:"set_time",get_time:"get_time",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime",get_durationTime:"get_durationTime",get_duration:"get_duration",set_src:"set_src",get_src:"get_src"}
});
var gryffin_core_Component = function() {
	this.owner = null;
	this.next = null;
};
$hxClasses["gryffin.core.Component"] = gryffin_core_Component;
gryffin_core_Component.__name__ = ["gryffin","core","Component"];
gryffin_core_Component.prototype = {
	next: null
	,owner: null
	,name: null
	,get_name: function() {
		return Type.getClassName(js_Boot.getClass(this));
	}
	,onAdded: function() {
		return;
	}
	,onRemoved: function() {
		return;
	}
	,onUpdate: function(time) {
		if(this.next != null) {
			this.next.onUpdate(time);
		}
	}
	,__class__: gryffin_core_Component
	,__properties__: {get_name:"get_name"}
};
var gryffin_core_Container = function() { };
$hxClasses["gryffin.core.Container"] = gryffin_core_Container;
gryffin_core_Container.__name__ = ["gryffin","core","Container"];
gryffin_core_Container.prototype = {
	addChild: null
	,__class__: gryffin_core_Container
};
var gryffin_core_Entity = function() {
	this.rootComponent = null;
	gryffin_core_EventDispatcher.call(this);
	this.id = gryffin_Tools.makeUniqueIdentifier(8);
	this._cached = false;
	this._hidden = false;
	this.destroyed = false;
	this.set_parent(null);
	this.priority = 0;
	this.effects = [];
	this._compMap = new haxe_ds_StringMap();
	this.once("activated",$bind(this,this.init));
};
$hxClasses["gryffin.core.Entity"] = gryffin_core_Entity;
gryffin_core_Entity.__name__ = ["gryffin","core","Entity"];
gryffin_core_Entity.__super__ = gryffin_core_EventDispatcher;
gryffin_core_Entity.prototype = $extend(gryffin_core_EventDispatcher.prototype,{
	'delete': function() {
		this.destroyed = true;
		gryffin_Tools.deleteUniqueIdentifier(this.id);
	}
	,restore: function() {
		this.destroyed = false;
		this.stage.addChild(this);
		gryffin_Tools.used_idents.push(this.id);
	}
	,hide: function() {
		this._hidden = true;
	}
	,show: function() {
		this._hidden = false;
	}
	,cache: function() {
		this._cached = true;
	}
	,uncache: function() {
		this._cached = false;
	}
	,toggleCache: function() {
		(this._cached ? $bind(this,this.uncache) : $bind(this,this.cache))();
	}
	,toggleHidden: function() {
		(this._hidden ? $bind(this,this.show) : $bind(this,this.hide))();
	}
	,isHidden: function() {
		return this._hidden;
	}
	,isCached: function() {
		return this._cached;
	}
	,init: function(s) {
		var this1 = new tannus_geom_CRectangle(0,0,s.canvas.canvas.width,s.canvas.canvas.height);
		this.calculateGeometry(this1);
	}
	,update: function(s) {
		var _g = 0;
		var _g1 = this.effects;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.active(this)) {
				e.affect(this);
			}
		}
		if(this.rootComponent != null) {
			this.rootComponent.onUpdate(new Date().getTime());
		}
	}
	,render: function(s,c) {
	}
	,addSibling: function(sibling) {
		var _gthis = this;
		if(this.stage == null) {
			this.on("activated",function(s) {
				_gthis.addSibling(sibling);
			});
		} else if(this.parent != null) {
			this.parent.addChild(sibling);
		} else {
			this.stage.addChild(sibling);
		}
	}
	,containsPoint: function(p) {
		return false;
	}
	,calculateGeometry: function(r) {
	}
	,'is': function(selector) {
		var this1 = new tannus_nore_CSelector(selector);
		var sel = this1;
		return sel.test(this);
	}
	,addEffect: function(e) {
		if(!Lambda.has(this.effects,e)) {
			e.attach(this);
			this.effects.push(e);
		}
	}
	,removeEffect: function(e) {
		HxOverrides.remove(this.effects,e);
	}
	,getChildren: function() {
		return [];
	}
	,parentUntil: function(test) {
		if(this.parent == null) {
			return null;
		} else if(test(this.parent)) {
			return this.parent;
		} else {
			return this.parent.parentUntil(test);
		}
	}
	,addComponent: function(c) {
		if(c.owner != null) {
			c.owner.removeComponent(c);
		}
		c.owner = this;
		c.onAdded();
		if(this.rootComponent == null) {
			this.rootComponent = c;
		} else {
			var tail = null;
			var node = this.rootComponent;
			while(node != null) {
				tail = node;
				node = node.next;
			}
			tail.next = c;
		}
	}
	,removeComponent: function(c) {
		if(this.rootComponent != null) {
			var prev = null;
			var node = this.rootComponent;
			while(node != null) {
				if(node == c) {
					if(prev == null) {
						this.rootComponent = node.next;
					} else {
						prev.next = node.next;
					}
					c.onRemoved();
					c.owner = null;
					return true;
				}
				prev = node;
				node = node.next;
			}
			return false;
		} else {
			return false;
		}
	}
	,getComponent: function(name) {
		if(this.rootComponent != null) {
			var c = this.rootComponent;
			while(c != null) {
				if(c.get_name() == name) {
					return c;
				}
				c = c.next;
			}
			return null;
		} else {
			return null;
		}
	}
	,hasComponent: function(component) {
		if(this.rootComponent == null) {
			return false;
		} else {
			var c = this.rootComponent;
			while(c != null) {
				if(c.get_name() == component) {
					return true;
				}
				c = c.next;
			}
			return false;
		}
	}
	,_cached: null
	,_hidden: null
	,effects: null
	,destroyed: null
	,priority: null
	,stage: null
	,parent: null
	,set_parent: function(p) {
		if(p != null && !js_Boot.__instanceof(p,gryffin_core_EntityContainer)) {
			throw new js__$Boot_HaxeError("Not a container!");
		}
		return this.parent = p;
	}
	,id: null
	,_compMap: null
	,rootComponent: null
	,__class__: gryffin_core_Entity
	,__properties__: {set_parent:"set_parent"}
});
var gryffin_core_EntityContainer = function() {
	gryffin_core_Entity.call(this);
	this.children = [];
};
$hxClasses["gryffin.core.EntityContainer"] = gryffin_core_EntityContainer;
gryffin_core_EntityContainer.__name__ = ["gryffin","core","EntityContainer"];
gryffin_core_EntityContainer.__interfaces__ = [gryffin_core_Container];
gryffin_core_EntityContainer.__super__ = gryffin_core_Entity;
gryffin_core_EntityContainer.prototype = $extend(gryffin_core_Entity.prototype,{
	addChild: function(e) {
		var _gthis = this;
		if(!Lambda.has(this.children,e)) {
			this.children.push(e);
			e.set_parent(this);
			if(this.stage != null) {
				var k = e.id;
				var _this = this.stage.registry;
				if(__map_reserved[k] != null) {
					_this.setReserved(k,e);
				} else {
					_this.h[k] = e;
				}
				e.stage = this.stage;
				var _this1 = this.stage;
				var this1 = new tannus_geom_CRectangle(0,0,_this1.canvas.canvas.width,_this1.canvas.canvas.height);
				this.calculateGeometry(this1);
				e.dispatch("activated",this.stage);
			} else {
				this.on("activated",function(s) {
					var k1 = e.id;
					var _this2 = s.registry;
					if(__map_reserved[k1] != null) {
						_this2.setReserved(k1,e);
					} else {
						_this2.h[k1] = e;
					}
					e.stage = s;
					var this2 = new tannus_geom_CRectangle(0,0,s.canvas.canvas.width,s.canvas.canvas.height);
					_gthis.calculateGeometry(this2);
					e.dispatch("activated",s);
				});
			}
		}
	}
	,hasChild: function(child) {
		return Lambda.has(this.getChildren(),child);
	}
	,getChildren: function() {
		return this.children.filter($bind(this,this.isValidChild));
	}
	,get: function(selector) {
		var this1 = new tannus_nore_CSelector(selector);
		return new gryffin_core_Selection(this1,$bind(this,this.getChildren));
	}
	,update: function(s) {
		gryffin_core_Entity.prototype.update.call(this,s);
		var filt = tannus_ds_ArrayTools.splitfilter(this.children,function(e) {
			return !e.destroyed;
		});
		var _g = 0;
		var _g1 = filt.fail;
		while(_g < _g1.length) {
			var e1 = _g1[_g];
			++_g;
			this.stage.registry.remove(e1.id);
		}
		this.children = filt.pass;
		haxe_ds_ArraySort.sort(this.children,function(a,b) {
			return a.priority - b.priority;
		});
		var _g2 = 0;
		var _g11 = this.getChildren();
		while(_g2 < _g11.length) {
			var e2 = _g11[_g2];
			++_g2;
			if(!e2._cached && this.shouldChildUpdate(e2)) {
				e2.update(s);
			}
		}
	}
	,render: function(s,c) {
		gryffin_core_Entity.prototype.render.call(this,s,c);
		var _g = 0;
		var _g1 = this.getChildren();
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e._hidden && this.shouldChildRender(e)) {
				e.render(s,c);
			}
		}
	}
	,calculateGeometry: function(rect) {
		gryffin_core_Entity.prototype.calculateGeometry.call(this,rect);
		var _g = 0;
		var _g1 = this.getChildren();
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.calculateGeometry(rect);
		}
	}
	,getEntitiesAtPoint: function(p) {
		var res = [];
		var _g = 0;
		var _g1 = this.getChildren();
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.containsPoint(p)) {
				res.push(e);
				if(js_Boot.__instanceof(e,gryffin_core_EntityContainer)) {
					var c = e;
					res = res.concat(c.getEntitiesAtPoint(p));
				}
			}
		}
		return res;
	}
	,getEntityAtPoint: function(p) {
		var target = null;
		var targets = this.getChildren().slice();
		targets.reverse();
		var _g = 0;
		while(_g < targets.length) {
			var e = targets[_g];
			++_g;
			if(e.containsPoint(p)) {
				target = e;
				if(js_Boot.__instanceof(e,gryffin_core_EntityContainer)) {
					var c = e;
					var etarget = c.getEntityAtPoint(p);
					if(etarget != null) {
						target = etarget;
					}
				}
				break;
			}
		}
		return target;
	}
	,getEntityAt: function(x,y) {
		var this1 = new tannus_geom_TPoint(x,y,0);
		return this.getEntityAtPoint(this1);
	}
	,isValidChild: function(child) {
		return true;
	}
	,shouldChildUpdate: function(child) {
		return true;
	}
	,shouldChildRender: function(child) {
		return true;
	}
	,children: null
	,__class__: gryffin_core_EntityContainer
});
var gryffin_core_GlobalStyles = function(s) {
	this.stage = s;
	this.sheet = new tannus_css_StyleSheet();
	this.link = tannus_dom__$Element_Element_$Impl_$._new("<link rel=\"stylesheet\" type=\"text/css\"/>");
	this.fontRules = [];
	this.initialize();
};
$hxClasses["gryffin.core.GlobalStyles"] = gryffin_core_GlobalStyles;
gryffin_core_GlobalStyles.__name__ = ["gryffin","core","GlobalStyles"];
gryffin_core_GlobalStyles.prototype = {
	fill: function() {
		this.sheet.rule("*",{ "margin" : 0, "padding" : 0});
		this.sheet.rule("body, html",{ "height" : "100%"});
		this.sheet.rule("canvas",{ "position" : "absolute", "width" : "100%", "height" : "100%"});
	}
	,addFont: function(name,href) {
		return this.sheet.fontFace(name,href);
	}
	,hasFont: function(name) {
		return this.sheet.hasFontFace(name);
	}
	,initialize: function() {
		var head = tannus_dom__$Element_Element_$Impl_$._new("head");
		head.append(this.link);
		this.sheet._update.on($bind(this,this.update));
	}
	,getCSS: function() {
		return this.sheet.toByteArray();
	}
	,getBlob: function() {
		var this1 = new tannus_io_CBlob("stylesheet","text/css",this.sheet.toByteArray());
		return this1;
	}
	,listen: function() {
		this.sheet._update.on($bind(this,this.update));
	}
	,update: function() {
		var this1 = new tannus_io_CBlob("stylesheet","text/css",this.sheet.toByteArray());
		var blob = this1;
		this.link.setAttribute("href",blob.toDataURL());
	}
	,stage: null
	,sheet: null
	,link: null
	,fontRules: null
	,__class__: gryffin_core_GlobalStyles
};
var gryffin_core_Selection = function(sel,entities) {
	this.selector = sel;
	this.all = entities;
	this.update();
};
$hxClasses["gryffin.core.Selection"] = gryffin_core_Selection;
gryffin_core_Selection.__name__ = ["gryffin","core","Selection"];
gryffin_core_Selection.prototype = {
	update: function() {
		this.selected = this.selector.filter(this.all());
	}
	,at: function(index) {
		return this.selected[index];
	}
	,iterator: function() {
		return HxOverrides.iter(this.selected);
	}
	,filter: function(sel) {
		var _gthis = this;
		var this1 = function() {
			return _gthis.selected;
		};
		return new gryffin_core_Selection(sel,this1);
	}
	,containsPoint: function(p) {
		var _gthis = this;
		var this1 = function() {
			return _gthis.all().filter(function(item) {
				return item.containsPoint(p);
			});
		};
		var gettr = this1;
		return new gryffin_core_Selection(this.selector,gettr);
	}
	,call: function(method,args) {
		if(args == null) {
			args = [];
		}
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var ent = _g1[_g];
			++_g;
			var e = tannus_ds_CObj.create(ent);
			var o = e.o;
			var tmp;
			var f;
			if(o == null) {
				f = null;
			} else {
				var f1;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + method];
					f1 = tmp;
				} else {
					f1 = false;
				}
				if(f1) {
					f = o[tmp]();
				} else {
					f = o[method];
				}
			}
			var f2 = f;
			f2 = (function(a1,o1) {
				return function(a2) {
					return Reflect.callMethod(o1[0],a1[0],a2);
				};
			})([f2],[ent]);
			try {
				f2(args);
			} catch( error ) {
				if (error instanceof js__$Boot_HaxeError) error = error.val;
				throw js__$Boot_HaxeError.wrap(error);
			}
		}
	}
	,cache: function() {
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.cache();
		}
	}
	,uncache: function() {
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.uncache();
		}
	}
	,hide: function() {
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.hide();
		}
	}
	,show: function() {
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.show();
		}
	}
	,'delete': function() {
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item["delete"]();
		}
	}
	,children: function() {
		var this1 = new tannus_nore_CSelector("!String");
		var f = $bind(this,this._selectedChildren);
		return new gryffin_core_Selection(this1,function() {
			return f();
		});
	}
	,_selectedChildren: function() {
		var results = [];
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(js_Boot.__instanceof(e,gryffin_core_EntityContainer)) {
				results = results.concat((js_Boot.__cast(e , gryffin_core_EntityContainer)).getChildren());
			}
		}
		return results;
	}
	,get_length: function() {
		return this.selected.length;
	}
	,selector: null
	,selected: null
	,all: null
	,__class__: gryffin_core_Selection
	,__properties__: {get_length:"get_length"}
};
var gryffin_core_Stage = function(can) {
	this.noclear = false;
	gryffin_core_EventDispatcher.call(this);
	this.canvas = new gryffin_display_Canvas(can);
	this.children = [];
	this.registry = new haxe_ds_StringMap();
	this.styles = new gryffin_core_GlobalStyles(this);
	this.manager = new gryffin_events_FrameManager();
	this.mouseManager = new gryffin_events_MouseListener(this);
	this.keyManager = new gryffin_events_KeyListener(this);
	this.mouseWatcher = new gryffin_events_MouseWatcher(this);
	this.eventTimes = new haxe_ds_StringMap();
	this._fill = false;
	var this1 = window;
	var this2 = this1;
	var this3 = new tannus_geom_CRectangle(this2.scrollX,this2.scrollY,this2.innerWidth,this2.innerHeight);
	this.lastWindowSize = this3;
	this.__init();
};
$hxClasses["gryffin.core.Stage"] = gryffin_core_Stage;
gryffin_core_Stage.__name__ = ["gryffin","core","Stage"];
gryffin_core_Stage.__interfaces__ = [gryffin_core_Container];
gryffin_core_Stage.__properties__ = {get_window:"get_window"}
gryffin_core_Stage.get_window = function() {
	var this1 = window;
	return this1;
};
gryffin_core_Stage.__super__ = gryffin_core_EventDispatcher;
gryffin_core_Stage.prototype = $extend(gryffin_core_EventDispatcher.prototype,{
	attach: function(can) {
		this.canvas = new gryffin_display_Canvas(can);
		this.mouseManager.rebind();
	}
	,resize: function(w,h) {
		var _w = this.canvas.canvas.width;
		var _h = this.canvas.canvas.height;
		var _this = this.canvas;
		_this.resize(w,_this.canvas.height);
		var _this1 = this.canvas;
		_this1.resize(_this1.canvas.width,h);
		if(!(this.canvas.canvas.width == _w && this.canvas.canvas.height == _h)) {
			var this1;
			var this2 = [_w,_h];
			this1 = this2;
			var o = this1;
			var this3;
			var this4 = [this.canvas.canvas.width,this.canvas.canvas.height];
			this3 = this4;
			var n = this3;
			var event = new tannus_events_ResizeEvent(o,n);
			this.dispatch("resize",event);
		}
		this.calculateGeometry();
	}
	,addChild: function(child) {
		if(!Lambda.has(this.children,child)) {
			this.children.push(child);
			var k = child.id;
			var _this = this.registry;
			if(__map_reserved[k] != null) {
				_this.setReserved(k,child);
			} else {
				_this.h[k] = child;
			}
			child.stage = this;
			child.dispatch("activated",this);
		}
	}
	,hasChild: function(child) {
		return Lambda.has(this.children,child);
	}
	,fill: function() {
		this._fill = true;
		this.styles.fill();
	}
	,loadFontFace: function(family,source) {
		this.styles.addFont(family,source);
	}
	,isFontFaceLoaded: function(family) {
		return this.styles.hasFont(family);
	}
	,getMousePosition: function() {
		return this.mouseWatcher.getMousePosition();
	}
	,mostRecentOccurrenceTime: function(event) {
		var _this = this.eventTimes;
		if(__map_reserved[event] != null) {
			return _this.getReserved(event);
		} else {
			return _this.h[event];
		}
	}
	,getEntitiesAtPoint: function(p,list) {
		return this.walk().filter(function(item) {
			return item.containsPoint(p);
		});
	}
	,getEntitiesAt: function(x,y) {
		var this1 = new tannus_geom_TPoint(x,y,0);
		return this.getEntitiesAtPoint(this1);
	}
	,getEntityAtPoint: function(p) {
		var start = new Date().getTime();
		var target = null;
		this.children.reverse();
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.containsPoint(p)) {
				target = e;
				if(js_Boot.__instanceof(e,gryffin_core_EntityContainer)) {
					var c = e;
					var etarget = c.getEntityAtPoint(p);
					if(etarget != null) {
						target = etarget;
					}
				}
				break;
			}
		}
		this.children.reverse();
		var took = new Date().getTime() - start;
		return target;
	}
	,getEntityAt: function(x,y) {
		var this1 = new tannus_geom_TPoint(x,y,0);
		return this.getEntityAtPoint(this1);
	}
	,frame: function(delta) {
		if(this._fill) {
			var this1 = window;
			var this2 = this1;
			var this3 = new tannus_geom_CRectangle(this2.scrollX,this2.scrollY,this2.innerWidth,this2.innerHeight);
			var vp = this3;
			if(vp != this.lastWindowSize) {
				var cw = vp.width | 0;
				var ch = vp.height | 0;
				this.resize(cw,ch);
				this.lastWindowSize = vp;
			}
		}
		var filtr = tannus_ds_ArrayTools.splitfilter(this.children,function(e) {
			return !e.destroyed;
		});
		var _g = 0;
		var _g1 = filtr.fail;
		while(_g < _g1.length) {
			var ent = _g1[_g];
			++_g;
			this.registry.remove(ent.id);
		}
		this.children = filtr.pass;
		haxe_ds_ArraySort.sort(this.children,function(a,b) {
			return a.priority - b.priority;
		});
		if(!this.noclear) {
			this.canvas._ctx.get().erase();
		}
		var _g2 = 0;
		var _g11 = this.children;
		while(_g2 < _g11.length) {
			var child = _g11[_g2];
			++_g2;
			if(!child._cached) {
				child.update(this);
			}
			if(!child._hidden) {
				child.render(this,this.canvas._ctx.get());
			}
		}
		if(gryffin_fx_Animations.manager == this) {
			gryffin_fx_Animations.tick();
		}
	}
	,calculateGeometry: function() {
		var this1 = new tannus_geom_CRectangle(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		var vp = this1;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.calculateGeometry(vp);
		}
	}
	,walk: function(list,ignore) {
		if(list == null) {
			list = this.children;
		}
		var res = [];
		var _g = 0;
		while(_g < list.length) {
			var ent = list[_g];
			++_g;
			if(ignore != null && ignore(ent)) {
				continue;
			} else {
				res.push(ent);
				res = res.concat(this.walk(ent.getChildren(),ignore));
			}
		}
		return res;
	}
	,tree: function(list,kids) {
		if(list == null) {
			list = [];
		}
		if(kids == null) {
			kids = this.children;
		}
		kids.reverse();
		var _g = 0;
		while(_g < kids.length) {
			var child = kids[_g];
			++_g;
			if(js_Boot.__instanceof(child,gryffin_core_EntityContainer)) {
				var c = child;
				var sub = this.tree(list,c.getChildren());
				list.push([child,sub]);
			} else {
				list.push(child);
			}
		}
		kids.reverse();
		return list;
	}
	,get: function(sel) {
		var _gthis = this;
		var this1 = new tannus_nore_CSelector(sel);
		var this2 = function() {
			return _gthis.walk();
		};
		return new gryffin_core_Selection(this1,this2);
	}
	,mouseEvent: function(e) {
		this.dispatch(e.type,e);
		if(e._cancelled || e._propogationStopped) {
			return;
		}
		var finalTarget = this.getEntityAtPoint(e.position);
		if(finalTarget != null && !(finalTarget.isHidden() || finalTarget.isCached() || finalTarget.destroyed)) {
			var eventPath = [];
			var currentTarget = finalTarget;
			eventPath.unshift(currentTarget);
			while(currentTarget.parent != null) {
				currentTarget = currentTarget.parent;
				eventPath.unshift(currentTarget);
			}
			var _g = 0;
			while(_g < eventPath.length) {
				var target = eventPath[_g];
				++_g;
				target.dispatch(e.type,e);
				if(e._cancelled || e._propogationStopped) {
					break;
				}
			}
		}
	}
	,__init: function() {
		this.__events();
		gryffin_fx_Animations.claim(this);
	}
	,__events: function() {
		this.manager.frame.listen($bind(this,this.frame),false);
		this.manager.start();
	}
	,dispatch: function(name,data) {
		gryffin_core_EventDispatcher.prototype.dispatch.call(this,name,data);
		var this1 = this.eventTimes;
		var value = new Date().getTime();
		var _this = this1;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,pause: function() {
		this.manager.pause();
	}
	,resume: function() {
		this.manager.resume();
	}
	,get_width: function() {
		return this.canvas.canvas.width;
	}
	,set_width: function(v) {
		this.resize(v,this.canvas.canvas.height);
		return this.canvas.canvas.width;
	}
	,get_height: function() {
		return this.canvas.canvas.height;
	}
	,set_height: function(v) {
		this.resize(this.canvas.canvas.width,v);
		return this.canvas.canvas.height;
	}
	,get_rect: function() {
		var this1 = new tannus_geom_CRectangle(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		return this1;
	}
	,set_rect: function(v) {
		this.resize(Math.round(v.width),Math.round(v.height));
		var this1 = new tannus_geom_CRectangle(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		return this1;
	}
	,get_cursor: function() {
		return this.canvas.canvas.style.cursor;
	}
	,set_cursor: function(v) {
		return this.canvas.canvas.style.cursor = v;
	}
	,get_ctx: function() {
		return this.canvas._ctx.get();
	}
	,get_paused: function() {
		return this.manager._paused;
	}
	,canvas: null
	,children: null
	,registry: null
	,noclear: null
	,manager: null
	,mouseManager: null
	,keyManager: null
	,mouseWatcher: null
	,styles: null
	,_fill: null
	,lastWindowSize: null
	,eventTimes: null
	,__class__: gryffin_core_Stage
	,__properties__: {get_paused:"get_paused",get_ctx:"get_ctx",set_cursor:"set_cursor",get_cursor:"get_cursor",set_rect:"set_rect",get_rect:"get_rect",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
});
var gryffin_math_Measurable = function() { };
$hxClasses["gryffin.math.Measurable"] = gryffin_math_Measurable;
gryffin_math_Measurable.__name__ = ["gryffin","math","Measurable"];
gryffin_math_Measurable.prototype = {
	getWidth: null
	,getHeight: null
	,__class__: gryffin_math_Measurable
};
var gryffin_display_Paintable = function() { };
$hxClasses["gryffin.display.Paintable"] = gryffin_display_Paintable;
gryffin_display_Paintable.__name__ = ["gryffin","display","Paintable"];
gryffin_display_Paintable.prototype = {
	paint: null
	,__class__: gryffin_display_Paintable
};
var gryffin_display_BitmapSource = function() { };
$hxClasses["gryffin.display.BitmapSource"] = gryffin_display_BitmapSource;
gryffin_display_BitmapSource.__name__ = ["gryffin","display","BitmapSource"];
gryffin_display_BitmapSource.__interfaces__ = [gryffin_math_Measurable,gryffin_display_Paintable];
var gryffin_display_CPixels = function(dat) {
	this.idata = dat;
	this.data = this.idata.data;
};
$hxClasses["gryffin.display.CPixels"] = gryffin_display_CPixels;
gryffin_display_CPixels.__name__ = ["gryffin","display","CPixels"];
gryffin_display_CPixels.__interfaces__ = [gryffin_display_Paintable];
gryffin_display_CPixels.fromByteArray = function(b) {
	var this1 = new gryffin_display_CPixels(new ImageData(b.sub(2,b._length - 2).b,b.get(0),b.get(1)));
	return this1;
};
gryffin_display_CPixels.imageDataFromByteArray = function(b) {
	return new ImageData(b.sub(2,b._length - 2).b,b.get(0),b.get(1));
};
gryffin_display_CPixels.prototype = {
	paint: function(c,s,d) {
		c.ctx.putImageData(this.idata,s.x,s.y,d.x,d.y,d.width,d.height);
	}
	,link: function(context,area) {
		return new gryffin_display_LinkedPixels(context,area,this.idata);
	}
	,at: function(x,y) {
		var this1 = new tannus_geom_TPoint(x,y,0);
		return new gryffin_display_Pixel(this,this1);
	}
	,ati: function(index) {
		var this1 = new tannus_geom_TPoint(index % this.idata.width,index / this.idata.width,0);
		return new gryffin_display_Pixel(this,this1);
	}
	,getColor: function(xi,y) {
		if(y == null) {
			return this.getAtIndex(xi | 0);
		} else {
			return this.getAtIndex((xi | 0) + (y | 0) * this.idata.width);
		}
	}
	,getAtPos: function(x,y) {
		return this.getAtIndex((x | 0) + (y | 0) * this.idata.width);
	}
	,getAtIndex: function(i) {
		i *= 4;
		var this1 = new tannus_graphics__$Color_TColor(this.data[i],this.data[i + 1],this.data[i + 2],this.data[i + 3]);
		var col = this1;
		return col;
	}
	,setAtIndex: function(i,color) {
		i *= 4;
		this.data[i] = color.get_red();
		this.data[i + 1] = color.get_green();
		this.data[i + 2] = color.get_blue();
		this.data[i + 3] = color.get_alpha() != null ? color.get_alpha() : 0;
		return color;
	}
	,setAtPos: function(x,y,color) {
		return this.setAtIndex((x | 0) + (y | 0) * this.idata.width,color);
	}
	,setColor: function(x,y,color) {
		return this.setAtIndex((x | 0) + (y | 0) * this.idata.width,color);
	}
	,get_red: function(x,y) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4];
	}
	,get_green: function(x,y) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 1];
	}
	,get_blue: function(x,y) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 2];
	}
	,get_alpha: function(x,y) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 3];
	}
	,set_red: function(x,y,val) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4] = val;
	}
	,set_green: function(x,y,val) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 1] = val;
	}
	,set_blue: function(x,y,val) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 2] = val;
	}
	,set_alpha: function(x,y,val) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 3] = val;
	}
	,index: function(x,y) {
		return (x | 0) + (y | 0) * this.idata.width;
	}
	,coords: function(index) {
		var this1 = [index % this.idata.width + 0.0,index / this.idata.width];
		return this1;
	}
	,write: function(target,x,y,sx,sy,sw,sh) {
		if(sy == null) {
			sy = 0;
		}
		if(sx == null) {
			sx = 0;
		}
		target.ctx.putImageData(this.idata,x,y,sx,sy,sw != null ? sw : this.idata.width,sh != null ? sh : this.idata.height);
	}
	,save: function() {
	}
	,iterator: function() {
		return new gryffin_display_PixelsIterator(this);
	}
	,getData: function() {
		return this.idata;
	}
	,toByteArray: function() {
		var data = tannus_io_impl_NodeBinary.ofData(this.idata.data.buffer);
		data.shiftRight(2);
		data.position = 0;
		data.set(data.position++,this.idata.width);
		data.set(data.position++,this.idata.height);
		console.log(data._length);
		return data;
	}
	,skim: function(jump) {
		return new gryffin_display_PixelsIterator(this,jump);
	}
	,getAverageColor: function() {
		var c = null;
		var pixel = this.skim(25);
		while(pixel.hasNext()) {
			var pixel1 = pixel.next();
			if(c == null) {
				var _this = pixel1.src;
				c = _this.getAtIndex((pixel1.pos.get_x() | 0) + (pixel1.pos.get_y() | 0) * _this.idata.width);
			} else {
				var _this1 = pixel1.src;
				c = c.mix(_this1.getAtIndex((pixel1.pos.get_x() | 0) + (pixel1.pos.get_y() | 0) * _this1.idata.width),50);
			}
		}
		return c;
	}
	,get_width: function() {
		return this.idata.width;
	}
	,get_height: function() {
		return this.idata.height;
	}
	,get_length: function() {
		return this.data.length / 4 | 0;
	}
	,get_imageData: function() {
		return this.idata;
	}
	,idata: null
	,data: null
	,__class__: gryffin_display_CPixels
	,__properties__: {get_imageData:"get_imageData",get_length:"get_length",get_height:"get_height",get_width:"get_width"}
};
var gryffin_display_PixelsIterator = function(p,j) {
	if(j == null) {
		j = 1;
	}
	this.src = p;
	this.i = 0;
	this.step = j;
};
$hxClasses["gryffin.display.PixelsIterator"] = gryffin_display_PixelsIterator;
gryffin_display_PixelsIterator.__name__ = ["gryffin","display","PixelsIterator"];
gryffin_display_PixelsIterator.prototype = {
	hasNext: function() {
		return this.i < (this.src.data.length / 4 | 0);
	}
	,next: function() {
		var _i = this.i;
		this.i += this.step;
		var _this = this.src;
		var this1 = new tannus_geom_TPoint(_i % _this.idata.width,_i / _this.idata.width,0);
		return new gryffin_display_Pixel(_this,this1);
	}
	,src: null
	,i: null
	,step: null
	,__class__: gryffin_display_PixelsIterator
};
var tannus_html_Blobable = function() { };
$hxClasses["tannus.html.Blobable"] = tannus_html_Blobable;
tannus_html_Blobable.__name__ = ["tannus","html","Blobable"];
tannus_html_Blobable.prototype = {
	toBlob: null
	,__class__: tannus_html_Blobable
};
var gryffin_display_Canvas = function(c) {
	var _gthis = this;
	if(c != null) {
		this.canvas = c;
	} else {
		this.canvas = window.document.createElement("canvas");
	}
	var this1 = function() {
		var this2 = new gryffin_display_Context(_gthis.canvas.getContext("2d",null));
		return this2;
	};
	var this3 = new tannus_ds_CRef(this1);
	this._ctx = this3;
};
$hxClasses["gryffin.display.Canvas"] = gryffin_display_Canvas;
gryffin_display_Canvas.__name__ = ["gryffin","display","Canvas"];
gryffin_display_Canvas.__interfaces__ = [tannus_html_Blobable,gryffin_display_BitmapSource];
gryffin_display_Canvas.create = function(w,h) {
	var can = new gryffin_display_Canvas();
	can.resize(w,h);
	return can;
};
gryffin_display_Canvas.prototype = {
	clone: function() {
		var c = this.canvas.cloneNode();
		return new gryffin_display_Canvas(c);
	}
	,resize: function(w,h) {
		var _gthis = this;
		this.canvas.width = w;
		this.canvas.height = h;
		var this1 = function() {
			var this2 = new gryffin_display_Context(_gthis.canvas.getContext("2d",null));
			return this2;
		};
		var this3 = new tannus_ds_CRef(this1);
		this._ctx = this3;
	}
	,resized: function(w,h) {
		var copy = gryffin_display_Canvas.create(Math.floor(w),Math.floor(h));
		copy._ctx.get().drawImage(this.canvas,0,0,this.canvas.width,this.canvas.height,0,0,copy.canvas.width,copy.canvas.height);
		return copy;
	}
	,scale: function(w,h) {
		if(h == null) {
			h = w;
		}
		var copy = gryffin_display_Canvas.create(Math.floor(w * this.canvas.width),Math.floor(h * this.canvas.height));
		copy._ctx.get().drawImage(this.canvas,0,0,this.canvas.width,this.canvas.height,0,0,copy.canvas.width,copy.canvas.height);
		return copy;
	}
	,paint: function(c,src,dest) {
		c.drawImage(this.canvas,src.x,src.y,src.width,src.height,dest.x,dest.y,dest.width,dest.height);
	}
	,getWidth: function() {
		return this.canvas.width;
	}
	,getHeight: function() {
		return this.canvas.height;
	}
	,dataURI: function(type) {
		return this.canvas.toDataURL(type);
	}
	,toBlob: function(cb,type) {
		this.canvas.toBlob(cb,type);
	}
	,getImage: function(cb,type) {
		gryffin_display_Image.load(this.canvas.toDataURL(type),cb);
	}
	,get_width: function() {
		return this.canvas.width;
	}
	,set_width: function(v) {
		this.resize(v,this.canvas.height);
		return this.canvas.width;
	}
	,get_height: function() {
		return this.canvas.height;
	}
	,set_height: function(v) {
		this.resize(this.canvas.width,v);
		return this.canvas.height;
	}
	,get_context: function() {
		return this._ctx.get();
	}
	,get_pixels: function() {
		var this1 = new gryffin_display_CPixels(this._ctx.get().getImageData(0,0,this.canvas.width,this.canvas.height));
		var tmp = this._ctx.get();
		var this2 = new tannus_geom_CRectangle(0,0,this.canvas.width,this.canvas.height);
		return this1.link(tmp,this2);
	}
	,canvas: null
	,_ctx: null
	,__class__: gryffin_display_Canvas
	,__properties__: {get_pixels:"get_pixels",get_context:"get_context",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
};
var gryffin_display_Context = function(ctx) {
	this.ctx = ctx;
};
$hxClasses["gryffin.display.Context"] = gryffin_display_Context;
gryffin_display_Context.__name__ = ["gryffin","display","Context"];
gryffin_display_Context.prototype = {
	erase: function() {
		this.ctx.clearRect(0,0,this.get_width(),this.get_height());
	}
	,paint: function(comp,src,dest) {
		var this1 = new gryffin_display_Context(this.ctx);
		comp.paint(this1,src,dest);
	}
	,drawComponent: function(comp,sx,sy,sw,sh,dx,dy,dw,dh) {
		var this1 = new tannus_geom_CRectangle(sx,sy,sw,sh);
		var src = this1;
		var this2 = new tannus_geom_CRectangle(dx,dy,dw,dh);
		var dest = this2;
		var this3 = new gryffin_display_Context(this.ctx);
		comp.paint(this3,src,dest);
	}
	,drawVertices: function(vertices) {
		var this1 = new gryffin_display_Context(this.ctx);
		gryffin_display_CtxTools.drawVertices(this1,vertices);
	}
	,save: function() {
		this.ctx.save();
	}
	,restore: function() {
		this.ctx.restore();
	}
	,scale: function(x,y) {
		this.ctx.scale(x,y);
	}
	,rotate: function(angle) {
		this.ctx.rotate(angle);
	}
	,translate: function(x,y) {
		this.ctx.translate(x,y);
	}
	,transform: function(a,b,c,d,e,f) {
		this.ctx.transform(a,b,c,d,e,f);
	}
	,setTransform: function(a,b,c,d,e,f) {
		this.ctx.setTransform(a,b,c,d,e,f);
	}
	,resetTransform: function() {
		this.ctx.resetTransform();
	}
	,createLinearGradient: function(x0,y0,x1,y1) {
		return this.ctx.createLinearGradient(x0,y0,x1,y1);
	}
	,createRadialGradient: function(x0,y0,r0,x1,y1,r1) {
		return this.ctx.createRadialGradient(x0,y0,r0,x1,y1,r1);
	}
	,clearRect: function(x,y,w,h) {
		this.ctx.clearRect(x,y,w,h);
	}
	,fillRect: function(x,y,w,h) {
		this.ctx.fillRect(x,y,w,h);
	}
	,strokeRect: function(x,y,w,h) {
		this.ctx.strokeRect(x,y,w,h);
	}
	,beginPath: function() {
		this.ctx.beginPath();
	}
	,fill: function() {
		this.ctx.fill();
	}
	,stroke: function() {
		this.ctx.stroke();
	}
	,drawFocusIfNeeded: function(element) {
		this.ctx.drawFocusIfNeeded(element);
	}
	,drawCustomFocusRing: function(element) {
		return this.ctx.drawCustomFocusRing(element);
	}
	,clip: function() {
		this.ctx.clip();
	}
	,isPointInPath: function(path,x,y,winding) {
		return this.ctx.isPointInPath(path,x,y,winding);
	}
	,isPointInStroke: function(path,x,y) {
		return this.ctx.isPointInStroke(path,x,y);
	}
	,fillText: function(text,x,y,maxWidth) {
		if(maxWidth != null) {
			this.ctx.fillText(text,x,y,maxWidth);
		} else {
			this.ctx.fillText(text,x,y);
		}
	}
	,strokeText: function(text,x,y,maxWidth) {
		if(maxWidth != null) {
			this.ctx.strokeText(text,x,y,maxWidth);
		} else {
			this.ctx.strokeText(text,x,y);
		}
	}
	,measureText: function(text) {
		return gryffin_display_CtxTools.patchedMeasureText(this.ctx,text);
	}
	,drawImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
		this.ctx.drawImage(image,sx,sy,sw,sh,dx,dy,dw,dh);
	}
	,addHitRegion: function(options) {
		this.ctx.addHitRegion(options);
	}
	,removeHitRegion: function(id) {
		this.ctx.removeHitRegion(id);
	}
	,clearHitRegions: function() {
		this.ctx.clearHitRegions();
	}
	,createImageData: function(imagedata) {
		return this.ctx.createImageData(imagedata);
	}
	,getImageData: function(sx,sy,sw,sh) {
		return this.ctx.getImageData(sx,sy,sw,sh);
	}
	,getPixels: function(x,y,w,h) {
		var this1 = new gryffin_display_CPixels(this.getImageData(x,y,w,h));
		return this1;
	}
	,putPixels: function(pixels,x,y,dx,dy,dw,dh) {
		this.ctx.putImageData(pixels.idata,x,y,dx,dy,dw,dh);
	}
	,putImageData: function(imagedata,dx,dy,dirtyX,dirtyY,dirtyWidth,dirtyHeight) {
		this.ctx.putImageData(imagedata,dx,dy,dirtyX,dirtyY,dirtyWidth,dirtyHeight);
	}
	,setLineDash: function(segments) {
		this.ctx.setLineDash(segments);
	}
	,getLineDash: function() {
		return this.ctx.getLineDash();
	}
	,closePath: function() {
		this.ctx.closePath();
	}
	,moveTo: function(x,y) {
		this.ctx.moveTo(x,y);
	}
	,moveToPoint: function(p) {
		var x = p.get_x();
		var y = p.get_y();
		this.ctx.moveTo(x,y);
	}
	,lineTo: function(x,y) {
		this.ctx.lineTo(x,y);
	}
	,lineToPoint: function(p) {
		var x = p.get_x();
		var y = p.get_y();
		this.ctx.lineTo(x,y);
	}
	,quadraticCurveTo: function(cpx,cpy,x,y) {
		this.ctx.quadraticCurveTo(cpx,cpy,x,y);
	}
	,bezierCurveTo: function(cp1x,cp1y,cp2x,cp2y,x,y) {
		this.ctx.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);
	}
	,arcTo: function(x1,y1,x2,y2,radius) {
		this.ctx.arcTo(x1,y1,x2,y2,radius);
	}
	,rect: function(x,y,w,h) {
		this.ctx.rect(x,y,w,h);
	}
	,drawRect: function(r) {
		this.ctx.rect(r.x,r.y,r.width,r.height);
	}
	,drawTriangle: function(t) {
		var p = t.one;
		var x = p.get_x();
		var y = p.get_y();
		this.ctx.moveTo(x,y);
		var p1 = t.two;
		var x1 = p1.get_x();
		var y1 = p1.get_y();
		this.ctx.lineTo(x1,y1);
		var p2 = t.three;
		var x2 = p2.get_x();
		var y2 = p2.get_y();
		this.ctx.lineTo(x2,y2);
		var p3 = t.one;
		var x3 = p3.get_x();
		var y3 = p3.get_y();
		this.ctx.lineTo(x3,y3);
	}
	,drawLine: function(line) {
		var p = line.one;
		var x = p.get_x();
		var y = p.get_y();
		this.ctx.moveTo(x,y);
		var p1 = line.two;
		var x1 = p1.get_x();
		var y1 = p1.get_y();
		this.ctx.lineTo(x1,y1);
	}
	,roundRect: function(x,y,w,h,r) {
		this.ctx.moveTo(x + r,y);
		this.ctx.lineTo(x + w - r,y);
		this.ctx.quadraticCurveTo(x + w,y,x + w,y + r);
		this.ctx.lineTo(x + w,y + h - r);
		this.ctx.quadraticCurveTo(x + w,y + h,x + w - r,y + h);
		this.ctx.lineTo(x + r,y + h);
		this.ctx.quadraticCurveTo(x,y + h,x,y + h - r);
		this.ctx.lineTo(x,y + r);
		this.ctx.quadraticCurveTo(x,y,x + r,y);
	}
	,drawRoundRect: function(rect,radius) {
		this.roundRect(rect.x,rect.y,rect.width,rect.height,radius);
	}
	,arc: function(x,y,radius,startAngle,endAngle,anticlockwise) {
		this.ctx.arc(x,y,radius,startAngle,endAngle,anticlockwise);
	}
	,get_canvas: function() {
		return this.ctx.canvas;
	}
	,get_globalAlpha: function() {
		return this.ctx.globalAlpha;
	}
	,set_globalAlpha: function(v) {
		return this.ctx.globalAlpha = v;
	}
	,get_globalCompositeOperation: function() {
		return this.ctx.globalCompositeOperation;
	}
	,set_globalCompositeOperation: function(v) {
		return this.ctx.globalCompositeOperation = v;
	}
	,get_strokeStyle: function() {
		return this.ctx.strokeStyle;
	}
	,set_strokeStyle: function(v) {
		return this.ctx.strokeStyle = v;
	}
	,get_fillStyle: function() {
		return this.ctx.fillStyle;
	}
	,set_fillStyle: function(v) {
		return this.ctx.fillStyle = v;
	}
	,get_shadowOffsetX: function() {
		return this.ctx.shadowOffsetX;
	}
	,set_shadowOffsetX: function(v) {
		return this.ctx.shadowOffsetX = v;
	}
	,get_shadowOffsetY: function() {
		return this.ctx.shadowOffsetY;
	}
	,set_shadowOffsetY: function(v) {
		return this.ctx.shadowOffsetY = v;
	}
	,get_shadowBlur: function() {
		return this.ctx.shadowBlur;
	}
	,set_shadowBlur: function(v) {
		return this.ctx.shadowBlur = v;
	}
	,get_shadowColor: function() {
		return this.ctx.shadowColor;
	}
	,set_shadowColor: function(v) {
		return this.ctx.shadowColor = v;
	}
	,get_filter: function() {
		return this.ctx.filter;
	}
	,set_filter: function(v) {
		return this.ctx.filter = v;
	}
	,get_imageSmoothingEnabled: function() {
		return this.ctx.imageSmoothingEnabled;
	}
	,set_imageSmoothingEnabled: function(v) {
		return this.ctx.imageSmoothingEnabled = v;
	}
	,get_lineWidth: function() {
		return this.ctx.lineWidth;
	}
	,set_lineWidth: function(v) {
		return this.ctx.lineWidth = v;
	}
	,get_lineCap: function() {
		return this.ctx.lineCap;
	}
	,set_lineCap: function(v) {
		return this.ctx.lineCap = v;
	}
	,get_lineJoin: function() {
		return this.ctx.lineJoin;
	}
	,set_lineJoin: function(v) {
		return this.ctx.lineJoin = v;
	}
	,get_miterLimit: function() {
		return this.ctx.miterLimit;
	}
	,set_miterLimit: function(v) {
		return this.ctx.miterLimit = v;
	}
	,get_lineDashOffset: function() {
		return this.ctx.lineDashOffset;
	}
	,set_lineDashOffset: function(v) {
		return this.ctx.lineDashOffset = v;
	}
	,get_font: function() {
		return this.ctx.font;
	}
	,set_font: function(v) {
		return this.ctx.font = v;
	}
	,get_textAlign: function() {
		return this.ctx.textAlign;
	}
	,set_textAlign: function(v) {
		return this.ctx.textAlign = v;
	}
	,get_textBaseline: function() {
		return this.ctx.textBaseline;
	}
	,set_textBaseline: function(v) {
		return this.ctx.textBaseline = v;
	}
	,get_width: function() {
		return this.get_canvas().width;
	}
	,get_height: function() {
		return this.get_canvas().height;
	}
	,ctx: null
	,__class__: gryffin_display_Context
	,__properties__: {get_height:"get_height",get_width:"get_width",set_textBaseline:"set_textBaseline",get_textBaseline:"get_textBaseline",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_font:"set_font",get_font:"get_font",set_lineDashOffset:"set_lineDashOffset",get_lineDashOffset:"get_lineDashOffset",set_miterLimit:"set_miterLimit",get_miterLimit:"get_miterLimit",set_lineJoin:"set_lineJoin",get_lineJoin:"get_lineJoin",set_lineCap:"set_lineCap",get_lineCap:"get_lineCap",set_lineWidth:"set_lineWidth",get_lineWidth:"get_lineWidth",set_imageSmoothingEnabled:"set_imageSmoothingEnabled",get_imageSmoothingEnabled:"get_imageSmoothingEnabled",set_filter:"set_filter",get_filter:"get_filter",set_shadowColor:"set_shadowColor",get_shadowColor:"get_shadowColor",set_shadowBlur:"set_shadowBlur",get_shadowBlur:"get_shadowBlur",set_shadowOffsetY:"set_shadowOffsetY",get_shadowOffsetY:"get_shadowOffsetY",set_shadowOffsetX:"set_shadowOffsetX",get_shadowOffsetX:"get_shadowOffsetX",set_fillStyle:"set_fillStyle",get_fillStyle:"get_fillStyle",set_strokeStyle:"set_strokeStyle",get_strokeStyle:"get_strokeStyle",set_globalCompositeOperation:"set_globalCompositeOperation",get_globalCompositeOperation:"get_globalCompositeOperation",set_globalAlpha:"set_globalAlpha",get_globalAlpha:"get_globalAlpha",get_canvas:"get_canvas"}
};
var gryffin_display__$Ctx_Ctx_$Impl_$ = {};
$hxClasses["gryffin.display._Ctx.Ctx_Impl_"] = gryffin_display__$Ctx_Ctx_$Impl_$;
gryffin_display__$Ctx_Ctx_$Impl_$.__name__ = ["gryffin","display","_Ctx","Ctx_Impl_"];
gryffin_display__$Ctx_Ctx_$Impl_$._new = function(c) {
	var this1 = new gryffin_display_Context(c);
	return this1;
};
gryffin_display__$Ctx_Ctx_$Impl_$.fromC2d = function(c) {
	var this1 = new gryffin_display_Context(c);
	return this1;
};
var gryffin_display_CtxTools = function() { };
$hxClasses["gryffin.display.CtxTools"] = gryffin_display_CtxTools;
gryffin_display_CtxTools.__name__ = ["gryffin","display","CtxTools"];
gryffin_display_CtxTools.patchedMeasureText = function(c,txt) {
	var font = c.font;
	var w = c.measureText(txt).width;
	var th = gryffin_display_CtxTools.getTextHeight(font);
	return { "width" : w, "height" : th.height, "ascent" : th.ascent, "descent" : th.descent};
};
gryffin_display_CtxTools.getTextHeight = function(font) {
	var doc = window.document;
	var span = doc.createElement("span");
	span.style.font = font;
	span.textContent = "Hg";
	var block = doc.createElement("div");
	block.style.display = "inline-block";
	block.style.width = "1px";
	block.style.height = "0px";
	var div = doc.createElement("div");
	div.appendChild(span);
	div.appendChild(block);
	var body = doc.body;
	body.appendChild(div);
	var result = { "ascent" : 0.0, "descent" : 0.0, "height" : 0.0};
	try {
		var e = block;
		var bo = function() {
			return gryffin_display_CtxTools.offset(e);
		};
		var e1 = span;
		var so = function() {
			return gryffin_display_CtxTools.offset(e1);
		};
		var this1 = function() {
			return block.style.verticalAlign;
		};
		var this2 = function(v) {
			return block.style.verticalAlign = v;
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		var align = this3;
		align.set("baseline");
		result.ascent = bo().top - so().top;
		align.set("bottom");
		result.height = bo().top - so().top;
		result.descent = result.height - result.ascent;
		div.remove();
		return result;
	} catch( err ) {
		if (err instanceof js__$Boot_HaxeError) err = err.val;
		console.log(err);
		div.remove();
	}
	return result;
};
gryffin_display_CtxTools.offset = function(e) {
	try {
		var rect = e.getBoundingClientRect();
		var win = window;
		var doc = win.document.documentElement;
		return { "top" : rect.top + win.pageYOffset - doc.clientTop, "left" : rect.left + win.pageXOffset - doc.clientLeft};
	} catch( error ) {
		if (error instanceof js__$Boot_HaxeError) error = error.val;
		console.log(error);
		return { "top" : 0, "left" : 0};
	}
};
gryffin_display_CtxTools.drawVertices = function(c,vertices) {
	var _g = [];
	var p = vertices.iterator();
	while(p.hasNext()) {
		var p1 = p.next();
		_g.push(p1.clone());
	}
	var points = _g;
	var first = points.shift();
	var x = first.get_x();
	var y = first.get_y();
	c.ctx.moveTo(x,y);
	var _g1 = 0;
	while(_g1 < points.length) {
		var p2 = points[_g1];
		++_g1;
		var x1 = p2.get_x();
		var y1 = p2.get_y();
		c.ctx.lineTo(x1,y1);
	}
	var x2 = first.get_x();
	var y2 = first.get_y();
	c.ctx.lineTo(x2,y2);
};
gryffin_display_CtxTools.applyMatrix = function(c,m) {
	if(m.a == 1 && m.b == 0 && m.c == 0 && m.d == 1) {
		c.translate(m.tx,m.ty);
	} else {
		c.setTransform(m.a,m.b,m.c,m.d,m.tx,m.ty);
	}
};
gryffin_display_CtxTools.obtainMatrix = function(c) {
	return new tannus_geom_Matrix();
};
var gryffin_display_Image = function(i) {
	this.img = i != null ? i : window.document.createElement("img");
	this.ready = new tannus_io_VoidSignal();
	this.targetWidth = this.targetHeight = 0;
	var _gthis = this;
	this.img.addEventListener("load",function(event) {
		_gthis.ready.call();
	});
	this.img.addEventListener("error",function(error) {
		console.log(error);
	});
	if(this.img.complete) {
		gryffin_Tools.defer(($_=this.ready,$bind($_,$_.fire)));
	}
};
$hxClasses["gryffin.display.Image"] = gryffin_display_Image;
gryffin_display_Image.__name__ = ["gryffin","display","Image"];
gryffin_display_Image.__interfaces__ = [gryffin_display_BitmapSource];
gryffin_display_Image.load = function(src,cb) {
	var _this = gryffin_display_Image.registry;
	if(!(__map_reserved[src] != null ? _this.existsReserved(src) : _this.h.hasOwnProperty(src))) {
		var img = new gryffin_display_Image();
		if(cb != null) {
			img.ready.once(function() {
				var f = cb;
				var a1 = img;
				gryffin_Tools.defer(function() {
					f(a1);
				});
			});
		}
		img.img.src = src;
		var _this1 = gryffin_display_Image.registry;
		if(__map_reserved[src] != null) {
			_this1.setReserved(src,img);
		} else {
			_this1.h[src] = img;
		}
		return img;
	} else {
		var _this2 = gryffin_display_Image.registry;
		var img1 = __map_reserved[src] != null ? _this2.getReserved(src) : _this2.h[src];
		if(cb != null) {
			var f1 = cb;
			var a11 = img1;
			(img1.img.complete && img1.img.src != null && img1.img.src != "" ? gryffin_Tools.defer : ($_=img1.ready,$bind($_,$_.once)))(function() {
				f1(a11);
			});
		}
		return img1;
	}
};
gryffin_display_Image.prototype = {
	__init: function() {
		var _gthis = this;
		this.img.addEventListener("load",function(event) {
			_gthis.ready.call();
		});
		this.img.addEventListener("error",function(error) {
			console.log(error);
		});
		if(this.img.complete) {
			gryffin_Tools.defer(($_=this.ready,$bind($_,$_.fire)));
		}
	}
	,toCanvas: function() {
		var _gthis = this;
		var can = gryffin_display_Canvas.create(this.targetWidth,this.targetHeight);
		var c = can._ctx.get();
		if(this.img.complete && this.img.src != null && this.img.src != "") {
			can.resize(this.img.naturalWidth,this.img.naturalHeight);
			c = can._ctx.get();
			c.drawComponent(this,0,0,this.img.naturalWidth,this.img.naturalHeight,0,0,this.img.naturalWidth,this.img.naturalHeight);
		} else {
			c.ctx.save();
			c.set_fillStyle("#000000");
			c.fillRect(0,0,this.targetWidth,this.targetHeight);
			c.ctx.restore();
			this.ready.once(function() {
				can.resize(_gthis.img.naturalWidth,_gthis.img.naturalHeight);
				c = can._ctx.get();
				c.drawComponent(_gthis,0,0,_gthis.img.naturalWidth,_gthis.img.naturalHeight,0,0,_gthis.img.naturalWidth,_gthis.img.naturalHeight);
			});
		}
		return can;
	}
	,paint: function(c,s,d) {
		c.drawImage(this.img,s.x,s.y,s.width,s.height,d.x,d.y,d.width,d.height);
	}
	,rotate: function(angle) {
		var this1 = new tannus_geom_CRectangle(0,0,this.img.naturalWidth,this.img.naturalHeight);
		var r = this1;
		var rr = this.rotatedSize(angle);
		var can = gryffin_display_Canvas.create(Math.floor(rr.width),Math.floor(rr.height));
		var this2 = new tannus_geom_CRectangle(0,0,can.canvas.width,can.canvas.height);
		var cr = this2;
		var c = can._ctx.get();
		c.ctx.save();
		c.ctx.translate(cr.x + cr.width / 2,cr.y + cr.height / 2);
		c.ctx.rotate(angle.v * Math.PI / 180);
		c.ctx.translate(-(cr.x + cr.width / 2),-(cr.y + cr.height / 2));
		c.drawImage(this.img,0,0,this.img.naturalWidth,this.img.naturalHeight,0,0,cr.width,cr.height);
		c.ctx.restore();
		return can;
	}
	,rotatedSize: function(angle) {
		var r = angle.v * Math.PI / 180;
		var a = this.img.naturalWidth * Math.cos(r);
		var b = this.img.naturalHeight * Math.sin(r);
		var rotatedWidth = a + b;
		var p = this.img.naturalWidth * Math.sin(r);
		var q = this.img.naturalHeight * Math.cos(r);
		var rotatedHeight = p + q;
		var this1 = new tannus_geom_CRectangle(0,0,rotatedWidth,rotatedHeight);
		return this1;
	}
	,getWidth: function() {
		return this.img.naturalWidth;
	}
	,getHeight: function() {
		return this.img.naturalHeight;
	}
	,get_src: function() {
		return this.img.src;
	}
	,set_src: function(v) {
		return this.img.src = v;
	}
	,get_width: function() {
		return this.img.naturalWidth;
	}
	,get_height: function() {
		return this.img.naturalHeight;
	}
	,get_rect: function() {
		var this1 = new tannus_geom_CRectangle(0,0,this.img.naturalWidth,this.img.naturalHeight);
		return this1;
	}
	,get_complete: function() {
		if(this.img.complete && this.img.src != null) {
			return this.img.src != "";
		} else {
			return false;
		}
	}
	,img: null
	,targetWidth: null
	,targetHeight: null
	,ready: null
	,__class__: gryffin_display_Image
	,__properties__: {get_complete:"get_complete",get_rect:"get_rect",get_height:"get_height",get_width:"get_width",set_src:"set_src",get_src:"get_src"}
};
var gryffin_display_LinkedPixels = function(owner,are,dat) {
	gryffin_display_CPixels.call(this,dat);
	this.c = owner;
	this.area = are;
};
$hxClasses["gryffin.display.LinkedPixels"] = gryffin_display_LinkedPixels;
gryffin_display_LinkedPixels.__name__ = ["gryffin","display","LinkedPixels"];
gryffin_display_LinkedPixels.__super__ = gryffin_display_CPixels;
gryffin_display_LinkedPixels.prototype = $extend(gryffin_display_CPixels.prototype,{
	save: function() {
		this.c.ctx.putImageData(this.idata,0,0,this.area.x,this.area.y,this.area.width,this.area.height);
	}
	,c: null
	,area: null
	,__class__: gryffin_display_LinkedPixels
});
var gryffin_display_Pixel = function(s,p) {
	this.src = s;
	this.pos = p;
};
$hxClasses["gryffin.display.Pixel"] = gryffin_display_Pixel;
gryffin_display_Pixel.__name__ = ["gryffin","display","Pixel"];
gryffin_display_Pixel.prototype = {
	hsl: function() {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		var r = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		var g = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		var b = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		var this1 = new tannus_graphics__$Color_TColor(r,g,b,_this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3]);
		return this1.toHsl();
	}
	,hue: function() {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		var r = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		var g = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		var b = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		var this1 = new tannus_graphics__$Color_TColor(r,g,b,_this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3]);
		return this1.toHsl().hue;
	}
	,saturation: function() {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		var r = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		var g = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		var b = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		var this1 = new tannus_graphics__$Color_TColor(r,g,b,_this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3]);
		return this1.toHsl().saturation;
	}
	,lightness: function() {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		var r = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		var g = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		var b = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		var this1 = new tannus_graphics__$Color_TColor(r,g,b,_this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3]);
		return this1.toHsl().lightness;
	}
	,luminance: function() {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		var r = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		var g = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		var b = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		var this1 = new tannus_graphics__$Color_TColor(r,g,b,_this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3]);
		var _this4 = this1;
		return 0.2126 * _this4.get_red() + 0.7152 * _this4.get_green() + 0.0722 * _this4.get_blue();
	}
	,brightness: function() {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		var r = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		var g = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		var b = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		var this1 = new tannus_graphics__$Color_TColor(r,g,b,_this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3]);
		var _this4 = this1;
		return (_this4.get_red() * 299 + _this4.get_green() * 587 + _this4.get_blue() * 114) / 1000 | 0;
	}
	,greyscale: function() {
		var _this = this.src;
		var v = _this.getAtIndex((this.pos.get_x() | 0) + (this.pos.get_y() | 0) * _this.idata.width).greyscale();
		var _this1 = this.src;
		_this1.setAtIndex((this.pos.get_x() | 0) + (this.pos.get_y() | 0) * _this1.idata.width,v);
	}
	,rel: function(x,y) {
		var rx = this.pos.get_x() + x;
		var ry = this.pos.get_y() + y;
		if(rx <= this.src.idata.width && ry <= this.src.idata.height) {
			var _this = this.src;
			var this1 = new tannus_geom_TPoint(rx,ry,0);
			return new gryffin_display_Pixel(_this,this1);
		} else {
			return null;
		}
	}
	,get_color: function() {
		var _this = this.src;
		return _this.getAtIndex((this.pos.get_x() | 0) + (this.pos.get_y() | 0) * _this.idata.width);
	}
	,set_color: function(v) {
		var _this = this.src;
		return _this.setAtIndex((this.pos.get_x() | 0) + (this.pos.get_y() | 0) * _this.idata.width,v);
	}
	,get_red: function() {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		return _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
	}
	,set_red: function(v) {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		return _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4] = v;
	}
	,get_green: function() {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		return _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 1];
	}
	,set_green: function(v) {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		return _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 1] = v;
	}
	,get_blue: function() {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		return _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 2];
	}
	,set_blue: function(v) {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		return _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 2] = v;
	}
	,get_alpha: function() {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		return _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 3];
	}
	,set_alpha: function(v) {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		return _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 3] = v;
	}
	,get_top: function() {
		return this.rel(0,-1);
	}
	,get_right: function() {
		return this.rel(1,0);
	}
	,get_bottom: function() {
		return this.rel(0,1);
	}
	,get_left: function() {
		return this.rel(-1,0);
	}
	,get_c: function() {
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		var r = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		var g = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		var b = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		var this1 = new tannus_graphics__$Color_TColor(r,g,b,_this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3]);
		return this1;
	}
	,src: null
	,pos: null
	,__class__: gryffin_display_Pixel
	,__properties__: {get_c:"get_c",get_left:"get_left",get_bottom:"get_bottom",get_right:"get_right",get_top:"get_top",set_alpha:"set_alpha",get_alpha:"get_alpha",set_blue:"set_blue",get_blue:"get_blue",set_green:"set_green",get_green:"get_green",set_red:"set_red",get_red:"get_red",set_color:"set_color",get_color:"get_color"}
};
var gryffin_display__$Pixels_Pixels_$Impl_$ = {};
$hxClasses["gryffin.display._Pixels.Pixels_Impl_"] = gryffin_display__$Pixels_Pixels_$Impl_$;
gryffin_display__$Pixels_Pixels_$Impl_$.__name__ = ["gryffin","display","_Pixels","Pixels_Impl_"];
gryffin_display__$Pixels_Pixels_$Impl_$._new = function(i) {
	var this1 = new gryffin_display_CPixels(i);
	return this1;
};
var gryffin_display_PixelsTools = function() { };
$hxClasses["gryffin.display.PixelsTools"] = gryffin_display_PixelsTools;
gryffin_display_PixelsTools.__name__ = ["gryffin","display","PixelsTools"];
gryffin_display_PixelsTools.shaderReplacer = function(e) {
	var _g = e.expr;
	switch(_g[1]) {
	case 0:
		if(_g[2][1] == 3) {
			if(_g[2][2] == "color") {
				return { expr : haxe_macro_ExprDef.EArrayDecl([{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("red")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1217, max : 1220}},{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("green")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1222, max : 1227}},{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("blue")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1229, max : 1233}}]), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1216, max : 1234}};
			} else {
				return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
			}
		} else {
			return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
		}
		break;
	case 2:
		if(_g[2][1] == 4) {
			var right = _g[4];
			var left = _g[3];
			var _g1 = left.expr;
			if(_g1[1] == 0) {
				if(_g1[2][1] == 3) {
					if(_g1[2][2] == "color") {
						return haxe_macro_ExprTools.map({ expr : haxe_macro_ExprDef.EBlock([{ expr : haxe_macro_ExprDef.EVars([{ name : "col", type : null, expr : right}]), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1531, max : 1548}},{ expr : haxe_macro_ExprDef.EBinop(haxe_macro_Binop.OpAssign,{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("red")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1556, max : 1559}},{ expr : haxe_macro_ExprDef.EArray({ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("col")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1562, max : 1565}},{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CInt("0")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1566, max : 1567}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1562, max : 1568}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1556, max : 1568}},{ expr : haxe_macro_ExprDef.EBinop(haxe_macro_Binop.OpAssign,{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("green")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1577, max : 1582}},{ expr : haxe_macro_ExprDef.EArray({ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("col")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1585, max : 1588}},{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CInt("1")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1589, max : 1590}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1585, max : 1591}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1577, max : 1591}},{ expr : haxe_macro_ExprDef.EBinop(haxe_macro_Binop.OpAssign,{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("blue")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1600, max : 1604}},{ expr : haxe_macro_ExprDef.EArray({ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("col")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1607, max : 1610}},{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CInt("2")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1611, max : 1612}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1607, max : 1613}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1600, max : 1613}}]), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1522, max : 1650}},gryffin_display_PixelsTools.shaderReplacer);
					} else {
						return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
					}
				} else {
					return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
				}
			} else {
				return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
			}
		} else {
			return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
		}
		break;
	default:
		return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
	}
};
var gryffin_display_TextBox = function() {
	this.cache = true;
	this.onStateChanged = new tannus_io_VoidSignal();
	this.onTextChanged = new tannus_io_VoidSignal();
	this.txt = "";
	this.multiline = false;
	this.wordWrap = null;
	this.stateChanged = true;
	this.canvas = new gryffin_display_Canvas();
	this.set_padding(0);
	this.set_fontFamily("Arial");
	this.set_fontSize(12);
	this.set_fontSizeUnit("pt");
	var this1 = new tannus_graphics__$Color_TColor(0,0,0,null);
	this._color = this1;
	this._backgroundColor = null;
	this._align = "start";
	this._bold = false;
	this._italic = false;
};
$hxClasses["gryffin.display.TextBox"] = gryffin_display_TextBox;
gryffin_display_TextBox.__name__ = ["gryffin","display","TextBox"];
gryffin_display_TextBox.__interfaces__ = [gryffin_display_Paintable];
gryffin_display_TextBox.prototype = {
	paint: function(c,s,d) {
		if(this.cache) {
			var comp = this.toCanvas();
			var this1 = new gryffin_display_Context(c.ctx);
			comp.paint(this1,s,d);
		} else if(this.multiline) {
			this.measure();
			var w = Math.round(this.get_textWidth() + this.get_padding() * 2);
			var h = Math.round(this.get_textHeight() + this.get_padding() * 2);
			if(this.get_backgroundColor() != null) {
				c.set_fillStyle(this.get_backgroundColor().toString());
				c.fillRect(d.x,d.y,w,h);
			}
			this.applyStyles(c);
			var this2 = new tannus_geom_TPoint(d.x + this.get_padding(),d.y + this.get_padding(),0);
			var p = this2;
			var _g = 0;
			var _g1 = this.lines();
			while(_g < _g1.length) {
				var line = _g1[_g];
				++_g;
				c.fillText(line.text,p.get_x(),p.get_y());
				p.set_y(p.get_y() + line.height);
			}
		} else {
			this.measure();
			var w1 = Math.round(this.get_textWidth() + this.get_padding() * 2);
			var h1 = Math.round(this.get_textHeight() + this.get_padding() * 2);
			if(this.get_backgroundColor() != null) {
				c.set_fillStyle(this.get_backgroundColor().toString());
				c.fillRect(d.x,d.y,w1,h1);
			}
			this.applyStyles(c);
			c.fillText(this.get_text(),d.x + this.get_padding(),d.y + this.get_padding());
		}
	}
	,getMetrics: function(s) {
		this.applyStyles(this.canvas._ctx.get());
		return gryffin_display_CtxTools.patchedMeasureText(this.canvas._ctx.get().ctx,s);
	}
	,autoScale: function(mw,mh) {
		if(mw == null && mh == null) {
			return;
		} else {
			this.set_fontSize(1);
			while(true) {
				this.measure();
				if(mw != null && this.get_width() > mw) {
					break;
				}
				if(mh != null && this.get_height() > mh) {
					break;
				}
				var _g = this;
				_g.set_fontSize(_g.get_fontSize() + 1);
			}
			var _g1 = this;
			_g1.set_fontSize(_g1.get_fontSize() - 1);
		}
	}
	,fit: function(w,h) {
		if(w == null && h == null) {
			return;
		} else {
			while(true) {
				this.measure();
				if(w != null && this.get_width() > w) {
					var _g = this;
					var _g1 = _g.get_fontSize();
					_g.set_fontSize(_g1 - 1);
				} else if(h != null && this.get_height() > h) {
					var _g2 = this;
					var _g11 = _g2.get_fontSize();
					_g2.set_fontSize(_g11 - 1);
				} else {
					break;
				}
			}
		}
	}
	,wrappedLines: function() {
		var lineWidth = this.wordWrap;
		var s = tannus_ds_StringUtils.byteMap(this.get_text(),function($char) {
			if($char == 10 || $char == 13) {
				return 32;
			} else {
				return $char;
			}
		});
		var allwords = s.split(" ");
		var lines = [];
		var line = [];
		var _g = 0;
		while(_g < allwords.length) {
			var w = allwords[_g];
			++_g;
			var testLine = line.concat([w]).join(" ");
			var metrics = this.getMetrics(testLine);
			if(metrics.width > lineWidth) {
				lines.push(line.join(" "));
				line = [w];
			} else {
				line.push(w);
			}
		}
		return lines;
	}
	,toCanvas: function() {
		if(this.stateChanged) {
			this.stateChanged = false;
			if(this.multiline) {
				this.measure();
				this.canvas.resize(Math.round(this.get_textWidth() + this.get_padding() * 2),Math.round(this.get_textHeight() + this.get_padding() * 2));
				var c = this.canvas._ctx.get();
				if(this.get_backgroundColor() != null) {
					c.set_fillStyle(this.get_backgroundColor().toString());
					c.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
				}
				this.applyStyles(this.canvas._ctx.get());
				var this1 = new tannus_geom_TPoint(this.get_padding(),this.get_padding(),0);
				var p = this1;
				var _g = 0;
				var _g1 = this.lines();
				while(_g < _g1.length) {
					var line = _g1[_g];
					++_g;
					c.fillText(line.text,p.get_x(),p.get_y());
					p.set_y(p.get_y() + line.height);
				}
			} else {
				this.measure();
				this.canvas.resize(Math.round(this.get_textWidth() + this.get_padding() * 2),Math.round(this.get_textHeight() + this.get_padding() * 2));
				var c1 = this.canvas._ctx.get();
				if(this.get_backgroundColor() != null) {
					c1.set_fillStyle(this.get_backgroundColor().toString());
					c1.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
				}
				this.applyStyles(this.canvas._ctx.get());
				this.canvas._ctx.get().fillText(this.get_text(),this.get_padding(),this.get_padding());
			}
		}
		return this.canvas;
	}
	,applyStyles: function(c) {
		c.set_font(this.fontString());
		c.set_textAlign(this.get_align());
		c.set_fillStyle(this.get_color().toString());
		c.set_textBaseline("top");
	}
	,fontString: function() {
		var bits = [];
		if(this.get_bold()) {
			bits.push("bold");
		}
		if(this.get_italic()) {
			bits.push("italic");
		}
		bits.push("" + this.get_fontSize() + this.get_fontSizeUnit());
		bits.push(this.get_fontFamily());
		return bits.join(" ");
	}
	,measure: function() {
		if(this.multiline) {
			this._textWidth = 0;
			this._textHeight = 0;
			var _g = 0;
			var _g1 = this.lines();
			while(_g < _g1.length) {
				var l = _g1[_g];
				++_g;
				this._textWidth = Math.max(this._textWidth,l.width);
				this._textHeight += l.height;
			}
		} else {
			this.applyStyles(this.canvas._ctx.get());
			var _this = this.canvas._ctx.get();
			var text = this.get_text();
			var size = gryffin_display_CtxTools.patchedMeasureText(_this.ctx,text);
			this._textWidth = size.width;
			this._textHeight = size.height;
		}
	}
	,lines: function() {
		this.multiline = false;
		var slines = this.wordWrap != null ? this.wrappedLines() : this.get_text().split("\n");
		var lines = [];
		var _g = 0;
		while(_g < slines.length) {
			var s = slines[_g];
			++_g;
			var m = this.getMetrics(s);
			lines.push({ "text" : s, "width" : m.width, "height" : m.height});
		}
		this.multiline = true;
		return lines;
	}
	,hasStateChanged: function() {
		return this.stateChanged;
	}
	,changed: function() {
		this.stateChanged = true;
		this.onStateChanged.call();
	}
	,get_text: function() {
		return this.txt;
	}
	,set_text: function(v) {
		if(v != this.txt) {
			this.changed();
			this.onTextChanged.call();
		}
		return this.txt = v;
	}
	,get_padding: function() {
		return this._padding;
	}
	,set_padding: function(v) {
		if(v != this._padding) {
			this.changed();
		}
		return this._padding = v;
	}
	,get_fontFamily: function() {
		return this._fontFamily;
	}
	,set_fontFamily: function(v) {
		if(v != this._fontFamily) {
			this.changed();
		}
		if(tannus_ds_StringUtils.has(v," ")) {
			v = tannus_ds_StringUtils.wrap(v,"\"");
		}
		return this._fontFamily = v;
	}
	,get_fontSize: function() {
		return this._fontSize;
	}
	,set_fontSize: function(v) {
		if(v != this._fontSize) {
			this.changed();
		}
		return this._fontSize = v;
	}
	,get_fontSizeUnit: function() {
		return this._fontSizeUnit;
	}
	,set_fontSizeUnit: function(v) {
		if(v != this._fontSizeUnit) {
			this.changed();
		}
		return this._fontSizeUnit = v;
	}
	,get_textWidth: function() {
		if(this.stateChanged) {
			this.measure();
		}
		return this._textWidth;
	}
	,get_textHeight: function() {
		if(this.stateChanged) {
			this.measure();
		}
		return this._textHeight;
	}
	,get_width: function() {
		return this.get_padding() * 2 + this.get_textWidth();
	}
	,get_height: function() {
		return this.get_padding() * 2 + this.get_textHeight();
	}
	,get_color: function() {
		return this._color;
	}
	,set_color: function(v) {
		if(v != this._color) {
			this.changed();
		}
		return this._color = v;
	}
	,get_backgroundColor: function() {
		return this._backgroundColor;
	}
	,set_backgroundColor: function(v) {
		if(v != this._backgroundColor) {
			this.changed();
		}
		return this._backgroundColor = v;
	}
	,get_align: function() {
		return this._align;
	}
	,set_align: function(v) {
		if(v != this._align) {
			this.changed();
		}
		return this._align = v;
	}
	,get_bold: function() {
		return this._bold;
	}
	,set_bold: function(v) {
		if(v != this._bold) {
			this.changed();
		}
		return this._bold = v;
	}
	,get_italic: function() {
		return this._italic;
	}
	,set_italic: function(v) {
		if(v != this._italic) {
			this.changed();
		}
		return this._italic = v;
	}
	,txt: null
	,stateChanged: null
	,canvas: null
	,_padding: null
	,_fontFamily: null
	,_fontSize: null
	,_fontSizeUnit: null
	,_color: null
	,_backgroundColor: null
	,_align: null
	,_bold: null
	,_italic: null
	,multiline: null
	,wordWrap: null
	,cache: null
	,onStateChanged: null
	,onTextChanged: null
	,_textWidth: null
	,_textHeight: null
	,__class__: gryffin_display_TextBox
	,__properties__: {set_italic:"set_italic",get_italic:"get_italic",set_bold:"set_bold",get_bold:"get_bold",set_align:"set_align",get_align:"get_align",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_color:"set_color",get_color:"get_color",get_height:"get_height",get_width:"get_width",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_fontSizeUnit:"set_fontSizeUnit",get_fontSizeUnit:"get_fontSizeUnit",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_fontFamily:"set_fontFamily",get_fontFamily:"get_fontFamily",set_padding:"set_padding",get_padding:"get_padding",set_text:"set_text",get_text:"get_text"}
};
var gryffin_display_Video = function(el) {
	this.ready = false;
	gryffin_core_EventDispatcher.call(this);
	this.vid = el != null ? el : window.document.createElement("video");
	this.onerror = new tannus_io_Signal();
	this.ondurationchange = new tannus_io_Signal();
	this.onvolumechange = new tannus_io_Signal();
	this.onratechange = new tannus_io_Signal();
	this.onstatechange = new tannus_io_Signal();
	this.onseekbegin = new tannus_io_VoidSignal();
	this.onseekend = new tannus_io_VoidSignal();
	this.onended = new tannus_io_VoidSignal();
	this.oncanplay = new tannus_io_VoidSignal();
	this.onplay = new tannus_io_VoidSignal();
	this.onpause = new tannus_io_VoidSignal();
	this.onload = new tannus_io_VoidSignal();
	this.onprogress = new tannus_io_Signal();
	this.onloadeddata = new tannus_io_VoidSignal();
	this.onloadedmetadata = new tannus_io_VoidSignal();
	this.listen();
};
$hxClasses["gryffin.display.Video"] = gryffin_display_Video;
gryffin_display_Video.__name__ = ["gryffin","display","Video"];
gryffin_display_Video.__interfaces__ = [gryffin_media_MediaObject,tannus_ds_Stateful,gryffin_display_Paintable];
gryffin_display_Video.createVid = function() {
	return window.document.createElement("video");
};
gryffin_display_Video.__super__ = gryffin_core_EventDispatcher;
gryffin_display_Video.prototype = $extend(gryffin_core_EventDispatcher.prototype,{
	destroy: function() {
		this.pause();
		this.vid.remove();
	}
	,paint: function(c,s,d) {
		if(this.ready) {
			c.drawImage(this.vid,s.x,s.y,s.width,s.height,d.x,d.y,d.width,d.height);
		} else {
			c.ctx.save();
			c.ctx.beginPath();
			c.set_fillStyle("black");
			c.ctx.rect(d.x,d.y,d.width,d.height);
			c.ctx.closePath();
			c.ctx.fill();
			c.ctx.restore();
		}
	}
	,capture: function(x,y,w,h) {
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		if(w == null) {
			w = this.vid.width - x;
		}
		if(h == null) {
			h = this.vid.height - y;
		}
		var canvas = gryffin_display_Canvas.create(w,h);
		canvas._ctx.get().drawImage(this.vid,x,y,this.vid.width,this.vid.height,0,0,w,h);
		return canvas;
	}
	,clone: function() {
		var ce = this.vid.cloneNode(true);
		var cv = new gryffin_display_Video(ce);
		return cv;
	}
	,frames: function(jumpSeconds,oncapture) {
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var stack = new tannus_ds_AsyncStack();
			var results = [];
			var i = 0;
			var _this = tannus_media_CDur.fromSecondsI(Math.floor(_gthis.vid.duration));
			var len = 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
			while(i < len) {
				stack.under(function(next) {
					_gthis.get_frame(i < 0 ? 0 : i > len ? len : i,results,function(canvas) {
						oncapture(i,canvas);
						next();
					});
				});
				i += jumpSeconds;
			}
			stack.run(function() {
				accept(results);
			});
		},null).array();
	}
	,get_frame: function(n,list,done) {
		var _gthis = this;
		gryffin_Tools.defer(function() {
			_gthis.vid.currentTime = n;
			_gthis.oncanplay.once(function() {
				var c = _gthis.capture();
				list.push(c);
				done(c);
			});
		});
	}
	,frameCount: function() {
		var _this = tannus_media_CDur.fromSecondsI(Math.floor(this.vid.duration));
		return (3600 * _this.hours + 60 * _this.minutes + _this.seconds) * 30;
	}
	,currentFrame: function() {
		var ct = tannus_media_CDur.fromSecondsI(Math.floor(this.vid.currentTime));
		return (3600 * ct.hours + 60 * ct.minutes + ct.seconds) * 30;
	}
	,gotoFrame: function(frameIndex) {
		var frameTime = 0.0333333333333333329;
		this.vid.currentTime = frameIndex * frameTime;
	}
	,play: function() {
		this.vid.play();
		this.dispatch("play",null);
	}
	,pause: function() {
		this.vid.pause();
		this.dispatch("pause",null);
	}
	,load: function(url,can_manipulate,can_play) {
		this.pause();
		this.set_src(url);
		this.onloadedmetadata.once(function() {
			console.log("video's metadata has been loaded");
			if(can_manipulate != null) {
				can_manipulate();
			}
		});
		this.oncanplay.once(function() {
			console.log("video can be played now");
			if(can_play != null) {
				can_play();
			}
		});
		this.onerror.listen(function(error) {
			window.console.error(error);
		},true);
	}
	,seek: function(time,callback) {
		if(callback != null) {
			this.onseekend.once(callback);
		}
		this.vid.currentTime = time;
	}
	,getState: function() {
		return { "volume" : this.vid.volume, "speed" : this.vid.playbackRate};
	}
	,setState: function(state) {
		this.set_volume(state.volume);
		this.set_playbackRate(state.speed);
	}
	,clear: function() {
		var state = this.getState();
		this.pause();
		this.vid.remove();
		this.vid = null;
		this.vid = window.document.createElement("video");
		this.setState(state);
	}
	,listen: function() {
		var _gthis = this;
		var f = ($_=this.vid,$bind($_,$_.addEventListener));
		var on = function(a1,a2) {
			f(a1,a2);
		};
		on("error",function() {
			_gthis.onerror.broadcast(_gthis.vid.error);
		});
		on("ended",($_=this.onended,$bind($_,$_.fire)));
		on("canplay",($_=this.oncanplay,$bind($_,$_.fire)));
		on("play",($_=this.onplay,$bind($_,$_.fire)));
		on("pause",($_=this.onpause,$bind($_,$_.fire)));
		on("load",($_=this.onload,$bind($_,$_.fire)));
		on("progress",function(e) {
			_gthis.onprogress.broadcast(tannus_math__$Percent_Percent_$Impl_$.percent(_gthis.vid.currentTime,_gthis.vid.duration));
		});
		on("loadeddata",($_=this.onloadeddata,$bind($_,$_.fire)));
		on("loadedmetadata",($_=this.onloadedmetadata,$bind($_,$_.fire)));
		on("seeking",($_=this.onseekbegin,$bind($_,$_.fire)));
		on("seeked",($_=this.onseekend,$bind($_,$_.fire)));
		this.durationChanged();
		this.volumeChanged();
		this.rateChanged();
		this.onloadedmetadata.once(function() {
			_gthis.vid.width = _gthis.vid.videoWidth;
			_gthis.vid.height = _gthis.vid.videoHeight;
		});
	}
	,durationChanged: function() {
		var _gthis = this;
		var last_duration = null;
		this.vid.addEventListener("durationchange",function() {
			var cur_dur = tannus_media_CDur.fromSecondsI(Math.floor(_gthis.vid.duration));
			var this1;
			var this2 = [cur_dur,last_duration];
			this1 = this2;
			var delta = this1;
			_gthis.ondurationchange.broadcast(delta);
			last_duration = cur_dur;
		});
	}
	,volumeChanged: function() {
		var _gthis = this;
		var last_vol = this.vid.volume;
		this.vid.addEventListener("volumechange",function() {
			var this1;
			var this2 = [_gthis.vid.volume,last_vol];
			this1 = this2;
			var delta = this1;
			_gthis.onvolumechange.broadcast(delta);
			_gthis.onstatechange.broadcast(_gthis.getState());
			_gthis.dispatch("volumechange",delta);
			last_vol = _gthis.vid.volume;
		});
	}
	,rateChanged: function() {
		var _gthis = this;
		var last_rate = this.vid.playbackRate;
		this.vid.addEventListener("ratechange",function() {
			var this1;
			var this2 = [_gthis.vid.playbackRate,last_rate];
			this1 = this2;
			var delta = this1;
			_gthis.onratechange.broadcast(delta);
			_gthis.onstatechange.broadcast(_gthis.getState());
			_gthis.dispatch("ratechange",delta);
			last_rate = _gthis.vid.playbackRate;
		});
	}
	,get_width: function() {
		return this.vid.width;
	}
	,set_width: function(v) {
		return this.vid.width = v;
	}
	,get_height: function() {
		return this.vid.height;
	}
	,set_height: function(v) {
		return this.vid.height = v;
	}
	,get_naturalWidth: function() {
		return this.vid.videoWidth;
	}
	,get_naturalHeight: function() {
		return this.vid.videoHeight;
	}
	,get_rect: function() {
		var this1 = new tannus_geom_CRectangle(0,0,this.vid.width,this.vid.height);
		return this1;
	}
	,get_src: function() {
		return Std.string(this.vid.currentSrc);
	}
	,set_src: function(v) {
		var _gthis = this;
		this.vid.src = v.toString();
		this.ready = false;
		this.onloadedmetadata.once(function() {
			_gthis.ready = true;
		});
		return this.get_src();
	}
	,get_duration: function() {
		return tannus_media_CDur.fromSecondsI(Math.floor(this.vid.duration));
	}
	,get_durationTime: function() {
		return this.vid.duration;
	}
	,get_currentTime: function() {
		return this.vid.currentTime;
	}
	,set_currentTime: function(v) {
		return this.vid.currentTime = v;
	}
	,get_time: function() {
		return tannus_media_CDur.fromSecondsI(Math.floor(this.vid.currentTime));
	}
	,set_time: function(v) {
		this.vid.currentTime = 3600 * v.hours + 60 * v.minutes + v.seconds;
		return tannus_media_CDur.fromSecondsI(Math.floor(this.vid.currentTime));
	}
	,get_ended: function() {
		return this.vid.ended;
	}
	,get_progress: function() {
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.vid.currentTime,this.vid.duration);
	}
	,set_progress: function(v) {
		this.vid.currentTime = this.vid.duration * (v / 100);
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.vid.currentTime,this.vid.duration);
	}
	,get_playbackRate: function() {
		return this.vid.playbackRate;
	}
	,set_playbackRate: function(v) {
		this.vid.playbackRate = v;
		this.vid.playbackRate = Math.round(this.vid.playbackRate * 100) / 100;
		return this.vid.playbackRate;
	}
	,get_paused: function() {
		return this.vid.paused;
	}
	,get_volume: function() {
		return this.vid.volume;
	}
	,set_volume: function(v) {
		return this.vid.volume = v < 0 ? 0 : v > 1 ? 1 : v;
	}
	,get_muted: function() {
		return this.vid.muted;
	}
	,set_muted: function(v) {
		return this.vid.muted = v;
	}
	,get_buffered: function() {
		return tannus_media__$TimeRanges_TimeRanges_$Impl_$.fromJavaScriptTimeRanges(this.vid.buffered);
	}
	,get_played: function() {
		return tannus_media__$TimeRanges_TimeRanges_$Impl_$.fromJavaScriptTimeRanges(this.vid.played);
	}
	,get_aspectRatio: function() {
		var this1 = new tannus_math_CRatio(this.vid.videoWidth,this.vid.videoHeight);
		return this1;
	}
	,vid: null
	,onload: null
	,onerror: null
	,onended: null
	,oncanplay: null
	,onplay: null
	,onpause: null
	,onprogress: null
	,onloadeddata: null
	,onloadedmetadata: null
	,onseekbegin: null
	,onseekend: null
	,ondurationchange: null
	,onvolumechange: null
	,onratechange: null
	,onstatechange: null
	,ready: null
	,__class__: gryffin_display_Video
	,__properties__: {get_aspectRatio:"get_aspectRatio",get_played:"get_played",get_buffered:"get_buffered",set_muted:"set_muted",get_muted:"get_muted",set_volume:"set_volume",get_volume:"get_volume",get_paused:"get_paused",set_playbackRate:"set_playbackRate",get_playbackRate:"get_playbackRate",set_progress:"set_progress",get_progress:"get_progress",get_ended:"get_ended",set_time:"set_time",get_time:"get_time",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime",get_durationTime:"get_durationTime",get_duration:"get_duration",set_src:"set_src",get_src:"get_src",get_rect:"get_rect",get_naturalHeight:"get_naturalHeight",get_naturalWidth:"get_naturalWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
});
var gryffin_events_FrameManager = function() {
	this._paused = false;
	this.frame = new tannus_io_Signal();
};
$hxClasses["gryffin.events.FrameManager"] = gryffin_events_FrameManager;
gryffin_events_FrameManager.__name__ = ["gryffin","events","FrameManager"];
gryffin_events_FrameManager.prototype = {
	_frame: function(delta) {
		if(!this._paused) {
			this.frame.broadcast(delta);
		}
		this.queueNext();
	}
	,queueNext: function() {
		this.id = window.requestAnimationFrame($bind(this,this._frame));
	}
	,start: function() {
		this.queueNext();
	}
	,stop: function() {
		window.cancelAnimationFrame(this.id);
	}
	,pause: function() {
		this._paused = true;
	}
	,resume: function() {
		this._paused = false;
	}
	,get_paused: function() {
		return this._paused;
	}
	,frame: null
	,id: null
	,_paused: null
	,__class__: gryffin_events_FrameManager
	,__properties__: {get_paused:"get_paused"}
};
var tannus_events_EventCreator = function() { };
$hxClasses["tannus.events.EventCreator"] = tannus_events_EventCreator;
tannus_events_EventCreator.__name__ = ["tannus","events","EventCreator"];
var gryffin_events_KeyListener = function(s) {
	this.stage = s;
	this.listen();
};
$hxClasses["gryffin.events.KeyListener"] = gryffin_events_KeyListener;
gryffin_events_KeyListener.__name__ = ["gryffin","events","KeyListener"];
gryffin_events_KeyListener.__interfaces__ = [tannus_events_EventCreator];
gryffin_events_KeyListener.prototype = {
	listen: function() {
		var this1 = window;
		var win = this1;
		var events = ["keydown","keyup","keypress"];
		var _g = 0;
		while(_g < events.length) {
			var name = events[_g];
			++_g;
			win.addEventListener(name,$bind(this,this.handle));
		}
	}
	,collectMods: function(e) {
		var mods = [];
		if(e.altKey) {
			mods.push("alt");
		}
		if(e.shiftKey) {
			mods.push("shift");
		}
		if(e.ctrlKey) {
			mods.push("ctrl");
		}
		if(e.metaKey) {
			mods.push("super");
		}
		return mods;
	}
	,handle: function(e) {
		var event = new tannus_events_KeyboardEvent(e.type,e.keyCode,this.collectMods(e));
		event.onDefaultPrevented.once($bind(e,e.preventDefault));
		event.onPropogationStopped.once($bind(e,e.stopPropagation));
		this.stage.dispatch(e.type,event);
	}
	,stage: null
	,__class__: gryffin_events_KeyListener
};
var gryffin_events_MouseListener = function(s) {
	this.stage = s;
	this.relevant = ["click","mouseup","mousedown","mouseenter","mouseleave","mousemove","contextmenu","wheel"];
	this.bind();
};
$hxClasses["gryffin.events.MouseListener"] = gryffin_events_MouseListener;
gryffin_events_MouseListener.__name__ = ["gryffin","events","MouseListener"];
gryffin_events_MouseListener.__interfaces__ = [tannus_events_EventCreator];
gryffin_events_MouseListener.prototype = {
	bindMouse: function() {
		var relevant = this.relevant.slice(0,4);
		console.log(relevant);
		var _g = 0;
		while(_g < relevant.length) {
			var name = relevant[_g];
			++_g;
			this.stage.canvas.canvas.addEventListener(name,$bind(this,this.handle));
		}
		this.stage.canvas.canvas.addEventListener("mousemove",$bind(this,this.handleMove));
		this.stage.canvas.canvas.addEventListener("contextmenu",$bind(this,this.handleMenu));
	}
	,dragEvent: function(event) {
		var ev = tannus_events_MouseEvent.fromJsEvent(event);
		ev.position = this.findPos(event);
		this.stage.mouseEvent(ev);
	}
	,bindWheel: function() {
		this.stage.canvas.canvas.addEventListener("wheel",$bind(this,this.handleWheel));
	}
	,handleMenu: function(e) {
		var event = new tannus_events_MouseEvent(e.type,this.findPos(e),e.button,this.findMods(e));
		var prevent = function() {
			e.preventDefault();
		};
		event.onCancelled.once(prevent);
		event.onDefaultPrevented.once(prevent);
		event.onPropogationStopped.once(prevent);
		this.stage.mouseEvent(event);
	}
	,bind: function() {
		this.bindMouse();
		this.bindWheel();
	}
	,unbind: function() {
		var _g = 0;
		var _g1 = this.relevant;
		while(_g < _g1.length) {
			var name = _g1[_g];
			++_g;
			this.stage.canvas.canvas.removeEventListener(name,$bind(this,this.handle));
		}
		this.stage.canvas.canvas.removeEventListener("mousemove",$bind(this,this.handleMove));
		this.stage.canvas.canvas.removeEventListener("contextmenu",$bind(this,this.handleMenu));
		this.stage.canvas.canvas.removeEventListener("mousewheel",$bind(this,this.handleWheel));
	}
	,rebind: function() {
		this.unbind();
		this.bind();
	}
	,findPos: function(e) {
		var this1 = new tannus_geom_TPoint(e.clientX,e.clientY,0);
		var pos = this1;
		var crect = this.stage.canvas.canvas.getBoundingClientRect();
		pos.set_x(pos.get_x() - crect.left);
		pos.set_y(pos.get_y() - crect.top);
		return pos;
	}
	,findMods: function(e) {
		var mods = [];
		if(e.altKey) {
			mods.push("alt");
		}
		if(e.ctrlKey) {
			mods.push("ctrl");
		}
		if(e.shiftKey) {
			mods.push("shift");
		}
		if(e.metaKey) {
			mods.push("super");
		}
		return mods;
	}
	,handle: function(e) {
		var pos = this.findPos(e);
		var mods = this.findMods(e);
		var event = new tannus_events_MouseEvent(e.type,pos,e.button,mods);
		event.onDefaultPrevented.once($bind(e,e.preventDefault));
		event.onPropogationStopped.once($bind(e,e.stopPropagation));
		this.stage.mouseEvent(event);
	}
	,handleMove: function() {
		var _gthis = this;
		var lastTarget = null;
		var _handle = function(e) {
			var pos = _gthis.findPos(e);
			var mods = _gthis.findMods(e);
			var event = new tannus_events_MouseEvent(e.type,pos,e.button,mods);
			event.onDefaultPrevented.once($bind(e,e.preventDefault));
			event.onPropogationStopped.once($bind(e,e.stopPropagation));
			var target = _gthis.getRootTarget(event);
			if(lastTarget == null) {
				var entered = target;
				if(entered != null) {
					entered.dispatch("mouseenter",e);
				} else if(target == null) {
					var left = lastTarget;
					if(left != null) {
						left.dispatch("mouseleave",e);
					} else {
						var left1 = lastTarget;
						var right = target;
						if(left1 != null && right != null) {
							if(left1 == right) {
								left1.dispatch("mousemove",e);
							} else {
								left1.dispatch("mouseleave",e);
								right.dispatch("mouseenter",e);
							}
						}
					}
				} else {
					var left2 = lastTarget;
					var right1 = target;
					if(left2 != null && right1 != null) {
						if(left2 == right1) {
							left2.dispatch("mousemove",e);
						} else {
							left2.dispatch("mouseleave",e);
							right1.dispatch("mouseenter",e);
						}
					}
				}
			} else if(target == null) {
				var left3 = lastTarget;
				if(left3 != null) {
					left3.dispatch("mouseleave",e);
				} else {
					var left4 = lastTarget;
					var right2 = target;
					if(left4 != null && right2 != null) {
						if(left4 == right2) {
							left4.dispatch("mousemove",e);
						} else {
							left4.dispatch("mouseleave",e);
							right2.dispatch("mouseenter",e);
						}
					}
				}
			} else {
				var left5 = lastTarget;
				var right3 = target;
				if(left5 != null && right3 != null) {
					if(left5 == right3) {
						left5.dispatch("mousemove",e);
					} else {
						left5.dispatch("mouseleave",e);
						right3.dispatch("mouseenter",e);
					}
				}
			}
			lastTarget = target;
			_gthis.stage.mouseEvent(event);
		};
		this.stage.canvas.canvas.addEventListener("mousemove",_handle);
	}
	,getRootTarget: function(e) {
		var _g = 0;
		var _g1 = this.stage.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.containsPoint(e.position) && !(child._cached || child.destroyed)) {
				return child;
			}
		}
		return null;
	}
	,handleWheel: function(e) {
		var delta = Math.max(-1,Math.min(1,-e.deltaY)) | 0;
		var event = new tannus_events_ScrollEvent(delta);
		this.stage.dispatch("scroll",event);
	}
	,get_canvas: function() {
		return this.stage.canvas.canvas;
	}
	,stage: null
	,relevant: null
	,__class__: gryffin_events_MouseListener
	,__properties__: {get_canvas:"get_canvas"}
};
var gryffin_events_MouseWatcher = function(s) {
	this.stage = s;
	this.lastMouseEvent = null;
	this.lastMove = -1;
	this.hovered = new List();
	this._listen();
};
$hxClasses["gryffin.events.MouseWatcher"] = gryffin_events_MouseWatcher;
gryffin_events_MouseWatcher.__name__ = ["gryffin","events","MouseWatcher"];
gryffin_events_MouseWatcher.prototype = {
	getMousePosition: function() {
		if(this.get_lastMousePos() == null) {
			return null;
		} else {
			return this.get_lastMousePos().clone();
		}
	}
	,getMoveTime: function() {
		if(this.lastMove != -1) {
			return this.lastMove;
		} else {
			return null;
		}
	}
	,getLastEvent: function() {
		return this.lastMouseEvent;
	}
	,_listen: function() {
		this.stage.on("mousemove",$bind(this,this.handle));
		this.stage.on("mouseleave",$bind(this,this.handle));
	}
	,handle: function(e) {
		this.lastMouseEvent = e;
		this.lastMove = e.date;
	}
	,mouseInEnt: function(entity,event) {
		var prev = this.entityHovered(entity);
		var curr = entity.containsPoint(event.position);
		this.entityHovered(entity,curr);
		switch(prev) {
		case false:
			if(curr == true) {
				var mee = event.clone();
				mee.type = "mouseenter";
				entity.dispatch("mouseenter",mee);
			}
			break;
		case true:
			if(curr == false) {
				var mle = event.clone();
				mle.type = "mouseleave";
				entity.dispatch("mouseleave",mle);
			}
			break;
		}
	}
	,hoveredEntities: function(event) {
		var _g_head = this.hovered.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var entity = val;
			this.mouseInEnt(entity,event);
		}
	}
	,entityHovered: function(e,value) {
		if(value != null) {
			if(value && !Lambda.has(this.hovered,e)) {
				this.hovered.add(e);
			} else {
				this.hovered.remove(e);
			}
			return value;
		} else {
			return Lambda.has(this.hovered,e);
		}
	}
	,get_lastMousePos: function() {
		if(this.lastMouseEvent == null) {
			return null;
		} else {
			var e = this.lastMouseEvent;
			var _g = e.type;
			if(_g == "mouseleave") {
				return null;
			} else {
				return e.position;
			}
		}
	}
	,lastMouseEvent: null
	,lastMove: null
	,hovered: null
	,stage: null
	,__class__: gryffin_events_MouseWatcher
	,__properties__: {get_lastMousePos:"get_lastMousePos"}
};
var gryffin_fx_Actuator = function() {
};
$hxClasses["gryffin.fx.Actuator"] = gryffin_fx_Actuator;
gryffin_fx_Actuator.__name__ = ["gryffin","fx","Actuator"];
gryffin_fx_Actuator.prototype = {
	update: function(progress) {
		console.log("animation is " + ("" + progress + "%") + " complete");
	}
	,reverse: function() {
		return new gryffin_fx_Actuator();
	}
	,__class__: gryffin_fx_Actuator
};
var gryffin_fx_Animation = function() {
	this.start_time = null;
	this.complete = false;
	this.oncomplete = new tannus_io_VoidSignal();
	this.actuators = [];
};
$hxClasses["gryffin.fx.Animation"] = gryffin_fx_Animation;
gryffin_fx_Animation.__name__ = ["gryffin","fx","Animation"];
gryffin_fx_Animation.prototype = {
	start: function() {
		this.start_time = new Date().getTime();
		gryffin_fx_Animations.link(this);
	}
	,update: function() {
		if(!this.complete) {
			var progress = (this.start_time != null ? new Date().getTime() - this.start_time : null) / this.duration;
			if(progress > 1) {
				progress = 1;
			}
			var delt = this.delta(progress);
			this.step(delt * 100);
			if(progress == 1) {
				this.complete = true;
				this.oncomplete.call();
			}
		}
	}
	,delta: function(progress) {
		return progress;
	}
	,step: function(d) {
		var _g = 0;
		var _g1 = this.actuators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			a.update(d);
		}
	}
	,actuate: function(a) {
		this.actuators.push(a);
	}
	,reverse: function() {
		var rev = new gryffin_fx_Animation();
		rev.duration = this.duration;
		rev.delta = $bind(this,this.delta);
		var _g = 0;
		var _g1 = this.actuators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			rev.actuate(a.reverse());
		}
		return rev;
	}
	,get_now: function() {
		return new Date().getTime();
	}
	,get_passed: function() {
		if(this.start_time != null) {
			return new Date().getTime() - this.start_time;
		} else {
			return null;
		}
	}
	,duration: null
	,start_time: null
	,complete: null
	,oncomplete: null
	,actuators: null
	,__class__: gryffin_fx_Animation
	,__properties__: {get_passed:"get_passed",get_now:"get_now"}
};
var gryffin_fx_Animations = function() { };
$hxClasses["gryffin.fx.Animations"] = gryffin_fx_Animations;
gryffin_fx_Animations.__name__ = ["gryffin","fx","Animations"];
gryffin_fx_Animations.link = function(anim) {
	gryffin_fx_Animations.registry.push(anim);
};
gryffin_fx_Animations.tick = function() {
	var _g = 0;
	var _g1 = gryffin_fx_Animations.registry;
	while(_g < _g1.length) {
		var anim = _g1[_g];
		++_g;
		anim.update();
	}
	gryffin_fx_Animations.registry = gryffin_fx_Animations.registry.filter(function(item) {
		return !item.complete;
	});
};
gryffin_fx_Animations.claim = function(stage) {
	if(gryffin_fx_Animations.manager == null) {
		gryffin_fx_Animations.manager = stage;
	}
};
var gryffin_fx_Effect = function() {
};
$hxClasses["gryffin.fx.Effect"] = gryffin_fx_Effect;
gryffin_fx_Effect.__name__ = ["gryffin","fx","Effect"];
gryffin_fx_Effect.prototype = {
	active: function(e) {
		return true;
	}
	,affect: function(e) {
	}
	,attach: function(e) {
	}
	,__class__: gryffin_fx_Effect
};
var gryffin_math_ImmutableMeasurable = function() { };
$hxClasses["gryffin.math.ImmutableMeasurable"] = gryffin_math_ImmutableMeasurable;
gryffin_math_ImmutableMeasurable.__name__ = ["gryffin","math","ImmutableMeasurable"];
gryffin_math_ImmutableMeasurable.prototype = {
	width: null
	,height: null
	,__class__: gryffin_math_ImmutableMeasurable
};
var gryffin_ui_Border = function(size,colr,rad) {
	if(size == null) {
		size = 0;
	}
	this.width = size;
	this.radius = rad != null ? rad : 0;
	var tmp;
	if(colr != null) {
		tmp = colr;
	} else {
		var this1 = new tannus_graphics__$Color_TColor(0,0,0,null);
		tmp = this1;
	}
	this.color = tmp;
};
$hxClasses["gryffin.ui.Border"] = gryffin_ui_Border;
gryffin_ui_Border.__name__ = ["gryffin","ui","Border"];
gryffin_ui_Border.prototype = {
	toString: function() {
		return "Border(width=" + this.width + ", color=" + this.color.toString() + ")";
	}
	,width: null
	,color: null
	,radius: null
	,__class__: gryffin_ui_Border
};
var gryffin_ui_Page = function() {
	var _gthis = this;
	gryffin_core_EntityContainer.call(this);
	this._opened = false;
	this.prev_page = null;
	this.scrollY = 0;
	this.scroll_jump = 1;
	var this1 = function() {
		return _gthis.scrollY;
	};
	var this2 = function(v) {
		return _gthis.scrollY = v;
	};
	var this3 = new tannus_io__$Pointer_Ref(this1,this2);
	this.bar = new gryffin_ui_ScrollBar($bind(this,this.get_contentRect),$bind(this,this.get_viewport),this3);
	this.addChild(this.bar);
};
$hxClasses["gryffin.ui.Page"] = gryffin_ui_Page;
gryffin_ui_Page.__name__ = ["gryffin","ui","Page"];
gryffin_ui_Page.__super__ = gryffin_core_EntityContainer;
gryffin_ui_Page.prototype = $extend(gryffin_core_EntityContainer.prototype,{
	open: function() {
		if(this.stage != null) {
			var pages = this.stage.get("~gryffin.ui.Page:_opened");
			if(pages.selected.length > 0) {
				this.prev_page = pages.at(0);
				this.prev_page.close();
			}
			this._opened = true;
			this.dispatch("open",null);
			this.stage.on("scroll",$bind(this,this.scroll));
		} else {
			throw new js__$Boot_HaxeError("PageError: Cannot open Page before it is activated!");
		}
	}
	,close: function() {
		this._opened = false;
		this.dispatch("close",null);
	}
	,isOpen: function() {
		return this._opened;
	}
	,update: function(s) {
		if(this.isOpen()) {
			gryffin_core_EntityContainer.prototype.update.call(this,s);
		}
	}
	,render: function(s,c) {
		if(this.isOpen()) {
			gryffin_core_EntityContainer.prototype.render.call(this,s,c);
		}
	}
	,scroll: function(e) {
		var cr = this.get_contentRect();
		var vp = this.get_viewport();
		var diff = cr.height - vp.height;
		var value = this.scrollY -= this.scroll_jump * e.delta;
		this.scrollY = value < 0 ? 0 : value > diff ? diff : value;
	}
	,getEntitiesAtPoint: function(p) {
		if(this.isOpen()) {
			return gryffin_core_EntityContainer.prototype.getEntitiesAtPoint.call(this,p);
		} else {
			return [];
		}
	}
	,containsPoint: function(p) {
		var _this = this.get_contentRect();
		var ox = p.get_x();
		var oy = p.get_y();
		if(ox > _this.x && ox < _this.x + _this.width) {
			if(oy > _this.y) {
				return oy < _this.y + _this.height;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,get_contentRect: function() {
		if(this.stage == null) {
			var this1 = new tannus_geom_CRectangle(0,0,0,0);
			return this1;
		} else {
			var this2 = new tannus_geom_CRectangle(0,0,this.stage.canvas.canvas.width,this.stage.canvas.canvas.height);
			return this2;
		}
	}
	,get_viewport: function() {
		var _this = this.stage;
		var this1 = new tannus_geom_CRectangle(0,0,_this.canvas.canvas.width,_this.canvas.canvas.height);
		return this1;
	}
	,_opened: null
	,prev_page: null
	,scrollY: null
	,scroll_jump: null
	,bar: null
	,__class__: gryffin_ui_Page
	,__properties__: $extend(gryffin_core_EntityContainer.prototype.__properties__,{get_viewport:"get_viewport",get_contentRect:"get_contentRect"})
});
var gryffin_ui_ScrollBar = function(cr,vp,sy) {
	gryffin_core_Entity.call(this);
	this.priority = 90;
	this._cr = cr;
	this._vp = vp;
	this._scroll = sy;
	this.on("click",$bind(this,this._click));
};
$hxClasses["gryffin.ui.ScrollBar"] = gryffin_ui_ScrollBar;
gryffin_ui_ScrollBar.__name__ = ["gryffin","ui","ScrollBar"];
gryffin_ui_ScrollBar.__super__ = gryffin_core_Entity;
gryffin_ui_ScrollBar.prototype = $extend(gryffin_core_Entity.prototype,{
	needed: function() {
		return this._cr().height > this.get_viewport().height;
	}
	,containsPoint: function(p) {
		var _this = this.get_track();
		var ox = p.get_x();
		var oy = p.get_y();
		if(ox > _this.x && ox < _this.x + _this.width) {
			if(oy > _this.y) {
				return oy < _this.y + _this.height;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,render: function(stage,c) {
		if(this.needed()) {
			c.ctx.save();
			c.set_fillStyle("#F1F1F1");
			c.ctx.beginPath();
			var r = this.get_track();
			c.ctx.rect(r.x,r.y,r.width,r.height);
			c.ctx.closePath();
			c.ctx.fill();
			c.set_fillStyle("#C2C2C2");
			c.ctx.beginPath();
			var r1 = this.get_bar();
			c.ctx.rect(r1.x,r1.y,r1.width,r1.height);
			c.ctx.closePath();
			c.ctx.fill();
			c.ctx.restore();
		}
	}
	,_click: function(event) {
		var _this = this.get_track();
		var point = event.position;
		var ox = point.get_x();
		var oy = point.get_y();
		if(ox > _this.x && ox < _this.x + _this.width && (oy > _this.y && oy < _this.y + _this.height)) {
			var mp = this.pointPercent(event.position);
			var mx = this._cr().height - this.get_viewport().height;
			var b = mx * (mp / 100);
			($_=this._scroll,$bind($_,$_.set))(mx < b ? mx : b);
		}
	}
	,pointPercent: function(p) {
		var t = this.get_track();
		var y = p.get_y() - t.y;
		return tannus_math__$Percent_Percent_$Impl_$.percent(y,t.height);
	}
	,get_content: function() {
		return this._cr();
	}
	,get_viewport: function() {
		var this1 = new tannus_geom_CRectangle(this._vp().x,this._vp().y + ($_=this._scroll,$bind($_,$_.get))(),this._vp().width,this._vp().height);
		return this1;
	}
	,get_scroll: function() {
		return ($_=this._scroll,$bind($_,$_.get))();
	}
	,set_scroll: function(v) {
		return ($_=this._scroll,$bind($_,$_.set))(v);
	}
	,get_scrollProgress: function() {
		return tannus_math__$Percent_Percent_$Impl_$.percent(($_=this._scroll,$bind($_,$_.get))(),this._cr().height - this.get_viewport().height);
	}
	,get_track: function() {
		var w = 20;
		var vp = this.get_viewport();
		var this1 = new tannus_geom_CRectangle(vp.x + vp.width - w,this._vp().y,w,vp.height);
		return this1;
	}
	,get_bar: function() {
		var vp = this.get_viewport();
		var cr = this._cr();
		var bh = vp.height / cr.height * vp.height;
		var by = (vp.height - bh) * (tannus_math__$Percent_Percent_$Impl_$.percent(($_=this._scroll,$bind($_,$_.get))(),this._cr().height - this.get_viewport().height) / 100);
		var t = this.get_track();
		var this1 = new tannus_geom_CRectangle(t.x,by,t.width,bh);
		return this1;
	}
	,_cr: null
	,_vp: null
	,_scroll: null
	,__class__: gryffin_ui_ScrollBar
	,__properties__: $extend(gryffin_core_Entity.prototype.__properties__,{get_bar:"get_bar",get_track:"get_track",get_scrollProgress:"get_scrollProgress",set_scroll:"set_scroll",get_scroll:"get_scroll",get_viewport:"get_viewport",get_content:"get_content"})
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,keys: null
	,__class__: haxe_IMap
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	buf: null
	,cache: null
	,shash: null
	,scount: null
	,useCache: null
	,useEnumIndex: null
	,toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var _this = this.shash;
		var x = __map_reserved[s] != null ? _this.getReserved(s) : _this.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null ? "null" : "" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,value);
		} else {
			_this1.h[s] = value;
		}
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null ? "null" : "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null ? "null" : "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type["typeof"](v);
		switch(_g[1]) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null ? "null" : "" + v1;
			break;
		case 2:
			var v2 = v;
			if(isNaN(v2)) {
				this.buf.b += "k";
			} else if(!isFinite(v2)) {
				this.buf.b += v2 < 0 ? "m" : "p";
			} else {
				this.buf.b += "d";
				this.buf.b += v2 == null ? "null" : "" + v2;
			}
			break;
		case 3:
			this.buf.b += v ? "t" : "f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = Type.getClassName(v);
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(Type.getEnumName(v));
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw new js__$Boot_HaxeError("Cannot serialize function");
			break;
		case 6:
			var c = _g[2];
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v["length"];
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null ? "null" : "" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null ? "null" : "" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case List:
				this.buf.b += "l";
				var v3 = v;
				var _g_head = v3.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var i1 = val;
					this.serialize(i1);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v4 = v;
				var k = v4.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					this.buf.b += ":";
					this.buf.b += k1 == null ? "null" : "" + k1;
					this.serialize(v4.h[k1]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v5 = v;
				var k2 = v5.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					var id = Reflect.field(k3,"__id__");
					Reflect.deleteField(k3,"__id__");
					this.serialize(k3);
					k3["__id__"] = id;
					this.serialize(v5.h[k3.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v6 = v;
				var k4 = v6.keys();
				while(k4.hasNext()) {
					var k5 = k4.next();
					this.serializeString(k5);
					this.serialize(__map_reserved[k5] != null ? v6.getReserved(k5) : v6.h[k5]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v7 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v7.length * 8 / 6));
				this.buf.b += ":";
				var i2 = 0;
				var max = v7.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var length = haxe_Serializer.BASE64.length;
					var this1 = new Array(length);
					b64 = this1;
					var _g11 = 0;
					var _g3 = haxe_Serializer.BASE64.length;
					while(_g11 < _g3) {
						var i3 = _g11++;
						b64[i3] = HxOverrides.cca(haxe_Serializer.BASE64,i3);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i2 < max) {
					var b1 = v7.b[i2++];
					var b2 = v7.b[i2++];
					var b3 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b1 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCharCode(b64[b3 & 63]);
				}
				if(i2 == max) {
					var b11 = v7.b[i2++];
					var b21 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b11 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b11 << 4 | b21 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[b21 << 2 & 63]);
				} else if(i2 == max + 1) {
					var b12 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b12 >> 2]);
					this.buf.b += String.fromCharCode(b64[b12 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			var e = _g[2];
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
			this.serializeString(Type.getEnumName(e));
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v[1]);
			} else {
				this.serializeString(v[0]);
			}
			this.buf.b += ":";
			var l1 = v["length"];
			this.buf.b += Std.string(l1 - 2);
			var _g12 = 2;
			var _g4 = l1;
			while(_g12 < _g4) {
				var i4 = _g12++;
				this.serialize(v[i4]);
			}
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = ["haxe","_Unserializer","DefaultResolver"];
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return Type.resolveClass(name);
	}
	,resolveEnum: function(name) {
		return Type.resolveEnum(name);
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.buf.charCodeAt(this.pos++);
		switch(_g) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Type.createEmptyInstance(cl1);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) {
					h1.setReserved(s1,value);
				} else {
					h1.h[s1] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Type.createEmptyInstance(cl2);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				var t = this.readFloat();
				d = new Date(t);
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
			break;
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s2 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s2 = decodeURIComponent(s2.split("+").join(" "));
			this.scache.push(s2);
			return s2;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		var _g = bytes.length % 3;
		switch(_g) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask] & 255;
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask] & 255;
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255 & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = ["haxe","ds","ArraySort"];
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g1 = from + 1;
		var _g = to;
		while(_g1 < _g) {
			var i = _g1++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	var new_mid;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	var n;
	if(from == mid || mid == to) {
		return;
	}
	n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,String) ) {
				return false;
			} else throw(e);
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		this.iteratorLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw new js__$Boot_HaxeError("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,iteratorLoop: function(node,acc) {
		if(node != null) {
			this.iteratorLoop(node.left,acc);
			acc.push(node.value);
			this.iteratorLoop(node.right,acc);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw new js__$Boot_HaxeError("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			if(_this2 == null) {
				tmp = 0;
			} else {
				tmp = _this2._height;
			}
		} else {
			var _this3 = this.right;
			if(_this3 == null) {
				tmp = 0;
			} else {
				tmp = _this3._height;
			}
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) {
			return d;
		}
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.assignId = function(obj) {
	return obj.__id__ = ++haxe_ds_ObjectMap.count;
};
haxe_ds_ObjectMap.getId = function(obj) {
	return obj.__id__;
};
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = ["haxe","io","Input"];
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = ["haxe","io","BytesInput"];
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	b: null
	,pos: null
	,len: null
	,totlen: null
	,__class__: haxe_io_BytesInput
});
var haxe_io_Eof = function() { };
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = ["haxe","io","Path"];
haxe_io_Path.withoutExtension = function(path) {
	var s = new haxe_io_Path(path);
	s.ext = null;
	return s.toString();
};
haxe_io_Path.withoutDirectory = function(path) {
	var s = new haxe_io_Path(path);
	s.dir = null;
	return s.toString();
};
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) {
		return "";
	}
	return s.dir;
};
haxe_io_Path.extension = function(path) {
	var s = new haxe_io_Path(path);
	if(s.ext == null) {
		return "";
	}
	return s.ext;
};
haxe_io_Path.isAbsolute = function(path) {
	if(StringTools.startsWith(path,"/")) {
		return true;
	}
	if(path.charAt(1) == ":") {
		return true;
	}
	return false;
};
haxe_io_Path.prototype = {
	dir: null
	,file: null
	,ext: null
	,backslash: null
	,toString: function() {
		return (this.dir == null ? "" : this.dir + (this.backslash ? "\\" : "/")) + this.file + (this.ext == null ? "" : "." + this.ext);
	}
	,__class__: haxe_io_Path
};
var haxe_macro_Constant = $hxClasses["haxe.macro.Constant"] = { __ename__ : ["haxe","macro","Constant"], __constructs__ : ["CInt","CFloat","CString","CIdent","CRegexp"] };
haxe_macro_Constant.CInt = function(v) { var $x = ["CInt",0,v]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CFloat = function(f) { var $x = ["CFloat",1,f]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CString = function(s) { var $x = ["CString",2,s]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CIdent = function(s) { var $x = ["CIdent",3,s]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CRegexp = function(r,opt) { var $x = ["CRegexp",4,r,opt]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
var haxe_macro_Binop = $hxClasses["haxe.macro.Binop"] = { __ename__ : ["haxe","macro","Binop"], __constructs__ : ["OpAdd","OpMult","OpDiv","OpSub","OpAssign","OpEq","OpNotEq","OpGt","OpGte","OpLt","OpLte","OpAnd","OpOr","OpXor","OpBoolAnd","OpBoolOr","OpShl","OpShr","OpUShr","OpMod","OpAssignOp","OpInterval","OpArrow"] };
haxe_macro_Binop.OpAdd = ["OpAdd",0];
haxe_macro_Binop.OpAdd.toString = $estr;
haxe_macro_Binop.OpAdd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpMult = ["OpMult",1];
haxe_macro_Binop.OpMult.toString = $estr;
haxe_macro_Binop.OpMult.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpDiv = ["OpDiv",2];
haxe_macro_Binop.OpDiv.toString = $estr;
haxe_macro_Binop.OpDiv.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpSub = ["OpSub",3];
haxe_macro_Binop.OpSub.toString = $estr;
haxe_macro_Binop.OpSub.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAssign = ["OpAssign",4];
haxe_macro_Binop.OpAssign.toString = $estr;
haxe_macro_Binop.OpAssign.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpEq = ["OpEq",5];
haxe_macro_Binop.OpEq.toString = $estr;
haxe_macro_Binop.OpEq.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpNotEq = ["OpNotEq",6];
haxe_macro_Binop.OpNotEq.toString = $estr;
haxe_macro_Binop.OpNotEq.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpGt = ["OpGt",7];
haxe_macro_Binop.OpGt.toString = $estr;
haxe_macro_Binop.OpGt.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpGte = ["OpGte",8];
haxe_macro_Binop.OpGte.toString = $estr;
haxe_macro_Binop.OpGte.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpLt = ["OpLt",9];
haxe_macro_Binop.OpLt.toString = $estr;
haxe_macro_Binop.OpLt.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpLte = ["OpLte",10];
haxe_macro_Binop.OpLte.toString = $estr;
haxe_macro_Binop.OpLte.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAnd = ["OpAnd",11];
haxe_macro_Binop.OpAnd.toString = $estr;
haxe_macro_Binop.OpAnd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpOr = ["OpOr",12];
haxe_macro_Binop.OpOr.toString = $estr;
haxe_macro_Binop.OpOr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpXor = ["OpXor",13];
haxe_macro_Binop.OpXor.toString = $estr;
haxe_macro_Binop.OpXor.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpBoolAnd = ["OpBoolAnd",14];
haxe_macro_Binop.OpBoolAnd.toString = $estr;
haxe_macro_Binop.OpBoolAnd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpBoolOr = ["OpBoolOr",15];
haxe_macro_Binop.OpBoolOr.toString = $estr;
haxe_macro_Binop.OpBoolOr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpShl = ["OpShl",16];
haxe_macro_Binop.OpShl.toString = $estr;
haxe_macro_Binop.OpShl.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpShr = ["OpShr",17];
haxe_macro_Binop.OpShr.toString = $estr;
haxe_macro_Binop.OpShr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpUShr = ["OpUShr",18];
haxe_macro_Binop.OpUShr.toString = $estr;
haxe_macro_Binop.OpUShr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpMod = ["OpMod",19];
haxe_macro_Binop.OpMod.toString = $estr;
haxe_macro_Binop.OpMod.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAssignOp = function(op) { var $x = ["OpAssignOp",20,op]; $x.__enum__ = haxe_macro_Binop; $x.toString = $estr; return $x; };
haxe_macro_Binop.OpInterval = ["OpInterval",21];
haxe_macro_Binop.OpInterval.toString = $estr;
haxe_macro_Binop.OpInterval.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpArrow = ["OpArrow",22];
haxe_macro_Binop.OpArrow.toString = $estr;
haxe_macro_Binop.OpArrow.__enum__ = haxe_macro_Binop;
var haxe_macro_Unop = $hxClasses["haxe.macro.Unop"] = { __ename__ : ["haxe","macro","Unop"], __constructs__ : ["OpIncrement","OpDecrement","OpNot","OpNeg","OpNegBits"] };
haxe_macro_Unop.OpIncrement = ["OpIncrement",0];
haxe_macro_Unop.OpIncrement.toString = $estr;
haxe_macro_Unop.OpIncrement.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpDecrement = ["OpDecrement",1];
haxe_macro_Unop.OpDecrement.toString = $estr;
haxe_macro_Unop.OpDecrement.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNot = ["OpNot",2];
haxe_macro_Unop.OpNot.toString = $estr;
haxe_macro_Unop.OpNot.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNeg = ["OpNeg",3];
haxe_macro_Unop.OpNeg.toString = $estr;
haxe_macro_Unop.OpNeg.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNegBits = ["OpNegBits",4];
haxe_macro_Unop.OpNegBits.toString = $estr;
haxe_macro_Unop.OpNegBits.__enum__ = haxe_macro_Unop;
var haxe_macro_ExprDef = $hxClasses["haxe.macro.ExprDef"] = { __ename__ : ["haxe","macro","ExprDef"], __constructs__ : ["EConst","EArray","EBinop","EField","EParenthesis","EObjectDecl","EArrayDecl","ECall","ENew","EUnop","EVars","EFunction","EBlock","EFor","EIn","EIf","EWhile","ESwitch","ETry","EReturn","EBreak","EContinue","EUntyped","EThrow","ECast","EDisplay","EDisplayNew","ETernary","ECheckType","EMeta"] };
haxe_macro_ExprDef.EConst = function(c) { var $x = ["EConst",0,c]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EArray = function(e1,e2) { var $x = ["EArray",1,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBinop = function(op,e1,e2) { var $x = ["EBinop",2,op,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EField = function(e,field) { var $x = ["EField",3,e,field]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EParenthesis = function(e) { var $x = ["EParenthesis",4,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EObjectDecl = function(fields) { var $x = ["EObjectDecl",5,fields]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EArrayDecl = function(values) { var $x = ["EArrayDecl",6,values]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECall = function(e,params) { var $x = ["ECall",7,e,params]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ENew = function(t,params) { var $x = ["ENew",8,t,params]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EUnop = function(op,postFix,e) { var $x = ["EUnop",9,op,postFix,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EVars = function(vars) { var $x = ["EVars",10,vars]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EFunction = function(name,f) { var $x = ["EFunction",11,name,f]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBlock = function(exprs) { var $x = ["EBlock",12,exprs]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EFor = function(it,expr) { var $x = ["EFor",13,it,expr]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EIn = function(e1,e2) { var $x = ["EIn",14,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EIf = function(econd,eif,eelse) { var $x = ["EIf",15,econd,eif,eelse]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EWhile = function(econd,e,normalWhile) { var $x = ["EWhile",16,econd,e,normalWhile]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ESwitch = function(e,cases,edef) { var $x = ["ESwitch",17,e,cases,edef]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ETry = function(e,catches) { var $x = ["ETry",18,e,catches]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EReturn = function(e) { var $x = ["EReturn",19,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBreak = ["EBreak",20];
haxe_macro_ExprDef.EBreak.toString = $estr;
haxe_macro_ExprDef.EBreak.__enum__ = haxe_macro_ExprDef;
haxe_macro_ExprDef.EContinue = ["EContinue",21];
haxe_macro_ExprDef.EContinue.toString = $estr;
haxe_macro_ExprDef.EContinue.__enum__ = haxe_macro_ExprDef;
haxe_macro_ExprDef.EUntyped = function(e) { var $x = ["EUntyped",22,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EThrow = function(e) { var $x = ["EThrow",23,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECast = function(e,t) { var $x = ["ECast",24,e,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EDisplay = function(e,isCall) { var $x = ["EDisplay",25,e,isCall]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EDisplayNew = function(t) { var $x = ["EDisplayNew",26,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ETernary = function(econd,eif,eelse) { var $x = ["ETernary",27,econd,eif,eelse]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECheckType = function(e,t) { var $x = ["ECheckType",28,e,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EMeta = function(s,e) { var $x = ["EMeta",29,s,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
var haxe_macro_ComplexType = $hxClasses["haxe.macro.ComplexType"] = { __ename__ : ["haxe","macro","ComplexType"], __constructs__ : ["TPath","TFunction","TAnonymous","TParent","TExtend","TOptional"] };
haxe_macro_ComplexType.TPath = function(p) { var $x = ["TPath",0,p]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TFunction = function(args,ret) { var $x = ["TFunction",1,args,ret]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TAnonymous = function(fields) { var $x = ["TAnonymous",2,fields]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TParent = function(t) { var $x = ["TParent",3,t]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TExtend = function(p,fields) { var $x = ["TExtend",4,p,fields]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TOptional = function(t) { var $x = ["TOptional",5,t]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
var haxe_macro_TypeParam = $hxClasses["haxe.macro.TypeParam"] = { __ename__ : ["haxe","macro","TypeParam"], __constructs__ : ["TPType","TPExpr"] };
haxe_macro_TypeParam.TPType = function(t) { var $x = ["TPType",0,t]; $x.__enum__ = haxe_macro_TypeParam; $x.toString = $estr; return $x; };
haxe_macro_TypeParam.TPExpr = function(e) { var $x = ["TPExpr",1,e]; $x.__enum__ = haxe_macro_TypeParam; $x.toString = $estr; return $x; };
var haxe_macro_ExprTools = function() { };
$hxClasses["haxe.macro.ExprTools"] = haxe_macro_ExprTools;
haxe_macro_ExprTools.__name__ = ["haxe","macro","ExprTools"];
haxe_macro_ExprTools.map = function(e,f) {
	var e1 = e.pos;
	var _g = e.expr;
	var tmp;
	switch(_g[1]) {
	case 0:
		tmp = e.expr;
		break;
	case 1:
		var e2 = _g[3];
		var e11 = _g[2];
		tmp = haxe_macro_ExprDef.EArray(f(e11),f(e2));
		break;
	case 2:
		var e21 = _g[4];
		var e12 = _g[3];
		var op = _g[2];
		tmp = haxe_macro_ExprDef.EBinop(op,f(e12),f(e21));
		break;
	case 3:
		var field = _g[3];
		var e3 = _g[2];
		tmp = haxe_macro_ExprDef.EField(f(e3),field);
		break;
	case 4:
		var e4 = _g[2];
		tmp = haxe_macro_ExprDef.EParenthesis(f(e4));
		break;
	case 5:
		var fields = _g[2];
		var ret = [];
		var _g1 = 0;
		while(_g1 < fields.length) {
			var field1 = fields[_g1];
			++_g1;
			ret.push({ field : field1.field, expr : f(field1.expr)});
		}
		tmp = haxe_macro_ExprDef.EObjectDecl(ret);
		break;
	case 6:
		var el = _g[2];
		tmp = haxe_macro_ExprDef.EArrayDecl(haxe_macro_ExprArrayTools.map(el,f));
		break;
	case 7:
		var params = _g[3];
		var e5 = _g[2];
		tmp = haxe_macro_ExprDef.ECall(f(e5),haxe_macro_ExprArrayTools.map(params,f));
		break;
	case 8:
		var params1 = _g[3];
		var tp = _g[2];
		tmp = haxe_macro_ExprDef.ENew(tp,haxe_macro_ExprArrayTools.map(params1,f));
		break;
	case 9:
		var e6 = _g[4];
		var postFix = _g[3];
		var op1 = _g[2];
		tmp = haxe_macro_ExprDef.EUnop(op1,postFix,f(e6));
		break;
	case 10:
		var vars = _g[2];
		var ret1 = [];
		var _g2 = 0;
		while(_g2 < vars.length) {
			var v = vars[_g2];
			++_g2;
			var e7 = v.expr;
			ret1.push({ name : v.name, type : v.type, expr : e7 == null ? null : f(e7)});
		}
		tmp = haxe_macro_ExprDef.EVars(ret1);
		break;
	case 11:
		var func = _g[3];
		var name = _g[2];
		var ret2 = [];
		var _g3 = 0;
		var _g11 = func.args;
		while(_g3 < _g11.length) {
			var arg = _g11[_g3];
			++_g3;
			var e8 = arg.value;
			ret2.push({ name : arg.name, opt : arg.opt, type : arg.type, value : e8 == null ? null : f(e8)});
		}
		tmp = haxe_macro_ExprDef.EFunction(name,{ args : ret2, ret : func.ret, params : func.params, expr : f(func.expr)});
		break;
	case 12:
		var el1 = _g[2];
		tmp = haxe_macro_ExprDef.EBlock(haxe_macro_ExprArrayTools.map(el1,f));
		break;
	case 13:
		var expr = _g[3];
		var it = _g[2];
		tmp = haxe_macro_ExprDef.EFor(f(it),f(expr));
		break;
	case 14:
		var e22 = _g[3];
		var e13 = _g[2];
		tmp = haxe_macro_ExprDef.EIn(f(e13),f(e22));
		break;
	case 15:
		var eelse = _g[4];
		var eif = _g[3];
		var econd = _g[2];
		tmp = haxe_macro_ExprDef.EIf(f(econd),f(eif),eelse == null ? null : f(eelse));
		break;
	case 16:
		var normalWhile = _g[4];
		var e9 = _g[3];
		var econd1 = _g[2];
		tmp = haxe_macro_ExprDef.EWhile(f(econd1),f(e9),normalWhile);
		break;
	case 17:
		var edef = _g[4];
		var cases = _g[3];
		var e10 = _g[2];
		var ret3 = [];
		var _g4 = 0;
		while(_g4 < cases.length) {
			var c = cases[_g4];
			++_g4;
			var e14 = c.expr;
			var tmp1 = e14 == null ? null : f(e14);
			var e15 = c.guard;
			ret3.push({ expr : tmp1, guard : e15 == null ? null : f(e15), values : haxe_macro_ExprArrayTools.map(c.values,f)});
		}
		tmp = haxe_macro_ExprDef.ESwitch(f(e10),ret3,edef == null || edef.expr == null ? edef : f(edef));
		break;
	case 18:
		var catches = _g[3];
		var e16 = _g[2];
		var ret4 = [];
		var _g5 = 0;
		while(_g5 < catches.length) {
			var c1 = catches[_g5];
			++_g5;
			ret4.push({ name : c1.name, type : c1.type, expr : f(c1.expr)});
		}
		tmp = haxe_macro_ExprDef.ETry(f(e16),ret4);
		break;
	case 19:
		var e17 = _g[2];
		tmp = haxe_macro_ExprDef.EReturn(e17 == null ? null : f(e17));
		break;
	case 20:case 21:case 26:
		tmp = e.expr;
		break;
	case 22:
		var e18 = _g[2];
		tmp = haxe_macro_ExprDef.EUntyped(f(e18));
		break;
	case 23:
		var e19 = _g[2];
		tmp = haxe_macro_ExprDef.EThrow(f(e19));
		break;
	case 24:
		var t = _g[3];
		var e20 = _g[2];
		tmp = haxe_macro_ExprDef.ECast(f(e20),t);
		break;
	case 25:
		var isCall = _g[3];
		var e23 = _g[2];
		tmp = haxe_macro_ExprDef.EDisplay(f(e23),isCall);
		break;
	case 27:
		var eelse1 = _g[4];
		var eif1 = _g[3];
		var econd2 = _g[2];
		tmp = haxe_macro_ExprDef.ETernary(f(econd2),f(eif1),f(eelse1));
		break;
	case 28:
		var t1 = _g[3];
		var e24 = _g[2];
		tmp = haxe_macro_ExprDef.ECheckType(f(e24),t1);
		break;
	case 29:
		var e25 = _g[3];
		var m = _g[2];
		tmp = haxe_macro_ExprDef.EMeta(m,f(e25));
		break;
	}
	return { pos : e1, expr : tmp};
};
var haxe_macro_ExprArrayTools = function() { };
$hxClasses["haxe.macro.ExprArrayTools"] = haxe_macro_ExprArrayTools;
haxe_macro_ExprArrayTools.__name__ = ["haxe","macro","ExprArrayTools"];
haxe_macro_ExprArrayTools.map = function(el,f) {
	var ret = [];
	var _g = 0;
	while(_g < el.length) {
		var e = el[_g];
		++_g;
		ret.push(f(e));
	}
	return ret;
};
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = ["haxe","rtti","Meta"];
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.fields == null) {
		return { };
	} else {
		return meta.fields;
	}
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g1 = 0;
	var _g = position;
	while(_g1 < _g) {
		var i = _g1++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = ["haxe","xml","XmlParserException"];
haxe_xml_XmlParserException.prototype = {
	message: null
	,lineNumber: null
	,positionAtLine: null
	,position: null
	,xml: null
	,toString: function() {
		return Type.getClassName(js_Boot.getClass(this)) + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				var tmp;
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCharCode(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					}
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCharCode(c1);
				} else {
					var _this = haxe_xml_Parser.escapes;
					if(!(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s))) {
						if(strict) {
							throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
						}
						buf.b += Std.string("&" + s + ";");
					} else {
						var _this1 = haxe_xml_Parser.escapes;
						var x = __map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s];
						buf.b += Std.string(x);
					}
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCharCode(c),str,p));
				}
				buf.b += "&";
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				start = p--;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			var len6 = p - start;
			buf.b += len6 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len6);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		var len7 = p - start;
		buf.b += len7 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len7);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var ida_Utils = function() { };
$hxClasses["ida.Utils"] = ida_Utils;
ida_Utils.__name__ = ["ida","Utils"];
ida_Utils.fulfill = function(request) {
	var r = request;
	return new tannus_ds_Promise(function(accept,reject) {
		var success = function(e) {
			accept(r.result);
		};
		var error = function(e1) {
			reject(r.error);
		};
		r.onsuccess = success;
		r.onerror = error;
	},null);
};
ida_Utils.report = function(req,callback) {
	if(callback != null && Reflect.isFunction(callback)) {
		req.onerror = function(e) {
			callback(req.error);
		};
		req.onsuccess = function(e1) {
			callback(null);
		};
	}
};
ida_Utils.keyToNative = function(key) {
	if(js_Boot.__instanceof(key,ida_backend_idb_IDBKeyRange)) {
		return (js_Boot.__cast(key , ida_backend_idb_IDBKeyRange)).range;
	} else {
		return key;
	}
};
var ida_CursorSource = $hxClasses["ida.CursorSource"] = { __ename__ : ["ida","CursorSource"], __constructs__ : ["CSObjectStore","CSIndex"] };
ida_CursorSource.CSObjectStore = function(store) { var $x = ["CSObjectStore",0,store]; $x.__enum__ = ida_CursorSource; $x.toString = $estr; return $x; };
ida_CursorSource.CSIndex = function(index) { var $x = ["CSIndex",1,index]; $x.__enum__ = ida_CursorSource; $x.toString = $estr; return $x; };
var ida_backend_idb_IDBCursor = function(c) {
	this._src = null;
	this.cursor = c;
};
$hxClasses["ida.backend.idb.IDBCursor"] = ida_backend_idb_IDBCursor;
ida_backend_idb_IDBCursor.__name__ = ["ida","backend","idb","IDBCursor"];
ida_backend_idb_IDBCursor.prototype = {
	advance: function(n) {
		this.cursor.advance(n);
	}
	,next: function(key) {
		this.cursor["continue"](key);
	}
	,'delete': function(callback) {
		ida_Utils.report(this.cursor["delete"](),callback);
	}
	,update: function(entry,callback) {
		ida_Utils.report(this.cursor.update(entry),callback);
	}
	,get_entry: function() {
		return this.cursor.value;
	}
	,get_direction: function() {
		return this.cursor.direction;
	}
	,get_key: function() {
		return this.cursor.key;
	}
	,get_primaryKey: function() {
		return this.cursor.primaryKey;
	}
	,get_source: function() {
		if(this._src == null) {
			if(js_Boot.__instanceof(this.cursor.source,IDBObjectStore)) {
				this._src = ida_CursorSource.CSObjectStore(new ida_backend_idb_IDBObjectStore(this.cursor.source));
			} else if(js_Boot.__instanceof(this.cursor.source,IDBIndex)) {
				this._src = ida_CursorSource.CSIndex(new ida_backend_idb_IDBIndex(this.cursor.source));
			}
		}
		return this._src;
	}
	,get_objectStore: function() {
		var _g = this.get_source();
		switch(_g[1]) {
		case 0:
			var store = _g[2];
			return store;
		case 1:
			var index = _g[2];
			return index.i.objectStore.__wrapper;
		}
	}
	,get_index: function() {
		var _g = this.get_source();
		if(_g[1] == 1) {
			var i = _g[2];
			return i;
		} else {
			return null;
		}
	}
	,cursor: null
	,_src: null
	,__class__: ida_backend_idb_IDBCursor
	,__properties__: {get_index:"get_index",get_objectStore:"get_objectStore",get_source:"get_source",get_primaryKey:"get_primaryKey",get_key:"get_key",get_direction:"get_direction",get_entry:"get_entry"}
};
var ida_backend_idb_IDBCursorWalker = function(r) {
	this.r = r;
	this.complete = new tannus_io_VoidSignal();
	this.error = new tannus_io_Signal();
	r.addEventListener("success",$bind(this,this.__onsuccess));
};
$hxClasses["ida.backend.idb.IDBCursorWalker"] = ida_backend_idb_IDBCursorWalker;
ida_backend_idb_IDBCursorWalker.__name__ = ["ida","backend","idb","IDBCursorWalker"];
ida_backend_idb_IDBCursorWalker.prototype = {
	__onsuccess: function(event) {
		var _cursor = event.target.result;
		console.log(_cursor);
		if(_cursor == null) {
			this.complete.call();
		} else {
			var cursor = new ida_backend_idb_IDBCursor(_cursor);
			this.step(cursor);
		}
	}
	,step: function(cursor) {
	}
	,complete: null
	,error: null
	,r: null
	,__class__: ida_backend_idb_IDBCursorWalker
};
var ida_backend_idb_IDBDatabase = function(d) {
	this.db = d;
};
$hxClasses["ida.backend.idb.IDBDatabase"] = ida_backend_idb_IDBDatabase;
ida_backend_idb_IDBDatabase.__name__ = ["ida","backend","idb","IDBDatabase"];
ida_backend_idb_IDBDatabase.open = function(name,version,_build) {
	var this1 = window;
	var w = this1;
	return new tannus_ds_Promise(function(accept,reject) {
		var request = w.indexedDB.open(name,version);
		request.onupgradeneeded = function(event) {
			if(_build != null) {
				var db = new ida_backend_idb_IDBDatabase(event.target.result);
				_build(db);
				ida_backend_idb_IDBDatabase.open(name,version).then(accept).unless(reject);
			}
		};
		request.onsuccess = function(event1) {
			var _db = event1.target.result;
			accept(new ida_backend_idb_IDBDatabase(_db));
		};
		request.onerror = function(event2) {
			reject(event2.target.errorCode);
		};
	},null);
};
ida_backend_idb_IDBDatabase.prototype = {
	createObjectStore: function(name,options) {
		var _store = this.db.createObjectStore(name,options);
		return new ida_backend_idb_IDBObjectStore(_store);
	}
	,transaction: function(stores,mode) {
		if(mode == null) {
			mode = "readonly";
		}
		return new ida_backend_idb_IDBTransaction(this.db.transaction(stores,mode));
	}
	,db: null
	,__class__: ida_backend_idb_IDBDatabase
};
var ida_backend_idb_IDBFunctionalCursorWalker = function(r,f) {
	ida_backend_idb_IDBCursorWalker.call(this,r);
	this.body = f;
};
$hxClasses["ida.backend.idb.IDBFunctionalCursorWalker"] = ida_backend_idb_IDBFunctionalCursorWalker;
ida_backend_idb_IDBFunctionalCursorWalker.__name__ = ["ida","backend","idb","IDBFunctionalCursorWalker"];
ida_backend_idb_IDBFunctionalCursorWalker.__super__ = ida_backend_idb_IDBCursorWalker;
ida_backend_idb_IDBFunctionalCursorWalker.prototype = $extend(ida_backend_idb_IDBCursorWalker.prototype,{
	step: function(cursor) {
		var f = $bind(cursor,cursor.next);
		var next = function() {
			f();
		};
		var calledNext = false;
		cursor.next = function(key) {
			next();
			calledNext = true;
		};
		this.body(cursor);
		if(!calledNext) {
			cursor.next();
		}
	}
	,body: null
	,__class__: ida_backend_idb_IDBFunctionalCursorWalker
});
var ida_backend_idb_IDBIndex = function(i) {
	this.i = i;
};
$hxClasses["ida.backend.idb.IDBIndex"] = ida_backend_idb_IDBIndex;
ida_backend_idb_IDBIndex.__name__ = ["ida","backend","idb","IDBIndex"];
ida_backend_idb_IDBIndex.prototype = {
	get: function(value) {
		return ida_Utils.fulfill(this.i.get(value));
	}
	,getKey: function(value) {
		return ida_Utils.fulfill(this.i.getKey(value));
	}
	,openCursor: function(body,keyRange,direction) {
		var request = this.i.openCursor(keyRange,direction);
		if(body == null) {
			return new ida_backend_idb_IDBCursorWalker(request);
		} else {
			return new ida_backend_idb_IDBFunctionalCursorWalker(request,body);
		}
	}
	,get_name: function() {
		return this.i.name;
	}
	,get_keyPath: function() {
		return this.i.keyPath;
	}
	,get_objectStore: function() {
		return this.i.objectStore.__wrapper;
	}
	,get_multiEntry: function() {
		return this.i.multiEntry;
	}
	,get_unique: function() {
		return this.i.unique;
	}
	,i: null
	,__class__: ida_backend_idb_IDBIndex
	,__properties__: {get_unique:"get_unique",get_multiEntry:"get_multiEntry",get_objectStore:"get_objectStore",get_keyPath:"get_keyPath",get_name:"get_name"}
};
var ida_backend_idb_IDBKeyRange = function(kr) {
	this.range = kr;
};
$hxClasses["ida.backend.idb.IDBKeyRange"] = ida_backend_idb_IDBKeyRange;
ida_backend_idb_IDBKeyRange.__name__ = ["ida","backend","idb","IDBKeyRange"];
ida_backend_idb_IDBKeyRange.only = function(v) {
	return new ida_backend_idb_IDBKeyRange(IDBKeyRange.only(v));
};
ida_backend_idb_IDBKeyRange.upperBound = function(v,inclusive) {
	if(inclusive == null) {
		inclusive = true;
	}
	return new ida_backend_idb_IDBKeyRange(IDBKeyRange.upperBound(v,!inclusive));
};
ida_backend_idb_IDBKeyRange.lowerBound = function(v,inclusive) {
	if(inclusive == null) {
		inclusive = true;
	}
	return new ida_backend_idb_IDBKeyRange(IDBKeyRange.lowerBound(v,!inclusive));
};
ida_backend_idb_IDBKeyRange.bound = function(x,y,xinclusive,yinclusive) {
	if(yinclusive == null) {
		yinclusive = true;
	}
	if(xinclusive == null) {
		xinclusive = true;
	}
	return new ida_backend_idb_IDBKeyRange(IDBKeyRange.bound(x,y,!xinclusive,!yinclusive));
};
ida_backend_idb_IDBKeyRange.kr = function(r) {
	return new ida_backend_idb_IDBKeyRange(r);
};
ida_backend_idb_IDBKeyRange.prototype = {
	get_lower: function() {
		return this.range.lower;
	}
	,get_lowerOpen: function() {
		return this.range.lowerOpen;
	}
	,get_upper: function() {
		return this.range.upper;
	}
	,get_upperOpen: function() {
		return this.range.upperOpen;
	}
	,range: null
	,__class__: ida_backend_idb_IDBKeyRange
	,__properties__: {get_upperOpen:"get_upperOpen",get_upper:"get_upper",get_lowerOpen:"get_lowerOpen",get_lower:"get_lower"}
};
var ida_backend_idb_IDBObjectStore = function(o) {
	this.store = o;
	this.store.__wrapper = this;
};
$hxClasses["ida.backend.idb.IDBObjectStore"] = ida_backend_idb_IDBObjectStore;
ida_backend_idb_IDBObjectStore.__name__ = ["ida","backend","idb","IDBObjectStore"];
ida_backend_idb_IDBObjectStore.prototype = {
	createIndex: function(name,keyPath,options) {
		var index = this.store.createIndex(name,keyPath,options);
		return new ida_backend_idb_IDBIndex(index);
	}
	,deleteIndex: function(indexName) {
		this.store.deleteIndex(indexName);
	}
	,index: function(name) {
		return new ida_backend_idb_IDBIndex(this.store.index(name));
	}
	,add: function(entry,key) {
		return ida_Utils.fulfill(this.store.add(entry,key));
	}
	,put: function(entry,key) {
		return ida_Utils.fulfill(this.store.put(entry,key));
	}
	,'delete': function(key,callback) {
		ida_Utils.report(this.store["delete"](ida_Utils.keyToNative(key)),callback);
	}
	,get: function(key) {
		return ida_Utils.fulfill(this.store.get(ida_Utils.keyToNative(key)));
	}
	,getAll: function(query,count) {
		if(query != null) {
			query = ida_Utils.keyToNative(query);
		}
		return ida_Utils.fulfill(js_Boot.__cast(this.store.getAll(query,count) , IDBRequest)).array();
	}
	,openCursor: function(body,keyRange,direction) {
		var request = this.store.openCursor(keyRange,direction);
		if(body != null) {
			return new ida_backend_idb_IDBFunctionalCursorWalker(request,body);
		} else {
			return new ida_backend_idb_IDBCursorWalker(request);
		}
	}
	,get_autoIncrement: function() {
		return this.store.autoIncrement;
	}
	,get_indexNames: function() {
		var o = this.store.indexNames;
		return Array.prototype.slice.call(o,0);
	}
	,get_keyPath: function() {
		return this.store.keyPath;
	}
	,get_transaction: function() {
		return new ida_backend_idb_IDBTransaction(this.store.transaction);
	}
	,get_name: function() {
		return this.store.name;
	}
	,store: null
	,__class__: ida_backend_idb_IDBObjectStore
	,__properties__: {get_name:"get_name",get_transaction:"get_transaction",get_keyPath:"get_keyPath",get_indexNames:"get_indexNames",get_autoIncrement:"get_autoIncrement"}
};
var ida_backend_idb_IDBTransaction = function(t_) {
	var _gthis = this;
	this.t = t_;
	this.complete = new tannus_io_VoidSignal();
	this.fail = new tannus_io_Signal();
	var f = ($_=this.complete,$bind($_,$_.fire));
	var tmp = function() {
		f();
	};
	this.t.addEventListener("complete",tmp);
	this.t.addEventListener("error",function(event) {
		console.log(event);
		_gthis.fail.broadcast(_gthis.t.error);
	});
};
$hxClasses["ida.backend.idb.IDBTransaction"] = ida_backend_idb_IDBTransaction;
ida_backend_idb_IDBTransaction.__name__ = ["ida","backend","idb","IDBTransaction"];
ida_backend_idb_IDBTransaction.prototype = {
	objectStore: function(name) {
		return new ida_backend_idb_IDBObjectStore(this.t.objectStore(name));
	}
	,abort: function() {
		this.t.abort();
	}
	,get_db: function() {
		return new ida_backend_idb_IDBDatabase(this.t.db);
	}
	,get_error: function() {
		return this.t.error;
	}
	,get_mode: function() {
		return this.t.mode;
	}
	,get_objectStoreNames: function() {
		var o = this.t.objectStoreNames;
		return Array.prototype.slice.call(o,0);
	}
	,get_onabort: function() {
		return this.t.onabort;
	}
	,set_onabort: function(v) {
		return this.t.onabort = v;
	}
	,get_oncomplete: function() {
		return this.t.oncomplete;
	}
	,set_oncomplete: function(v) {
		return this.t.oncomplete = v;
	}
	,get_onerror: function() {
		return this.t.onerror;
	}
	,set_onerror: function(v) {
		return this.t.onerror = v;
	}
	,t: null
	,complete: null
	,fail: null
	,__class__: ida_backend_idb_IDBTransaction
	,__properties__: {set_onerror:"set_onerror",get_onerror:"get_onerror",set_oncomplete:"set_oncomplete",get_oncomplete:"get_oncomplete",set_onabort:"set_onabort",get_onabort:"get_onabort",get_objectStoreNames:"get_objectStoreNames",get_mode:"get_mode",get_error:"get_error",get_db:"get_db"}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	byteLength: null
	,a: null
	,slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var pman_Errors = function() { };
$hxClasses["pman.Errors"] = pman_Errors;
pman_Errors.__name__ = ["pman","Errors"];
var tannus_ds_Task = function() {
	this._doing = false;
	this.onkill = new tannus_io_VoidSignal();
	this.onfinish = new tannus_io_VoidSignal();
};
$hxClasses["tannus.ds.Task"] = tannus_ds_Task;
tannus_ds_Task.__name__ = ["tannus","ds","Task"];
tannus_ds_Task.prototype = {
	start: function() {
		if(!this._doing) {
			this._doing = true;
		} else {
			throw new js__$Boot_HaxeError("Error: Task already running");
		}
	}
	,perform: function(done) {
		this.start();
		this.onfinish.once(done);
		this.action($bind(this,this.finish));
	}
	,action: function(done) {
		done();
	}
	,finish: function() {
		this._doing = false;
		this.onfinish.call();
	}
	,abort: function() {
		if(this._doing) {
			this.onkill.call();
			this._doing = false;
		} else {
			throw new js__$Boot_HaxeError("Error: Cannot abort a Task that is not running!");
		}
	}
	,toAsync: function() {
		var f = $bind(this,this.perform);
		return function(a1) {
			f(a1);
		};
	}
	,_doing: null
	,get_doing: function() {
		return this._doing;
	}
	,onkill: null
	,onfinish: null
	,__class__: tannus_ds_Task
	,__properties__: {get_doing:"get_doing"}
};
var tannus_ds_ProgressiveTask = function() {
	tannus_ds_Task.call(this);
	this.onProgress = new tannus_io_Signal();
	this.set_completion(0);
};
$hxClasses["tannus.ds.ProgressiveTask"] = tannus_ds_ProgressiveTask;
tannus_ds_ProgressiveTask.__name__ = ["tannus","ds","ProgressiveTask"];
tannus_ds_ProgressiveTask.__super__ = tannus_ds_Task;
tannus_ds_ProgressiveTask.prototype = $extend(tannus_ds_Task.prototype,{
	progress: function(amount) {
		this.set_completion(this.completion + amount);
	}
	,completion: null
	,set_completion: function(v) {
		this.onProgress.broadcast(v);
		return this.completion = v;
	}
	,onProgress: null
	,__class__: tannus_ds_ProgressiveTask
	,__properties__: $extend(tannus_ds_Task.prototype.__properties__,{set_completion:"set_completion"})
});
var tannus_ds_StandardTask = function() {
	tannus_ds_ProgressiveTask.call(this);
	this.statusChange = new tannus_io_Signal();
	this.resultChange = new tannus_io_Signal();
	this._res = null;
	this._status = null;
};
$hxClasses["tannus.ds.StandardTask"] = tannus_ds_StandardTask;
tannus_ds_StandardTask.__name__ = ["tannus","ds","StandardTask"];
tannus_ds_StandardTask.__super__ = tannus_ds_ProgressiveTask;
tannus_ds_StandardTask.prototype = $extend(tannus_ds_ProgressiveTask.prototype,{
	get_status: function() {
		return this._status;
	}
	,set_status: function(v) {
		var this1;
		var this2 = [v,this.get_status()];
		this1 = this2;
		var change = this1;
		var r = this._status = v;
		this.statusChange.broadcast(change);
		return r;
	}
	,get_result: function() {
		return this._res;
	}
	,set_result: function(v) {
		var this1;
		var this2 = [v,this._res];
		this1 = this2;
		var change = this1;
		var r = this._res = v;
		this.resultChange.broadcast(change);
		return r;
	}
	,_res: null
	,_status: null
	,statusChange: null
	,resultChange: null
	,__class__: tannus_ds_StandardTask
	,__properties__: $extend(tannus_ds_ProgressiveTask.prototype.__properties__,{set_result:"set_result",get_result:"get_result",set_status:"set_status",get_status:"get_status"})
});
var pman_async_RawSingleThumbnailLoader = function(t) {
	tannus_ds_StandardTask.call(this);
	this.track = t;
	this.set_status("Preparing Task..");
};
$hxClasses["pman.async.RawSingleThumbnailLoader"] = pman_async_RawSingleThumbnailLoader;
pman_async_RawSingleThumbnailLoader.__name__ = ["pman","async","RawSingleThumbnailLoader"];
pman_async_RawSingleThumbnailLoader.__super__ = tannus_ds_StandardTask;
pman_async_RawSingleThumbnailLoader.prototype = $extend(tannus_ds_StandardTask.prototype,{
	loadThumbnail: function(getTime,mutateRect) {
		var _gthis = this;
		this.getTime = getTime;
		this.mutateRect = mutateRect;
		return new tannus_ds_Promise(function(accept,reject) {
			_gthis.perform(function() {
				_gthis.video.clear();
				var tmp = _gthis.get_result();
				accept(tmp);
			});
		},null);
	}
	,action: function(done) {
		if(this.track.driver == null || !this.track.driver.hasMediaObject() || this.track.driver.getMediaObject() == null) {
			throw new js__$Boot_HaxeError("Error: Cannot load thumbnail from " + Std.string(this.track));
		}
		var stack = new tannus_ds_AsyncStack();
		stack.under($bind(this,this.load_video));
		stack.under($bind(this,this.seek_video));
		stack.under($bind(this,this.capture_video));
		stack.run(function() {
			done();
		});
	}
	,load_video: function(done) {
		var _gthis = this;
		var mo = this.track.driver.getMediaObject();
		var source = mo.get_src();
		this.video = new gryffin_display_Video();
		this.video.load(source,function() {
			var vr = new tannus_geom2_Rect(0,0,_gthis.video.vid.videoWidth,_gthis.video.vid.videoHeight);
			_gthis.dimensions = _gthis.mutateRect(vr);
			var _gthis1 = _gthis.getTime;
			var _this = tannus_media_CDur.fromSecondsI(Math.floor(_gthis.video.vid.duration));
			_gthis.time = _gthis1(3600 * _this.hours + 60 * _this.minutes + _this.seconds);
			done();
		});
	}
	,seek_video: function(done) {
		this.video.seek(this.time,function() {
			var this1 = window;
			this1.requestAnimationFrame(done);
		});
	}
	,capture_video: function(done) {
		var w;
		var h;
		if(this.dimensions == null) {
			w = this.video.vid.videoWidth;
			h = this.video.vid.videoHeight;
		} else {
			w = this.dimensions.d.get(2);
			h = this.dimensions.d.get(3);
		}
		this.canvas = gryffin_display_Canvas.create(w,h);
		this.canvas._ctx.get().drawComponent(this.video,0,0,this.video.vid.videoWidth,this.video.vid.videoHeight,0,0,w,h);
		this.set_result(this.canvas);
		done();
	}
	,track: null
	,time: null
	,dimensions: null
	,video: null
	,canvas: null
	,mutateRect: null
	,getTime: null
	,__class__: pman_async_RawSingleThumbnailLoader
});
var pman_async_SeekbarPreviewThumbnailLoader = function(track,bar) {
	pman_async_RawSingleThumbnailLoader.call(this,track);
	this.seekbar = bar;
};
$hxClasses["pman.async.SeekbarPreviewThumbnailLoader"] = pman_async_SeekbarPreviewThumbnailLoader;
pman_async_SeekbarPreviewThumbnailLoader.__name__ = ["pman","async","SeekbarPreviewThumbnailLoader"];
pman_async_SeekbarPreviewThumbnailLoader.__super__ = pman_async_RawSingleThumbnailLoader;
pman_async_SeekbarPreviewThumbnailLoader.prototype = $extend(pman_async_RawSingleThumbnailLoader.prototype,{
	loadPreview: function(time,video) {
		var player = this.seekbar.controls.playerView.player;
		var height = Math.floor(0.2 * player.view.get_h());
		var rect = new tannus_geom2_Rect(0,0,video.vid.videoWidth,video.vid.videoHeight);
		var _this = rect.scale(null,height);
		var f = Math.ceil;
		rect = new tannus_geom2_Rect(f(_this.d.get(0)),f(_this.d.get(1)),f(_this.d.get(2)),f(_this.d.get(3)));
		return this.loadThumbnail(function(d) {
			return time;
		},function(r) {
			return rect;
		});
	}
	,seekbar: null
	,__class__: pman_async_SeekbarPreviewThumbnailLoader
});
var pman_core_Ent = function() {
	this._cc = false;
	gryffin_core_EntityContainer.call(this);
	var this1 = new tannus_geom_CRectangle(0,0,0,0);
	this.rect = this1;
};
$hxClasses["pman.core.Ent"] = pman_core_Ent;
pman_core_Ent.__name__ = ["pman","core","Ent"];
pman_core_Ent.__super__ = gryffin_core_EntityContainer;
pman_core_Ent.prototype = $extend(gryffin_core_EntityContainer.prototype,{
	containsPoint: function(p) {
		var _this = this.rect;
		var ox = p.get_x();
		var oy = p.get_y();
		if(ox > _this.x && ox < _this.x + _this.width) {
			if(oy > _this.y) {
				return oy < _this.y + _this.height;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,update: function(stage) {
		gryffin_core_EntityContainer.prototype.update.call(this,stage);
	}
	,getPage: function() {
		var _gthis = this;
		return this.parentUntil(function(e) {
			if(e["is"]("gryffin.ui.Page")) {
				return e.hasChild(_gthis);
			} else {
				return false;
			}
		});
	}
	,get_x: function() {
		return this.rect.x;
	}
	,set_x: function(v) {
		return this.rect.x = v;
	}
	,get_y: function() {
		return this.rect.y;
	}
	,set_y: function(v) {
		return this.rect.y = v;
	}
	,get_w: function() {
		return this.rect.width;
	}
	,set_w: function(v) {
		return this.rect.width = v;
	}
	,get_h: function() {
		return this.rect.height;
	}
	,set_h: function(v) {
		return this.rect.height = v;
	}
	,get_pos: function() {
		var _gthis = this;
		var this1 = function() {
			return _gthis.rect.x;
		};
		var this2 = function(v) {
			return _gthis.rect.x = v;
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		var this4 = function() {
			return _gthis.rect.y;
		};
		var this5 = function(v1) {
			return _gthis.rect.y = v1;
		};
		var this6 = new tannus_io__$Pointer_Ref(this4,this5);
		return new tannus_geom_LinkedPoint(this3,this6,null);
	}
	,set_pos: function(v) {
		var v1 = v.get_x();
		var x = this.rect.x = v1;
		var v2 = v.get_y();
		var this1 = new tannus_geom_TPoint(x,this.rect.y = v2,0);
		return this1;
	}
	,get_centerX: function() {
		return this.rect.x + this.get_w() / 2;
	}
	,set_centerX: function(v) {
		var v1 = v - this.get_w() / 2;
		return this.rect.x = v1;
	}
	,get_centerY: function() {
		return this.rect.y + this.get_h() / 2;
	}
	,set_centerY: function(v) {
		var v1 = v - this.get_h() / 2;
		return this.rect.y = v1;
	}
	,get_center: function() {
		var _gthis = this;
		var this1 = function() {
			return _gthis.get_centerX();
		};
		var this2 = function(v) {
			return _gthis.set_centerX(v);
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		var this4 = function() {
			return _gthis.get_centerY();
		};
		var this5 = function(v1) {
			return _gthis.set_centerY(v1);
		};
		var this6 = new tannus_io__$Pointer_Ref(this4,this5);
		return new tannus_geom_LinkedPoint(this3,this6,null);
	}
	,set_center: function(v) {
		return this.rect.set_center(v);
	}
	,rect: null
	,_cc: null
	,__class__: pman_core_Ent
	,__properties__: $extend(gryffin_core_EntityContainer.prototype.__properties__,{set_center:"set_center",get_center:"get_center",set_centerY:"set_centerY",get_centerY:"get_centerY",set_centerX:"set_centerX",get_centerX:"get_centerX",set_pos:"set_pos",get_pos:"get_pos",set_h:"set_h",get_h:"get_h",set_w:"set_w",get_w:"get_w",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"})
});
var pman_core_Player = function(main,page) {
	var _gthis = this;
	this.app = main;
	this.page = page;
	this.theme = new pman_display_ColorScheme();
	this.view = new pman_display_PlayerView(this);
	this.session = new pman_core_PlayerSession(this);
	this.isReady = false;
	this.readyEvent = new tannus_io_VoidSignal();
	this.readyEvent.once(function() {
		_gthis.isReady = true;
	});
	this.session.trackChanged.listen($bind(this,this._onTrackChanged),false);
	this.session.trackChanging.listen($bind(this,this._onTrackChanging),false);
};
$hxClasses["pman.core.Player"] = pman_core_Player;
pman_core_Player.__name__ = ["pman","core","Player"];
pman_core_Player.prototype = {
	attachToStage: function(stage) {
		stage.addChild(this.view);
		this.initialize(stage);
	}
	,initialize: function(stage) {
		var _gthis = this;
		if(this.app.appDir.hasSavedSession()) {
			var savedState = this.app.appDir.loadSession();
			this.session.pullJson(savedState,function() {
				_gthis.readyEvent.call();
			});
		} else {
			this.readyEvent.call();
		}
	}
	,message: function(text) {
		this.view.messageBoard.post(text);
	}
	,prompt: function(msg,placeholder,callback) {
		var box = new pman_ui_PromptBox();
		box.titl.set_text(msg);
		if(placeholder != null) {
			tannus_html__$Element_Element_$Impl_$.set(box.input.el,"placeholder",placeholder);
		}
		box.open();
		box.once("line",function(text) {
			text = StringTools.trim(text);
			if(text.length == 0) {
				callback(null);
			} else {
				callback(text);
			}
			box.close();
		});
	}
	,showPlaylist: function() {
		this.page.openPlaylistView();
	}
	,hidePlaylist: function() {
		this.page.closePlaylistView();
	}
	,isPlaylistOpen: function() {
		return this.page.playlistView != null;
	}
	,togglePlaylist: function() {
		if(this.page.playlistView != null) {
			this.page.closePlaylistView();
		} else {
			this.page.openPlaylistView();
		}
	}
	,getPlaylistView: function() {
		return this.page.playlistView;
	}
	,saveState: function() {
		this.app.appDir.saveSession(this.session.toJson());
		this.view.messageBoard.post("Session saved!");
	}
	,loadState: function(callback) {
		var _gthis = this;
		var state = this.app.appDir.loadSession();
		if(state != null) {
			this.session.pullJson(state,function() {
				_gthis.view.messageBoard.post("Session loaded!");
				if(callback != null) {
					callback();
				}
			});
		} else {
			var this1 = window;
			this1.requestAnimationFrame(function() {
				if(callback != null) {
					callback();
				}
			});
		}
	}
	,openTrack: function(track,cb) {
		var _gthis = this;
		if(cb == null) {
			cb = { };
		}
		var playing;
		var playing1;
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			playing1 = (_this.focusedTrack != null ? _this.focusedTrack.driver : null).getPaused();
		} else {
			playing1 = true;
		}
		if(!playing1) {
			playing = this.session.focusedTrack != null;
		} else {
			playing = false;
		}
		this.session.load(track,{ attached : function() {
			if($bind(cb,cb.attached) != null) {
				cb.attached();
			}
		}, manipulate : function(mc) {
			if(cb.startTime != null) {
				mc.setCurrentTime(cb.startTime);
			}
			if($bind(cb,cb.manipulate) != null) {
				cb.manipulate(mc);
			}
		}, ready : function() {
			if(playing) {
				_gthis.play();
			}
			if($bind(cb,cb.ready) != null) {
				cb.ready();
			}
		}});
	}
	,openMedia: function(provider,cb) {
		this.openTrack(new pman_media_Track(provider),cb);
	}
	,onReady: function(callback) {
		if(this.isReady) {
			var this1 = window;
			this1.requestAnimationFrame(callback);
		} else {
			this.readyEvent.once(function() {
				var this2 = window;
				this2.requestAnimationFrame(callback);
			});
		}
	}
	,addPathsToSession: function(paths) {
		console.log(paths);
	}
	,selectFiles: function(callback) {
		var _callback = function(paths) {
			var _callback1 = paths.filter(tannus_sys_node_NodeFileSystem.exists).map(function(path) {
				var this1 = new tannus_sys_CPath(path);
				var this2 = new tannus_sys_CFile(this1);
				return this2;
			});
			callback(_callback1);
		};
		this.app.fileSystemPrompt({ title : "Select one or more files to open", buttonLabel : "Open That Shit", filters : [electron_ext_FileFilter.VIDEO,electron_ext_FileFilter.AUDIO]},_callback);
	}
	,selectDirectory: function(callback) {
		var _callback = function(paths) {
			var dirs = [];
			var _g = 0;
			while(_g < paths.length) {
				var path = paths[_g];
				++_g;
				if(tannus_sys_node_NodeFSModule.existsSync(path) && tannus_sys_node_NodeFileSystem.isDirectory(path)) {
					var this1 = new tannus_sys_CPath(path);
					var this2 = new tannus_sys_CDirectory(this1,false);
					dirs.push(this2);
				}
			}
			callback(dirs);
		};
		this.app.fileSystemPrompt({ title : "Select a Directory to open", buttonLabel : "Open That Shit", directory : true},_callback);
	}
	,selectDirectoryToPlaylist: function(callback) {
		this.selectDirectory(function(dirs) {
			if(Lambda.empty(dirs)) {
				callback([]);
			} else {
				var dir = dirs[0];
				var files = [];
				dir.walk(function(entry) {
					if(tannus_sys__$FSEntry_FSEntry_$Impl_$.isFile(entry)) {
						var file = tannus_sys__$FSEntry_FSEntry_$Impl_$.file(entry);
						if(pman_core_PlayerTools.isVideoFileName(file._path.get_name())) {
							files.push(file);
						}
					} else {
						return;
					}
				});
				var tmp = files.map(pman_media_Track.fromFile);
				callback(tmp);
			}
		});
	}
	,selectFilesToPlaylist: function(callback) {
		this.selectFiles(function(files) {
			var tmp = files.map(function(_) {
				return new pman_media_Track(new pman_media_LocalFileMediaProvider(_));
			});
			callback(tmp);
		});
	}
	,promptForAddresses: function(callback) {
		var _gthis = this;
		this.prompt("Enter Address:","http://www.website.com/path/to/video.mp4",function(text) {
			text = StringTools.trim(text);
			var this1 = new tannus_http_CUrl(text);
			var url = this1;
			url = _gthis._map_address(url);
			callback([url.toString()]);
		});
	}
	,selectAddresses: function(f) {
		this.promptForAddresses(f);
	}
	,selectAddressesToPlaylist: function(callback) {
		this.promptForAddresses(function(urls) {
			var tmp = urls.map(function(_) {
				return new pman_media_Track(new pman_media_HttpAddressMediaProvider(_));
			});
			callback(tmp);
		});
	}
	,selectAndOpenFiles: function(done) {
		var _gthis = this;
		this.selectFilesToPlaylist(function(tracks) {
			_gthis.addItemList(tracks,function() {
				if(done != null) {
					done(tracks);
				}
			});
		});
	}
	,selectAndOpenDirectory: function(done) {
		var _gthis = this;
		this.selectDirectoryToPlaylist(function(tracks) {
			_gthis.addItemList(tracks,function() {
				if(done != null) {
					done(tracks);
				}
			});
		});
	}
	,selectAndOpenAddresses: function(done) {
		var _gthis = this;
		this.selectAddressesToPlaylist(function(tracks) {
			_gthis.addItemList(tracks,function() {
				if(done != null) {
					done(tracks);
				}
			});
		});
	}
	,_map_address: function(url) {
		return url;
	}
	,addItem: function(item) {
		this.session.addItem(item);
	}
	,addItemList: function(items,done) {
		var autoLoad = Lambda.empty(this.session.playlist);
		var willPlay = null;
		if(autoLoad) {
			willPlay = items[0];
		}
		if(this.session.playbackProperties.shuffle) {
			var rand = new tannus_math_Random();
			items = rand.shuffle(items);
		}
		var _g = 0;
		while(_g < items.length) {
			var item = items[_g];
			++_g;
			this.session.addItem(item,null,false);
		}
		if(autoLoad && willPlay != null) {
			this.openTrack(willPlay,{ attached : function() {
				if(done != null) {
					done();
				}
			}});
		} else if(done != null) {
			var this1 = window;
			this1.requestAnimationFrame(done);
		}
	}
	,clearPlaylist: function() {
		this.session.playlist.clear();
		this.stop();
		if(this.session.focusedTrack != null) {
			this.session.blur();
		}
	}
	,getTrack: function(index) {
		return this.session.playlist.l[index];
	}
	,getTrackByOffset: function(offset) {
		var index = this.session.indexOfCurrentMedia() + offset;
		return this.session.playlist.l[index];
	}
	,getNextTrack: function() {
		var index = this.session.indexOfCurrentMedia() + 1;
		return this.session.playlist.l[index];
	}
	,getPreviousTrack: function() {
		var index = this.session.indexOfCurrentMedia() + -1;
		return this.session.playlist.l[index];
	}
	,_onTrackChanged: function(delta) {
		if(delta[0] == null) {
			this.app.title = "PMan";
		} else {
			var newTrack = delta[0];
			var tmp = newTrack.provider.getName();
			this.app.title = "PMan | " + tmp;
			this.app.db.editMediaRow(newTrack,function(row) {
				row.views++;
				return row;
			},function(row1) {
				console.log("edit complete");
				console.log(row1);
			});
		}
	}
	,_onTrackChanging: function(delta) {
		var _gthis = this;
		if(delta[1] != null) {
			var t = delta[1];
			var updateRow = function(row) {
				var updateRow1;
				if(_gthis.session.focusedTrack != null) {
					var _this = _gthis.session;
					updateRow1 = (_this.focusedTrack != null ? _this.focusedTrack.driver : null).getDurationTime();
				} else {
					updateRow1 = 0;
				}
				console.log(updateRow1);
				var updateRow2;
				if(_gthis.session.focusedTrack != null) {
					var _this1 = _gthis.session;
					updateRow2 = (_this1.focusedTrack != null ? _this1.focusedTrack.driver : null).getCurrentTime();
				} else {
					updateRow2 = 0.0;
				}
				console.log(updateRow2);
				var updateRow3;
				if(_gthis.session.focusedTrack != null) {
					var _this2 = _gthis.session;
					updateRow3 = (_this2.focusedTrack != null ? _this2.focusedTrack.driver : null).getDurationTime();
				} else {
					updateRow3 = 0;
				}
				row.timing.duration = updateRow3;
				var updateRow4;
				if(_gthis.session.focusedTrack != null) {
					var _this3 = _gthis.session;
					updateRow4 = (_this3.focusedTrack != null ? _this3.focusedTrack.driver : null).getEnded();
				} else {
					updateRow4 = false;
				}
				if(!updateRow4) {
					var updateRow5;
					if(_gthis.session.focusedTrack != null) {
						var _this4 = _gthis.session;
						updateRow5 = (_this4.focusedTrack != null ? _this4.focusedTrack.driver : null).getCurrentTime();
					} else {
						updateRow5 = 0.0;
					}
					row.timing.last_time = updateRow5;
				} else {
					row.timing.last_time = null;
				}
				return row;
			};
			this.app.db.editMediaRow(t,updateRow,function(row1) {
				console.log("edit complete");
				console.log(row1);
			});
		}
	}
	,play: function() {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			(_this.focusedTrack != null ? _this.focusedTrack.driver : null).play();
		}
	}
	,pause: function() {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			(_this.focusedTrack != null ? _this.focusedTrack.driver : null).pause();
		}
	}
	,stop: function() {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			(_this.focusedTrack != null ? _this.focusedTrack.driver : null).stop();
		}
	}
	,togglePlayback: function() {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			(_this.focusedTrack != null ? _this.focusedTrack.driver : null).togglePlayback();
		}
	}
	,isFullscreen: function() {
		return this.app.browserWindow.isFullScreen();
	}
	,setFullscreen: function(flag) {
		this.app.browserWindow.setFullScreen(flag);
	}
	,gotoTrack: function(index,cb) {
		if(this.session.focusedTrack == null) {
			return;
		}
		var track = this.session.playlist.l[index];
		if(track == null) {
			return;
		}
		this.openTrack(track,cb);
	}
	,gotoByOffset: function(offset,cb) {
		if(this.session.focusedTrack == null) {
			return;
		}
		var index = this.session.indexOfCurrentMedia() + offset;
		var track = this.session.playlist.l[index];
		if(track == null) {
			if(offset == 0) {
				return;
			} else if(offset > 0) {
				track = this.session.playlist.l[0];
			} else if(offset < 0) {
				track = this.session.playlist.l[this.session.playlist.l.length - 1];
			}
			if(track == null) {
				return;
			}
		}
		this.openTrack(track,cb);
	}
	,gotoNext: function(cb) {
		this.gotoByOffset(1,cb);
	}
	,gotoPrevious: function(cb) {
		this.gotoByOffset(-1,cb);
	}
	,get_duration: function() {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			return (_this.focusedTrack != null ? _this.focusedTrack.driver : null).getDuration();
		} else {
			return tannus_media__$Duration_Duration_$Impl_$._new();
		}
	}
	,get_durationTime: function() {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			return (_this.focusedTrack != null ? _this.focusedTrack.driver : null).getDurationTime();
		} else {
			return 0;
		}
	}
	,get_paused: function() {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			return (_this.focusedTrack != null ? _this.focusedTrack.driver : null).getPaused();
		} else {
			return true;
		}
	}
	,get_currentTime: function() {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			return (_this.focusedTrack != null ? _this.focusedTrack.driver : null).getCurrentTime();
		} else {
			return 0.0;
		}
	}
	,set_currentTime: function(v) {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			(_this.focusedTrack != null ? _this.focusedTrack.driver : null).setCurrentTime(v);
		}
		if(this.session.focusedTrack != null) {
			var _this1 = this.session;
			return (_this1.focusedTrack != null ? _this1.focusedTrack.driver : null).getCurrentTime();
		} else {
			return 0.0;
		}
	}
	,get_volume: function() {
		return this.session.playbackProperties.volume;
	}
	,set_volume: function(v) {
		return this.session.playbackProperties.volume = v;
	}
	,get_playbackRate: function() {
		return this.session.playbackProperties.speed;
	}
	,set_playbackRate: function(v) {
		return this.session.playbackProperties.speed = v;
	}
	,get_shuffle: function() {
		return this.session.playbackProperties.shuffle;
	}
	,set_shuffle: function(v) {
		return this.session.playbackProperties.shuffle = v;
	}
	,get_muted: function() {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			return (_this.focusedTrack != null ? _this.focusedTrack.driver : null).getMuted();
		} else {
			return false;
		}
	}
	,set_muted: function(v) {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			(_this.focusedTrack != null ? _this.focusedTrack.driver : null).setMuted(v);
		}
		if(this.session.focusedTrack != null) {
			var _this1 = this.session;
			return (_this1.focusedTrack != null ? _this1.focusedTrack.driver : null).getMuted();
		} else {
			return false;
		}
	}
	,get_ended: function() {
		if(this.session.focusedTrack != null) {
			var _this = this.session;
			return (_this.focusedTrack != null ? _this.focusedTrack.driver : null).getEnded();
		} else {
			return false;
		}
	}
	,get_track: function() {
		return this.session.focusedTrack;
	}
	,app: null
	,page: null
	,theme: null
	,view: null
	,session: null
	,isReady: null
	,readyEvent: null
	,__class__: pman_core_Player
	,__properties__: {get_track:"get_track",get_ended:"get_ended",set_muted:"set_muted",get_muted:"get_muted",set_shuffle:"set_shuffle",get_shuffle:"get_shuffle",set_playbackRate:"set_playbackRate",get_playbackRate:"get_playbackRate",set_volume:"set_volume",get_volume:"get_volume",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime",get_paused:"get_paused",get_durationTime:"get_durationTime",get_duration:"get_duration"}
};
var pman_core_PlayerMediaContext = function(session) {
	this.session = session;
	this.changeEvent = new tannus_io_Signal();
	this.mediaProvider = null;
	this.media = null;
	this.playbackDriver = null;
	this.mediaRenderer = null;
};
$hxClasses["pman.core.PlayerMediaContext"] = pman_core_PlayerMediaContext;
pman_core_PlayerMediaContext.__name__ = ["pman","core","PlayerMediaContext"];
pman_core_PlayerMediaContext.prototype = {
	set: function(info) {
		var prev = this.get();
		if(this.allValuesPresent()) {
			this.disassemble(false);
		}
		if(this._validateInfo(info)) {
			this.mediaProvider = info.mediaProvider;
			this.media = info.media;
			this.playbackDriver = info.playbackDriver;
			this.mediaRenderer = info.mediaRenderer;
			if(this.allValuesPresent()) {
				this.session.player.view.attachRenderer(this.mediaRenderer);
			} else if(prev.allValuesPresent()) {
				this.session.player.view.detachRenderer();
			}
		}
		this._changed(prev,this.get());
	}
	,get: function() {
		if(!this.allValuesPresent()) {
			this.mediaProvider = null;
			this.media = null;
			this.playbackDriver = null;
			this.mediaRenderer = null;
		}
		return new pman_core_MediaContextInfo(this.mediaProvider,this.media,this.playbackDriver,this.mediaRenderer);
	}
	,disassemble: function(report) {
		if(report == null) {
			report = true;
		}
		if(!this.allValuesPresent()) {
			this.mediaProvider = null;
			this.media = null;
			this.playbackDriver = null;
			this.mediaRenderer = null;
		}
		var prev = this.get();
		if(this.allValuesPresent()) {
			this.media.dispose();
			this.playbackDriver.stop();
			this.mediaProvider = null;
			this.media = null;
			this.playbackDriver = null;
			this.mediaRenderer = null;
		}
		if(report) {
			this._changed(prev,this.get());
		}
	}
	,_polarize: function() {
		if(!this.allValuesPresent()) {
			this.mediaProvider = null;
			this.media = null;
			this.playbackDriver = null;
			this.mediaRenderer = null;
		}
	}
	,allValuesPresent: function() {
		if(this.mediaProvider != null && this.media != null && this.playbackDriver != null) {
			return this.mediaRenderer != null;
		} else {
			return false;
		}
	}
	,_nullify: function() {
		this.mediaProvider = null;
		this.media = null;
		this.playbackDriver = null;
		this.mediaRenderer = null;
	}
	,_validateInfo: function(info) {
		var flags_0 = info.mediaProvider != null;
		var flags_1 = info.media != null;
		var flags_2 = info.playbackDriver != null;
		var flags_3 = info.mediaRenderer != null;
		switch(flags_0) {
		case false:
			if(flags_1 == false) {
				if(flags_2 == false) {
					if(flags_3 == false) {
						return true;
					} else {
						return false;
					}
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case true:
			if(flags_1 == true) {
				if(flags_2 == true) {
					if(flags_3 == true) {
						return true;
					} else {
						return false;
					}
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		}
	}
	,_changed: function(from_,to_) {
		var this1;
		var this2 = [to_,from_];
		this1 = this2;
		var delta = this1;
		console.log("Media Context Change Event");
		this.changeEvent.broadcast(delta);
	}
	,get_player: function() {
		return this.session.player;
	}
	,get_view: function() {
		return this.session.player.view;
	}
	,session: null
	,mediaProvider: null
	,media: null
	,playbackDriver: null
	,mediaRenderer: null
	,changeEvent: null
	,__class__: pman_core_PlayerMediaContext
	,__properties__: {get_view:"get_view",get_player:"get_player"}
};
var pman_core_MediaContextInfo = function(mediaProvider,media,playbackDriver,mediaRenderer) {
	this.mediaProvider = mediaProvider;
	this.media = media;
	this.playbackDriver = playbackDriver;
	this.mediaRenderer = mediaRenderer;
};
$hxClasses["pman.core.MediaContextInfo"] = pman_core_MediaContextInfo;
pman_core_MediaContextInfo.__name__ = ["pman","core","MediaContextInfo"];
pman_core_MediaContextInfo.prototype = {
	mediaProvider: null
	,media: null
	,playbackDriver: null
	,mediaRenderer: null
	,clone: function() {
		return new pman_core_MediaContextInfo(this.mediaProvider,this.media,this.playbackDriver,this.mediaRenderer);
	}
	,allValuesPresent: function() {
		if(this.mediaProvider != null && this.media != null && this.playbackDriver != null) {
			return this.mediaRenderer != null;
		} else {
			return false;
		}
	}
	,__class__: pman_core_MediaContextInfo
};
var pman_core_PlayerPlaybackProperties = function(speed,volume,shuffle) {
	this.speed = speed;
	this.volume = volume;
	this.shuffle = shuffle;
};
$hxClasses["pman.core.PlayerPlaybackProperties"] = pman_core_PlayerPlaybackProperties;
pman_core_PlayerPlaybackProperties.__name__ = ["pman","core","PlayerPlaybackProperties"];
pman_core_PlayerPlaybackProperties.prototype = {
	clone: function() {
		return new pman_core_PlayerPlaybackProperties(this.speed,this.volume,this.shuffle);
	}
	,speed: null
	,volume: null
	,shuffle: null
	,__class__: pman_core_PlayerPlaybackProperties
};
var pman_core_PlayerSession = function(p) {
	this.player = p;
	this.playbackProperties = new pman_core_PlayerPlaybackProperties(1.0,1.0,false);
	this.trackChanging = new tannus_io_Signal();
	this.trackChanged = new tannus_io_Signal();
	this.focusedTrack = null;
	var this1 = new pman_media_PlaylistClass(null);
	this.playlist = this1;
};
$hxClasses["pman.core.PlayerSession"] = pman_core_PlayerSession;
pman_core_PlayerSession.__name__ = ["pman","core","PlayerSession"];
pman_core_PlayerSession.prototype = {
	indexOfCurrentMedia: function() {
		if(this.focusedTrack != null) {
			return this.playlist.indexOf(this.focusedTrack);
		} else {
			return -1;
		}
	}
	,addItem: function(track,done,autoLoad) {
		if(autoLoad == null) {
			autoLoad = true;
		}
		if(autoLoad && Lambda.empty(this.playlist)) {
			this.plpush(track);
			this.load(track,{ attached : function() {
				if(done != null) {
					done();
				}
			}});
		} else {
			this.plpush(track);
			if(done != null) {
				var this1 = window;
				this1.requestAnimationFrame(done);
			}
		}
	}
	,plpush: function(track) {
		if(this.playbackProperties.shuffle) {
			var range_0 = 0;
			var range_1 = this.playlist.l.length;
			var min = range_0;
			this.playlist.insert(Math.floor(new tannus_math_Random().nextInt() / 2147483647 * (range_1 - min + 1) + min),track);
		} else {
			this.playlist.push(track);
		}
	}
	,focus: function(track,done) {
		var _gthis = this;
		var prev = this.focusedTrack;
		var this1;
		var this2 = [track,prev];
		this1 = this2;
		var pre_delta = this1;
		this.trackChanging.broadcast(pre_delta);
		if(this.focusedTrack != null) {
			this.blur(this.focusedTrack);
		}
		this._mountIfNecessary(track,function() {
			_gthis.focusedTrack = track;
			_gthis.player.view.attachRenderer(track.renderer);
			var this3;
			var this4 = [_gthis.focusedTrack,prev];
			this3 = this4;
			var post_delta = this3;
			_gthis.trackChanged.broadcast(post_delta);
			if(done != null) {
				done();
			}
		});
	}
	,blur: function(track) {
		if(track == null) {
			if(this.focusedTrack != null) {
				track = this.focusedTrack;
			} else {
				return;
			}
		}
		if(!(track.media != null && track.driver != null && track.renderer != null)) {
			throw new js__$Boot_HaxeError("Error: Track is not mounted, and thus cannot be blurred");
		}
		track.deallocate();
		track.media = null;
		track.driver = null;
		track.renderer = null;
		if(track == this.focusedTrack) {
			this.player.view.detachRenderer();
			this.focusedTrack = null;
		}
	}
	,_mountIfNecessary: function(track,done) {
		if(track.media != null && track.driver != null && track.renderer != null) {
			var this1 = window;
			this1.requestAnimationFrame(done);
		} else {
			track.mount(function(error) {
				if(error != null) {
					console.error(error);
					throw new js__$Boot_HaxeError(error);
				} else {
					done();
				}
			});
		}
	}
	,load: function(t,cb) {
		var _gthis = this;
		if(cb == null) {
			cb = { };
		}
		this.focus(t,function() {
			if($bind(cb,cb.attached) != null) {
				var this1 = window;
				this1.requestAnimationFrame($bind(cb,cb.attached));
			}
			var d = _gthis.focusedTrack.driver;
			if($bind(cb,cb.manipulate) != null) {
				var lmd = d.getLoadedMetadataSignal();
				var f = $bind(cb,cb.manipulate);
				var a1 = d;
				var a11 = function() {
					f(a1);
				};
				lmd.once(function() {
					foundation_Tools.defer(a11);
				});
				lmd.once(function() {
					var this2 = window;
					this2.requestAnimationFrame(function() {
						cb.manipulate(d);
					});
				});
			}
			if($bind(cb,cb.ready) != null) {
				var cp = d.getCanPlaySignal();
				cp.once(function() {
					var this3 = window;
					this3.requestAnimationFrame($bind(cb,cb.ready));
				});
			}
		});
	}
	,hasMedia: function() {
		return this.focusedTrack != null;
	}
	,toJson: function() {
		return { playlist : this.playlist.toJSON(), playbackProperties : { speed : this.playbackProperties.speed, volume : this.playbackProperties.volume, shuffle : this.playbackProperties.shuffle}, nowPlaying : this.__getJsonPlayerState()};
	}
	,pullJson: function(state,callback) {
		var _gthis = this;
		this.player.clearPlaylist();
		var stack = new tannus_ds_AsyncStack();
		stack.under(function(next) {
			var this1 = window;
			this1.requestAnimationFrame(function() {
				var tmp = pman_media_PlaylistClass.fromJSON(state.playlist);
				_gthis.playlist = tmp;
				next();
			});
		});
		stack.under(function(next1) {
			var this2 = window;
			this2.requestAnimationFrame(function() {
				_gthis.__pullJsonPlaybackProperties(state.playbackProperties);
				next1();
			});
		});
		stack.under(function(next2) {
			var this3 = window;
			this3.requestAnimationFrame(function() {
				if(state.nowPlaying != null) {
					_gthis.__pullJsonPlayerState(state.nowPlaying);
				}
				next2();
			});
		});
		stack.run(function() {
			callback();
		});
	}
	,__pullJsonPlaybackProperties: function(props) {
		this.player.session.playbackProperties.shuffle = props.shuffle;
		this.player.session.playbackProperties.speed = props.speed;
		this.player.session.playbackProperties.volume = props.volume;
	}
	,__pullJsonPlayerState: function(state) {
		var track = this.player.session.playlist.l[state.track];
		this.player.openTrack(track,{ manipulate : function(mc) {
			mc.setCurrentTime(state.time);
		}});
	}
	,__playbackPropertiesToJson: function() {
		return { speed : this.playbackProperties.speed, volume : this.playbackProperties.volume, shuffle : this.playbackProperties.shuffle};
	}
	,__getJsonPlayerState: function() {
		if(this.focusedTrack != null) {
			var tmp = this.indexOfCurrentMedia();
			var _this = this.player;
			var tmp1;
			if(_this.session.focusedTrack != null) {
				var _this1 = _this.session;
				tmp1 = (_this1.focusedTrack != null ? _this1.focusedTrack.driver : null).getCurrentTime();
			} else {
				tmp1 = 0.0;
			}
			return { track : tmp, time : tmp1};
		} else {
			return null;
		}
	}
	,get_pp: function() {
		return this.playbackProperties;
	}
	,get_shuffle: function() {
		return this.playbackProperties.shuffle;
	}
	,set_shuffle: function(v) {
		return this.playbackProperties.shuffle = v;
	}
	,get_mediaProvider: function() {
		if(this.focusedTrack != null) {
			return this.focusedTrack.provider;
		} else {
			return null;
		}
	}
	,get_media: function() {
		if(this.focusedTrack != null) {
			return this.focusedTrack.media;
		} else {
			return null;
		}
	}
	,get_playbackDriver: function() {
		if(this.focusedTrack != null) {
			return this.focusedTrack.driver;
		} else {
			return null;
		}
	}
	,get_mediaRenderer: function() {
		if(this.focusedTrack != null) {
			return this.focusedTrack.renderer;
		} else {
			return null;
		}
	}
	,get_mft: function() {
		return this.focusedTrack;
	}
	,focusedTrack: null
	,set_focusedTrack: function(v) {
		return this.focusedTrack = v;
	}
	,player: null
	,playbackProperties: null
	,playlist: null
	,trackChanged: null
	,trackChanging: null
	,__class__: pman_core_PlayerSession
	,__properties__: {set_focusedTrack:"set_focusedTrack",get_mft:"get_mft",get_mediaRenderer:"get_mediaRenderer",get_playbackDriver:"get_playbackDriver",get_media:"get_media",get_mediaProvider:"get_mediaProvider",set_shuffle:"set_shuffle",get_shuffle:"get_shuffle",get_pp:"get_pp"}
};
var pman_core_PlayerTools = function() { };
$hxClasses["pman.core.PlayerTools"] = pman_core_PlayerTools;
pman_core_PlayerTools.__name__ = ["pman","core","PlayerTools"];
pman_core_PlayerTools.isVideoFileName = function(name) {
	var videoFileNames = ["webm","mkv","flv","vob","ogv","ogg","avi","mov","qt","wmv","amv","mp4","m4p","m4v","mpg","mp2","mpeg","mpe","mpv","m2v","3gp","3g2"];
	return Lambda.has(videoFileNames,tannus_ds_StringUtils.afterLast(name,".").toLowerCase());
};
var pman_db_AppDir = function(app) {
	this.main = app;
};
$hxClasses["pman.db.AppDir"] = pman_db_AppDir;
pman_db_AppDir.__name__ = ["pman","db","AppDir"];
pman_db_AppDir.prototype = {
	path: function() {
		var this1 = new tannus_sys_CPath(electron_ext_ExtApp.getPath("userData"));
		return this1;
	}
	,dir: function() {
		var this1 = new tannus_sys_CPath(electron_ext_ExtApp.getPath("userData"));
		var this2 = new tannus_sys_CDirectory(this1,false);
		return this2;
	}
	,hasSavedSession: function() {
		var this1 = new tannus_sys_CPath(electron_ext_ExtApp.getPath("userData"));
		return tannus_sys_node_NodeFSModule.existsSync(tannus_sys_CPath.join([this1,tannus_sys__$Path_Path_$Impl_$.fromString("session.json")]).s);
	}
	,loadSession: function() {
		var this1 = new tannus_sys_CPath(electron_ext_ExtApp.getPath("userData"));
		var sessPath = tannus_sys_CPath.join([this1,tannus_sys__$Path_Path_$Impl_$.fromString("session.json")]);
		if(tannus_sys_node_NodeFSModule.existsSync(sessPath.s)) {
			var text = tannus_sys_node_NodeFileSystem.read(sessPath.s).toString();
			var data = JSON.parse(text);
			return data;
		} else {
			return null;
		}
	}
	,saveSession: function(session) {
		var this1 = new tannus_sys_CPath(electron_ext_ExtApp.getPath("userData"));
		var sessPath = tannus_sys_CPath.join([this1,tannus_sys__$Path_Path_$Impl_$.fromString("session.json")]);
		var s = JSON.stringify(session,null,"   ");
		var data = new tannus_io_impl_NodeBinary(s.length,new Buffer(s));
		tannus_sys_node_NodeFileSystem.write(sessPath.s,data);
	}
	,main: null
	,__class__: pman_db_AppDir
};
var pman_db_PManDatabase = function(main) {
	this.reddy = false;
	var _gthis = this;
	this.app = main;
	this.or = new tannus_io_VoidSignal();
	this.or.once(function() {
		_gthis.reddy = true;
	});
};
$hxClasses["pman.db.PManDatabase"] = pman_db_PManDatabase;
pman_db_PManDatabase.__name__ = ["pman","db","PManDatabase"];
pman_db_PManDatabase.prototype = {
	getMediaRow: function(uri) {
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var query = function() {
				var p = _gthis.db.transaction("media",null).objectStore("media").get(uri);
				p.unless(function(error) {
					window.console.error(error);
					reject(error);
				});
				p.then(function(row) {
					accept(row);
				});
			};
			(_gthis.reddy ? electron_Tools.defer : ($_=_gthis.or,$bind($_,$_.once)))(query);
		},null);
	}
	,putMediaRow: function(row) {
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var query = function() {
				var table = _gthis.db.transaction("media","readwrite").objectStore("media");
				var p = table.put(row);
				p.unless(function(error) {
					window.console.error(error);
					reject(error);
				});
				p.then(function(uri) {
					_gthis.getMediaRow(uri).then(accept).unless(reject);
				});
			};
			(_gthis.reddy ? electron_Tools.defer : ($_=_gthis.or,$bind($_,$_.once)))(query);
		},null);
	}
	,cogMediaRow: function(track) {
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var uri = track.provider.getURI();
			var p = _gthis.getMediaRow(uri);
			p.unless(function(error) {
				window.console.error(error);
				reject(error);
			});
			p.then(function(result) {
				if(result != null) {
					accept(result);
				} else {
					var row = track.provider.getName();
					var row1 = { uri : uri, title : row, views : 0, starred : false, timing : { duration : null, last_time : null}};
					_gthis.putMediaRow(row1).then(accept).unless(reject);
				}
			});
		},null);
	}
	,pushMediaRow: function(row,done) {
		var p = this.putMediaRow(row);
		p.then(function(nrow) {
			done(true);
		});
		p.unless(function(error) {
			window.console.error(error);
			done(false);
		});
	}
	,editMediaRow: function(track,edit,done) {
		var _gthis = this;
		var p = this.cogMediaRow(track);
		p.unless($bind(this,this.rat)).then(function(row) {
			row = edit(row);
			p = _gthis.putMediaRow(row);
			p.unless($bind(_gthis,_gthis.rat)).then(done);
		});
	}
	,onready: function(action) {
		(this.reddy ? electron_Tools.defer : ($_=this.or,$bind($_,$_.once)))(action);
	}
	,init: function(done) {
		var _gthis = this;
		if(done != null) {
			(this.reddy ? electron_Tools.defer : ($_=this.or,$bind($_,$_.once)))(done);
		}
		var p = ida_backend_idb_IDBDatabase.open("pman",1,$bind(this,this.build_db));
		p.then(function(db) {
			_gthis.db = db;
			_gthis.or.call();
		});
		p.unless(function(error) {
			throw new js__$Boot_HaxeError(error);
		});
	}
	,build_db: function(db) {
		var media = db.createObjectStore("media",{ keyPath : "uri"});
		media.createIndex("uri","uri",{ unique : true});
		media.createIndex("title","title",null);
		media.createIndex("views","views",null);
		media.createIndex("starred","starred",null);
		media.createIndex("timing","timing",null);
	}
	,tl: function(table,mode) {
		return this.db.transaction(table,mode).objectStore(table);
	}
	,tgp: function(p,f) {
		p.unless(function(error) {
			window.console.error(error);
			throw new js__$Boot_HaxeError(error);
		}).then(f);
	}
	,rat: function(error) {
		window.console.error(error);
		throw js__$Boot_HaxeError.wrap(error);
	}
	,app: null
	,db: null
	,or: null
	,reddy: null
	,__class__: pman_db_PManDatabase
};
var pman_display_ColorScheme = function() {
	this.derived = new tannus_ds_dict_IntDict();
	this.did = 0;
	this.colors = [];
	var tmp = this.colors;
	var this1 = new tannus_graphics__$Color_TColor(34,34,34,null);
	tmp.push(this1);
	var tmp1 = this.colors;
	var this2 = new tannus_graphics__$Color_TColor(242,122,72,null);
	tmp1.push(this2);
	var tmp2 = this.colors;
	var this3 = new tannus_graphics__$Color_TColor(230,230,230,null);
	tmp2.push(this3);
};
$hxClasses["pman.display.ColorScheme"] = pman_display_ColorScheme;
pman_display_ColorScheme.__name__ = ["pman","display","ColorScheme"];
pman_display_ColorScheme.prototype = {
	save: function(c) {
		var id = this.did++;
		this.derived.set(id,c);
		return id;
	}
	,restore: function(id) {
		return this.derived.m.h[id];
	}
	,exists: function(id) {
		return this.derived.exists(id);
	}
	,get_primary: function() {
		return this.colors[0];
	}
	,get_secondary: function() {
		return this.colors[1];
	}
	,get_tertiary: function() {
		return this.colors[2];
	}
	,colors: null
	,derived: null
	,did: null
	,__class__: pman_display_ColorScheme
	,__properties__: {get_tertiary:"get_tertiary",get_secondary:"get_secondary",get_primary:"get_primary"}
};
var pman_display_Icons = function() { };
$hxClasses["pman.display.Icons"] = pman_display_Icons;
pman_display_Icons.__name__ = ["pman","display","Icons"];
pman_display_Icons.playIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"play",f);
};
pman_display_Icons.pauseIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"pause",f);
};
pman_display_Icons.prevIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"previous",f);
};
pman_display_Icons.nextIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"next",f);
};
pman_display_Icons.expandIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"expand",f);
};
pman_display_Icons.collapseIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"collapse",f);
};
pman_display_Icons.clockIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"clock",f);
};
pman_display_Icons.muteIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"sound-muted",f);
};
pman_display_Icons.shuffleIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"shuffle",f);
};
pman_display_Icons.backIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"back",f);
};
pman_display_Icons.volumeIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"sound3",f);
};
pman_display_Icons.castIcon = function(w,h,f) {
	return pman_display_Icons.namedPath(w,h,"cast",f);
};
pman_display_Icons.namedPath = function(w,h,name,f) {
	var this1 = pman_display_Icons.icon_data;
	var tmp;
	var this2;
	if(this1 == null) {
		this2 = null;
	} else {
		var this3;
		if(this1.__properties__) {
			tmp = this1.__properties__["get_" + name];
			this3 = tmp;
		} else {
			this3 = false;
		}
		if(this3) {
			this2 = this1[tmp]();
		} else {
			this2 = this1[name];
		}
	}
	var this4 = this2;
	return pman_display_Icons.spath(w,h,this4 != null ? this4 : this4,f);
};
pman_display_Icons.spath = function(w,h,d,f) {
	return pman_display_Icons.path(w,h,function(p) {
		p.attr("d",d);
		p.style.set_fill("#E6E6E6");
		if(f != null) {
			f(p);
		}
	});
};
pman_display_Icons.path = function(w,h,f) {
	return pman_display_Icons.icon(w,h,function(svg) {
		var path = new vex_svg_SVGPath();
		svg.append(path);
		f(path);
	});
};
pman_display_Icons.icon = function(w,h,f) {
	var svg = new vex_svg_SVGDocument();
	svg.set_width(w);
	svg.set_height(h);
	svg.set_viewBox(tannus_geom__$Rectangle_Rectangle_$Impl_$.fromArray([76,76]));
	f(svg);
	return svg;
};
pman_display_Icons.get = function(name) {
	var this1 = pman_display_Icons.icon_data;
	var tmp;
	var this2;
	if(this1 == null) {
		this2 = null;
	} else {
		var this3;
		if(this1.__properties__) {
			tmp = this1.__properties__["get_" + name];
			this3 = tmp;
		} else {
			this3 = false;
		}
		if(this3) {
			this2 = this1[tmp]();
		} else {
			this2 = this1[name];
		}
	}
	var this4 = this2;
	if(this4 != null) {
		return this4;
	} else {
		return this4;
	}
};
var pman_display_PlayerView = function(p) {
	pman_core_Ent.call(this);
	this.player = p;
	this.controls = new pman_ui_PlayerControlsView(this);
	this.addSibling(this.controls);
	this.messageBoard = new pman_ui_PlayerMessageBoard(this.player);
	this.addSibling(this.messageBoard);
	this.currentMediaRenderer = null;
};
$hxClasses["pman.display.PlayerView"] = pman_display_PlayerView;
pman_display_PlayerView.__name__ = ["pman","display","PlayerView"];
pman_display_PlayerView.__super__ = pman_core_Ent;
pman_display_PlayerView.prototype = $extend(pman_core_Ent.prototype,{
	detachRenderer: function() {
		if(this.currentMediaRenderer != null) {
			this.currentMediaRenderer.onDetached(this);
			this.currentMediaRenderer.dispose();
			this.currentMediaRenderer = null;
		}
	}
	,attachRenderer: function(mr) {
		if(mr != this.currentMediaRenderer) {
			if(this.currentMediaRenderer != null) {
				this.detachRenderer();
			}
			this.currentMediaRenderer = mr;
			this.currentMediaRenderer.onAttached(this);
		}
	}
	,update: function(stage) {
		if(this.currentMediaRenderer != null) {
			var _this = this.player.session;
			var mc = _this.focusedTrack != null ? _this.focusedTrack.driver : null;
			var pp = this.player.session.playbackProperties;
			mc.setVolume(pp.volume);
			mc.setPlaybackRate(pp.speed);
			this.currentMediaRenderer.update(stage);
			if(mc.getEnded()) {
				this.player.gotoByOffset(1,null);
			}
		}
		pman_core_Ent.prototype.update.call(this,stage);
	}
	,render: function(stage,c) {
		if(this.currentMediaRenderer != null) {
			this.currentMediaRenderer.render(stage,c);
		}
		pman_core_Ent.prototype.render.call(this,stage,c);
	}
	,calculateGeometry: function(r) {
		this.rect.cloneFrom(r);
		if(this.controls.uiEnabled) {
			var _g = this;
			_g.set_h(_g.get_h() - this.controls.get_h());
		}
		if(this.player.page.playlistView != null) {
			var plv = this.player.page.playlistView;
			var _g1 = this;
			_g1.set_w(_g1.get_w() - plv.get_width());
		}
		pman_core_Ent.prototype.calculateGeometry.call(this,r);
		if(this.currentMediaRenderer != null) {
			this.currentMediaRenderer.calculateGeometry(this.rect);
		}
	}
	,get_cmr: function() {
		return this.currentMediaRenderer;
	}
	,set_cmr: function(v) {
		return this.currentMediaRenderer = v;
	}
	,player: null
	,controls: null
	,messageBoard: null
	,currentMediaRenderer: null
	,__class__: pman_display_PlayerView
	,__properties__: $extend(pman_core_Ent.prototype.__properties__,{set_cmr:"set_cmr",get_cmr:"get_cmr"})
});
var pman_display_media_MediaRenderer = function(media) {
	pman_core_Ent.call(this);
	this.media = media;
};
$hxClasses["pman.display.media.MediaRenderer"] = pman_display_media_MediaRenderer;
pman_display_media_MediaRenderer.__name__ = ["pman","display","media","MediaRenderer"];
pman_display_media_MediaRenderer.__super__ = pman_core_Ent;
pman_display_media_MediaRenderer.prototype = $extend(pman_core_Ent.prototype,{
	onAttached: function(pv) {
		console.log(Type.getClassName(js_Boot.getClass(this)) + " attached to the main view");
	}
	,onDetached: function(pv) {
		console.log(Type.getClassName(js_Boot.getClass(this)) + " detached from the main view");
	}
	,dispose: function() {
		this["delete"]();
	}
	,update: function(stage) {
		pman_core_Ent.prototype.update.call(this,stage);
	}
	,render: function(stage,c) {
		pman_core_Ent.prototype.render.call(this,stage,c);
	}
	,calculateGeometry: function(viewport) {
		this.rect.cloneFrom(viewport);
	}
	,media: null
	,mediaController: null
	,__class__: pman_display_media_MediaRenderer
});
var pman_display_media_LocalMediaObjectRenderer = function(m,c) {
	pman_display_media_MediaRenderer.call(this,m);
	this.mediaController = c;
};
$hxClasses["pman.display.media.LocalMediaObjectRenderer"] = pman_display_media_LocalMediaObjectRenderer;
pman_display_media_LocalMediaObjectRenderer.__name__ = ["pman","display","media","LocalMediaObjectRenderer"];
pman_display_media_LocalMediaObjectRenderer.__super__ = pman_display_media_MediaRenderer;
pman_display_media_LocalMediaObjectRenderer.prototype = $extend(pman_display_media_MediaRenderer.prototype,{
	dispose: function() {
		pman_display_media_MediaRenderer.prototype.dispose.call(this);
		this.mediaController.mediaObject.destroy();
	}
	,get_tc: function() {
		return this.mediaController;
	}
	,get_mediaObject: function() {
		return this.mediaController.mediaObject;
	}
	,get_m: function() {
		return this.mediaController.mediaObject;
	}
	,__class__: pman_display_media_LocalMediaObjectRenderer
	,__properties__: $extend(pman_display_media_MediaRenderer.prototype.__properties__,{get_m:"get_m",get_mediaObject:"get_mediaObject",get_tc:"get_tc"})
});
var pman_display_media_LocalAudioRenderer = function(m,c) {
	pman_display_media_LocalMediaObjectRenderer.call(this,m,c);
};
$hxClasses["pman.display.media.LocalAudioRenderer"] = pman_display_media_LocalAudioRenderer;
pman_display_media_LocalAudioRenderer.__name__ = ["pman","display","media","LocalAudioRenderer"];
pman_display_media_LocalAudioRenderer.__super__ = pman_display_media_LocalMediaObjectRenderer;
pman_display_media_LocalAudioRenderer.prototype = $extend(pman_display_media_LocalMediaObjectRenderer.prototype,{
	__class__: pman_display_media_LocalAudioRenderer
});
var pman_display_media_LocalVideoRenderer = function(m,mc) {
	this.pv = null;
	pman_display_media_LocalMediaObjectRenderer.call(this,m,mc);
	var this1 = new tannus_geom_CRectangle(0,0,0,0);
	this.vr = this1;
};
$hxClasses["pman.display.media.LocalVideoRenderer"] = pman_display_media_LocalVideoRenderer;
pman_display_media_LocalVideoRenderer.__name__ = ["pman","display","media","LocalVideoRenderer"];
pman_display_media_LocalVideoRenderer.__super__ = pman_display_media_LocalMediaObjectRenderer;
pman_display_media_LocalVideoRenderer.prototype = $extend(pman_display_media_LocalMediaObjectRenderer.prototype,{
	render: function(stage,c) {
		c.drawComponent(this.mediaController.mediaObject,0,0,this.mediaController.mediaObject.vid.width,this.mediaController.mediaObject.vid.height,this.vr.x,this.vr.y,this.vr.width,this.vr.height);
	}
	,update: function(stage) {
		pman_display_media_LocalMediaObjectRenderer.prototype.update.call(this,stage);
		if(this.pv != null) {
			var this1 = new tannus_geom_CRectangle(0,0,this.mediaController.mediaObject.vid.width,this.mediaController.mediaObject.vid.height);
			var videoSize = this1;
			var viewport = this.pv.rect.clone();
			var this2 = new tannus_geom_CRectangle(0,0,this.mediaController.mediaObject.vid.width,this.mediaController.mediaObject.vid.height);
			var scale = this.marScale(this2,this.pv.rect);
			this.vr.width = videoSize.width * scale;
			this.vr.height = videoSize.height * scale;
			var _this = this.vr;
			_this.x = viewport.x + viewport.width / 2 - _this.width / 2;
			var _this1 = this.vr;
			_this1.y = viewport.y + viewport.height / 2 - _this1.height / 2;
		}
	}
	,marScale: function(src,dest) {
		var a = dest.width / src.width;
		var b = dest.height / src.height;
		if(a < b) {
			return a;
		} else {
			return b;
		}
	}
	,onAttached: function(pv) {
		pman_display_media_LocalMediaObjectRenderer.prototype.onAttached.call(this,pv);
		if(this.pv == null) {
			this.pv = pv;
		}
	}
	,onDetached: function(pv) {
		pman_display_media_LocalMediaObjectRenderer.prototype.onDetached.call(this,pv);
	}
	,get_v: function() {
		return this.mediaController.mediaObject;
	}
	,get_ovr: function() {
		var this1 = new tannus_geom_CRectangle(0,0,this.mediaController.mediaObject.vid.width,this.mediaController.mediaObject.vid.height);
		return this1;
	}
	,canvas: null
	,vr: null
	,pv: null
	,__class__: pman_display_media_LocalVideoRenderer
	,__properties__: $extend(pman_display_media_LocalMediaObjectRenderer.prototype.__properties__,{get_ovr:"get_ovr",get_v:"get_v"})
});
var pman_ds__$DataTransfer_DataTransfer_$Impl_$ = {};
$hxClasses["pman.ds._DataTransfer.DataTransfer_Impl_"] = pman_ds__$DataTransfer_DataTransfer_$Impl_$;
pman_ds__$DataTransfer_DataTransfer_$Impl_$.__name__ = ["pman","ds","_DataTransfer","DataTransfer_Impl_"];
pman_ds__$DataTransfer_DataTransfer_$Impl_$.__properties__ = {get_files:"get_files",get_items:"get_items"}
pman_ds__$DataTransfer_DataTransfer_$Impl_$._new = function(dt) {
	var this1 = dt;
	return this1;
};
pman_ds__$DataTransfer_DataTransfer_$Impl_$.get_items = function(this1) {
	if(this1.items != null) {
		var this2 = this1.items;
		return this2;
	} else {
		return null;
	}
};
pman_ds__$DataTransfer_DataTransfer_$Impl_$.get_files = function(this1) {
	if(this1.files != null) {
		var this2 = this1.files;
		return this2;
	} else {
		return null;
	}
};
var pman_ds__$DataTransferItem_DataTransferItem_$Impl_$ = {};
$hxClasses["pman.ds._DataTransferItem.DataTransferItem_Impl_"] = pman_ds__$DataTransferItem_DataTransferItem_$Impl_$;
pman_ds__$DataTransferItem_DataTransferItem_$Impl_$.__name__ = ["pman","ds","_DataTransferItem","DataTransferItem_Impl_"];
pman_ds__$DataTransferItem_DataTransferItem_$Impl_$.__properties__ = {get_mimeType:"get_mimeType",get_type:"get_type",get_kind:"get_kind"}
pman_ds__$DataTransferItem_DataTransferItem_$Impl_$._new = function(ndti) {
	var this1 = ndti;
	return this1;
};
pman_ds__$DataTransferItem_DataTransferItem_$Impl_$.getFile = function(this1) {
	return new tannus_html_fs_WebFile(this1.getAsFile());
};
pman_ds__$DataTransferItem_DataTransferItem_$Impl_$.getEntry = function(this1) {
	return this1.webkitGetAsEntry();
};
pman_ds__$DataTransferItem_DataTransferItem_$Impl_$.getString = function(this1) {
	return this1.getAsString();
};
pman_ds__$DataTransferItem_DataTransferItem_$Impl_$.get_kind = function(this1) {
	return this1.kind;
};
pman_ds__$DataTransferItem_DataTransferItem_$Impl_$.get_type = function(this1) {
	return this1.type;
};
pman_ds__$DataTransferItem_DataTransferItem_$Impl_$.get_mimeType = function(this1) {
	var this2 = this1.type;
	return this2;
};
var pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$ = {};
$hxClasses["pman.ds._DataTransferItemList.DataTransferItemList_Impl_"] = pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$;
pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$.__name__ = ["pman","ds","_DataTransferItemList","DataTransferItemList_Impl_"];
pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$.__properties__ = {get_length:"get_length"}
pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$._new = function(list) {
	var this1 = list;
	return this1;
};
pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$.add = function(this1,data,type) {
	var this2 = this1.add(data,type);
	return this2;
};
pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$.addFile = function(this1,file) {
	var this2 = this1.add(file.file);
	return this2;
};
pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$.remove = function(this1,index) {
	this1.remove(index);
};
pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$.clear = function(this1) {
	this1.clear();
};
pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$.get = function(this1,index) {
	var this2 = this1[index];
	return this2;
};
pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$.iterator = function(this1) {
	var _e = new IntIterator(0,this1.length);
	return (function(mapper) {
		return new tannus_ds__$IteratorTools_FunctionalIterator(_e,mapper);
	})(function(_) {
		var this2 = this1[_];
		return this2;
	});
};
pman_ds__$DataTransferItemList_DataTransferItemList_$Impl_$.get_length = function(this1) {
	return this1.length;
};
var tannus_events_Event = function(variety,bubbls) {
	if(bubbls == null) {
		bubbls = false;
	}
	this.type = variety;
	this.date = new Date().getTime();
	this._bubbles = bubbls;
	this._defaultPrevented = false;
	this._cancelled = false;
	this._propogationStopped = false;
	this.onCancelled = new tannus_io_VoidSignal();
	this.onDefaultPrevented = new tannus_io_VoidSignal();
	this.onPropogationStopped = new tannus_io_VoidSignal();
	this._onCopy = new tannus_io_Signal();
};
$hxClasses["tannus.events.Event"] = tannus_events_Event;
tannus_events_Event.__name__ = ["tannus","events","Event"];
tannus_events_Event.prototype = {
	clone: function(deep) {
		if(deep == null) {
			deep = false;
		}
		var c = Reflect.copy(this);
		c.onCancelled = deep ? this.onCancelled.clone() : new tannus_io_VoidSignal();
		c.onDefaultPrevented = deep ? this.onDefaultPrevented.clone() : new tannus_io_VoidSignal();
		c.onPropogationStopped = deep ? this.onPropogationStopped.clone() : new tannus_io_VoidSignal();
		this._onCopy.broadcast(c);
		return c;
	}
	,cancel: function() {
		this._cancelled = true;
		this.onCancelled.call();
	}
	,preventDefault: function() {
		this._defaultPrevented = true;
		this.onDefaultPrevented.call();
	}
	,stopPropogation: function() {
		this._propogationStopped = true;
		this.onPropogationStopped.call();
	}
	,getModifiers: function() {
		return [];
	}
	,get_bubbles: function() {
		return this._bubbles;
	}
	,get_cancelled: function() {
		return this._cancelled;
	}
	,get_defaultPrevented: function() {
		return this._defaultPrevented;
	}
	,get_propogationStopped: function() {
		return this._propogationStopped;
	}
	,type: null
	,date: null
	,_bubbles: null
	,_defaultPrevented: null
	,_cancelled: null
	,_propogationStopped: null
	,onDefaultPrevented: null
	,onPropogationStopped: null
	,onCancelled: null
	,_onCopy: null
	,__class__: tannus_events_Event
	,__properties__: {get_propogationStopped:"get_propogationStopped",get_defaultPrevented:"get_defaultPrevented",get_cancelled:"get_cancelled",get_bubbles:"get_bubbles"}
};
var pman_events_DragDropEvent = function(nativeEvent) {
	var _gthis = this;
	tannus_events_Event.call(this,nativeEvent.type);
	this.e = nativeEvent;
	this.onDefaultPrevented.once(($_=this.e,$bind($_,$_.preventDefault)));
	this.onPropogationStopped.once(($_=this.e,$bind($_,$_.stopImmediatePropagation)));
	this.onCancelled.once(function() {
		_gthis.preventDefault();
		_gthis.stopPropogation();
	});
};
$hxClasses["pman.events.DragDropEvent"] = pman_events_DragDropEvent;
pman_events_DragDropEvent.__name__ = ["pman","events","DragDropEvent"];
pman_events_DragDropEvent.fromJsEvent = function(event) {
	return new pman_events_DragDropEvent(event);
};
pman_events_DragDropEvent.fromJqEvent = function(event) {
	var tmp;
	var orig;
	if(event == null) {
		orig = null;
	} else {
		var orig1;
		if(event.__properties__) {
			tmp = event.__properties__["get_" + "originalEvent"];
			orig1 = tmp;
		} else {
			orig1 = false;
		}
		if(orig1) {
			orig = event[tmp]();
		} else {
			orig = event["originalEvent"];
		}
	}
	var orig2 = orig;
	if(orig2 != null && js_Boot.__instanceof(orig2,DragEvent)) {
		return pman_events_DragDropEvent.fromJsEvent(orig2);
	} else {
		throw new js__$Boot_HaxeError("Error: Invalid event");
	}
};
pman_events_DragDropEvent.__super__ = tannus_events_Event;
pman_events_DragDropEvent.prototype = $extend(tannus_events_Event.prototype,{
	get_dataTransfer: function() {
		var this1 = this.e.dataTransfer;
		return this1;
	}
	,e: null
	,__class__: pman_events_DragDropEvent
	,__properties__: $extend(tannus_events_Event.prototype.__properties__,{get_dataTransfer:"get_dataTransfer"})
});
var pman_media_Media = function() {
	var _gthis = this;
	this._ready = { value : false, signal : new tannus_io_VoidSignal()};
	this._ready.signal.once(function() {
		_gthis._ready.value = true;
	});
};
$hxClasses["pman.media.Media"] = pman_media_Media;
pman_media_Media.__name__ = ["pman","media","Media"];
pman_media_Media.prototype = {
	getName: function() {
		var _g = this.src;
		switch(_g[1]) {
		case 0:
			var path = _g[2];
			return path.get_name();
		case 1:
			var url = _g[2];
			return url;
		}
	}
	,getPlaybackDriver: function() {
		throw new js__$Boot_HaxeError("Not Implemented");
	}
	,getRenderer: function(controller) {
		throw new js__$Boot_HaxeError("Not Implemented");
	}
	,dispose: function() {
		this._ready.signal.clear();
		this._ready = null;
		this.src = null;
		this.provider = null;
	}
	,onReady: function(callback) {
		if(this._ready.value) {
			var this1 = window;
			this1.requestAnimationFrame(callback);
		} else {
			this._ready.signal.once(function() {
				var this2 = window;
				this2.requestAnimationFrame(callback);
			});
		}
	}
	,isReady: function() {
		return this._ready.value;
	}
	,declareReady: function() {
		this._ready.signal.call();
	}
	,src: null
	,provider: null
	,_ready: null
	,__class__: pman_media_Media
};
var pman_media_HttpAddressMedia = function(url) {
	pman_media_Media.call(this);
	this.src = pman_media_MediaSource.MSUrl(url);
	this.url = url;
	this.determineMimeType();
};
$hxClasses["pman.media.HttpAddressMedia"] = pman_media_HttpAddressMedia;
pman_media_HttpAddressMedia.__name__ = ["pman","media","HttpAddressMedia"];
pman_media_HttpAddressMedia.__super__ = pman_media_Media;
pman_media_HttpAddressMedia.prototype = $extend(pman_media_Media.prototype,{
	getPlaybackDriver: function() {
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			_gthis.onReady(function() {
				var this1 = _gthis.mediaMime;
				if((tannus_ds_StringUtils.has(this1,"/") ? this1.substring(0,this1.indexOf("/")) : this1) == "video") {
					var tmp = _gthis.buildVideoObject();
					accept(new pman_media_LocalVideoPlaybackDriver(tmp));
				} else {
					reject(pman_media_MediaError.EInvalidFormat);
				}
			});
		},null);
	}
	,getRenderer: function(controller) {
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			_gthis.onReady(function() {
				accept(new pman_display_media_LocalVideoRenderer(_gthis,controller));
			});
		},null);
	}
	,buildVideoObject: function() {
		var video = new gryffin_display_Video();
		video.load(this.url);
		return video;
	}
	,determineMimeType: function() {
		var _gthis = this;
		var r = new tannus_http_WebRequest();
		r.req.open("HEAD",this.url);
		r.onres(function() {
			var all = r.getAllResponseHeaders();
			var this1 = tannus_ds_StringUtils.before(__map_reserved["content-type"] != null ? all.getReserved("content-type") : all.h["content-type"],";");
			_gthis.mediaMime = this1;
			console.log(_gthis.mediaMime);
			_gthis._ready.signal.call();
		});
		r.req.send(null);
	}
	,url: null
	,mediaMime: null
	,__class__: pman_media_HttpAddressMedia
});
var pman_media_MediaProvider = function() {
};
$hxClasses["pman.media.MediaProvider"] = pman_media_MediaProvider;
pman_media_MediaProvider.__name__ = ["pman","media","MediaProvider"];
pman_media_MediaProvider.prototype = {
	getName: function() {
		var _g = this.src;
		switch(_g[1]) {
		case 0:
			var path = _g[2];
			return path.get_name();
		case 1:
			var url = _g[2];
			return url;
		}
	}
	,getURI: function() {
		var _g = this.src;
		switch(_g[1]) {
		case 0:
			var path = _g[2];
			return "file://" + path.s;
		case 1:
			var url = _g[2];
			return url.toString();
		}
	}
	,getMedia: function() {
		throw new js__$Boot_HaxeError("Not Implemented");
	}
	,hxSerialize: function(s) {
		s.serialize(this.src);
	}
	,hxUnserialize: function(u) {
		this.src = u.unserialize();
	}
	,src: null
	,__class__: pman_media_MediaProvider
};
var pman_media_HttpAddressMediaProvider = function(url) {
	pman_media_MediaProvider.call(this);
	this.src = pman_media_MediaSource.MSUrl(url);
	this.url = url;
};
$hxClasses["pman.media.HttpAddressMediaProvider"] = pman_media_HttpAddressMediaProvider;
pman_media_HttpAddressMediaProvider.__name__ = ["pman","media","HttpAddressMediaProvider"];
pman_media_HttpAddressMediaProvider.__super__ = pman_media_MediaProvider;
pman_media_HttpAddressMediaProvider.prototype = $extend(pman_media_MediaProvider.prototype,{
	getMedia: function() {
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var this1 = window;
			this1.requestAnimationFrame(function() {
				var media = new pman_media_HttpAddressMedia(_gthis.url);
				media.provider = _gthis;
				accept(media);
			});
		},null);
	}
	,url: null
	,__class__: pman_media_HttpAddressMediaProvider
});
var pman_media_PlaybackDriver = function() {
};
$hxClasses["pman.media.PlaybackDriver"] = pman_media_PlaybackDriver;
pman_media_PlaybackDriver.__name__ = ["pman","media","PlaybackDriver"];
pman_media_PlaybackDriver.prototype = {
	attach: function(player) {
		this.player = player;
	}
	,execute: function(cmd) {
		switch(cmd[1]) {
		case 0:
			this.play();
			break;
		case 1:
			this.pause();
			break;
		case 2:
			this.togglePlayback();
			break;
		case 3:
			this.stop();
			break;
		case 4:
			var rel = cmd[3];
			var time = cmd[2];
			if(rel == null || !rel) {
				this.setCurrentTime(time);
			} else {
				this.setCurrentTime(this.getCurrentTime() + time);
			}
			break;
		case 5:
			var rel1 = cmd[3];
			var speed = cmd[2];
			if(rel1 == null || !rel1) {
				this.setPlaybackRate(speed);
			} else {
				this.setPlaybackRate(this.getPlaybackRate() + speed);
			}
			break;
		case 6:
			var rel2 = cmd[3];
			var volume = cmd[2];
			if(rel2 == null || !rel2) {
				this.setVolume(volume);
			} else {
				this.setVolume(this.getVolume() + volume);
			}
			break;
		}
	}
	,dispose: function() {
		return;
	}
	,hasMediaObject: function() {
		return false;
	}
	,getMediaObject: function() {
		return null;
	}
	,play: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,pause: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,stop: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,togglePlayback: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getSource: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getDuration: function() {
		return tannus_media_CDur.fromSecondsI(Math.floor(this.getDurationTime()));
	}
	,getDurationTime: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getCurrentTime: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getPlaybackRate: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getPaused: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getMuted: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getEnded: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getVolume: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,setSource: function(src) {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,setCurrentTime: function(time) {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,setPlaybackRate: function(rate) {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,setVolume: function(vol) {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,setMuted: function(v) {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getLoadSignal: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getEndedSignal: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getCanPlaySignal: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getPlaySignal: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getPauseSignal: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getLoadedMetadataSignal: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getErrorSignal: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getProgressSignal: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getDurationChangeSignal: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getVolumeChangeSignal: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,getRateChangeSignal: function() {
		throw new js__$Boot_HaxeError("Error: Not implemented");
	}
	,player: null
	,__class__: pman_media_PlaybackDriver
};
var pman_media_LocalMediaObjectPlaybackDriver = function(media) {
	pman_media_PlaybackDriver.call(this);
	this.mediaObject = media;
};
$hxClasses["pman.media.LocalMediaObjectPlaybackDriver"] = pman_media_LocalMediaObjectPlaybackDriver;
pman_media_LocalMediaObjectPlaybackDriver.__name__ = ["pman","media","LocalMediaObjectPlaybackDriver"];
pman_media_LocalMediaObjectPlaybackDriver.__super__ = pman_media_PlaybackDriver;
pman_media_LocalMediaObjectPlaybackDriver.prototype = $extend(pman_media_PlaybackDriver.prototype,{
	play: function() {
		this.mediaObject.play();
	}
	,pause: function() {
		this.mediaObject.pause();
	}
	,togglePlayback: function() {
		(this.mediaObject.get_paused() ? $bind(this,this.play) : $bind(this,this.pause))();
	}
	,stop: function() {
		this.mediaObject.destroy();
	}
	,getSource: function() {
		return this.mediaObject.get_src();
	}
	,getDurationTime: function() {
		return this.mediaObject.get_durationTime();
	}
	,getCurrentTime: function() {
		return this.mediaObject.get_currentTime();
	}
	,getPlaybackRate: function() {
		return this.mediaObject.get_playbackRate();
	}
	,getPaused: function() {
		return this.mediaObject.get_paused();
	}
	,getMuted: function() {
		return this.mediaObject.get_muted();
	}
	,getVolume: function() {
		return this.mediaObject.get_volume();
	}
	,getEnded: function() {
		return this.mediaObject.get_ended();
	}
	,setSource: function(v) {
		this.mediaObject.set_src(v);
	}
	,setCurrentTime: function(v) {
		this.mediaObject.set_currentTime(v);
	}
	,setPlaybackRate: function(v) {
		this.mediaObject.set_playbackRate(v);
	}
	,setVolume: function(v) {
		this.mediaObject.set_volume(v);
	}
	,setMuted: function(v) {
		this.mediaObject.set_muted(v);
	}
	,getLoadSignal: function() {
		return this.mediaObject.onload;
	}
	,getEndedSignal: function() {
		return this.mediaObject.onended;
	}
	,getCanPlaySignal: function() {
		return this.mediaObject.oncanplay;
	}
	,getPlaySignal: function() {
		return this.mediaObject.onplay;
	}
	,getPauseSignal: function() {
		return this.mediaObject.onpause;
	}
	,getLoadedMetadataSignal: function() {
		return this.mediaObject.onloadedmetadata;
	}
	,getErrorSignal: function() {
		return this.mediaObject.onerror;
	}
	,getProgressSignal: function() {
		return this.mediaObject.onprogress;
	}
	,getDurationChangeSignal: function() {
		return this.mediaObject.ondurationchange;
	}
	,getVolumeChangeSignal: function() {
		return this.mediaObject.onvolumechange;
	}
	,getRateChangeSignal: function() {
		return this.mediaObject.onratechange;
	}
	,dispose: function() {
		this.mediaObject.destroy();
	}
	,hasMediaObject: function() {
		return true;
	}
	,getMediaObject: function() {
		return this.mediaObject;
	}
	,get_m: function() {
		return this.mediaObject;
	}
	,mediaObject: null
	,__class__: pman_media_LocalMediaObjectPlaybackDriver
	,__properties__: {get_m:"get_m"}
});
var pman_media_LocalAudioPlaybackDriver = function(audio) {
	pman_media_LocalMediaObjectPlaybackDriver.call(this,audio);
};
$hxClasses["pman.media.LocalAudioPlaybackDriver"] = pman_media_LocalAudioPlaybackDriver;
pman_media_LocalAudioPlaybackDriver.__name__ = ["pman","media","LocalAudioPlaybackDriver"];
pman_media_LocalAudioPlaybackDriver.__super__ = pman_media_LocalMediaObjectPlaybackDriver;
pman_media_LocalAudioPlaybackDriver.prototype = $extend(pman_media_LocalMediaObjectPlaybackDriver.prototype,{
	get_audio: function() {
		return js_Boot.__cast(this.mediaObject , gryffin_audio_Audio);
	}
	,__class__: pman_media_LocalAudioPlaybackDriver
	,__properties__: $extend(pman_media_LocalMediaObjectPlaybackDriver.prototype.__properties__,{get_audio:"get_audio"})
});
var pman_media_LocalFileMedia = function(file) {
	pman_media_Media.call(this);
	this.src = pman_media_MediaSource.MSLocalPath(file._path);
	this.file = file;
	this._ready.signal.call();
};
$hxClasses["pman.media.LocalFileMedia"] = pman_media_LocalFileMedia;
pman_media_LocalFileMedia.__name__ = ["pman","media","LocalFileMedia"];
pman_media_LocalFileMedia.__super__ = pman_media_Media;
pman_media_LocalFileMedia.prototype = $extend(pman_media_Media.prototype,{
	dispose: function() {
		pman_media_Media.prototype.dispose.call(this);
		this.file = null;
	}
	,getPlaybackDriver: function() {
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			_gthis.onReady(function() {
				if(_gthis.isVideoFile()) {
					var tmp = _gthis.buildVideoObject();
					accept(new pman_media_LocalVideoPlaybackDriver(tmp));
				} else if(_gthis.isAudioFile()) {
					var tmp1 = _gthis.buildAudioObject();
					accept(new pman_media_LocalAudioPlaybackDriver(tmp1));
				} else {
					reject(pman_media_MediaError.EInvalidFormat);
				}
			});
		},null);
	}
	,getRenderer: function(controller) {
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			_gthis.onReady(function() {
				if(_gthis.isVideoFile()) {
					accept(new pman_display_media_LocalVideoRenderer(_gthis,controller));
				} else if(_gthis.isAudioFile()) {
					accept(new pman_display_media_LocalAudioRenderer(_gthis,controller));
				} else {
					reject(pman_media_MediaError.EInvalidFormat);
				}
			});
		},null);
	}
	,buildVideoObject: function() {
		var video = new gryffin_display_Video();
		this.initializeMediaObject(video);
		return video;
	}
	,buildAudioObject: function() {
		var audio = new gryffin_audio_Audio();
		this.initializeMediaObject(audio);
		return audio;
	}
	,initializeMediaObject: function(media) {
		media.set_src("file://" + this.file._path.s);
	}
	,isVideoFile: function() {
		return Lambda.has(["mp4","webm"],this.file._path.get_extension());
	}
	,isAudioFile: function() {
		return Lambda.has(["mp3","wav"],this.file._path.get_extension());
	}
	,get_extensionName: function() {
		return this.file._path.get_extension();
	}
	,file: null
	,__class__: pman_media_LocalFileMedia
	,__properties__: {get_extensionName:"get_extensionName"}
});
var pman_media_LocalFileMediaProvider = function(file) {
	pman_media_MediaProvider.call(this);
	this.src = pman_media_MediaSource.MSLocalPath(file._path);
	this.file = file;
};
$hxClasses["pman.media.LocalFileMediaProvider"] = pman_media_LocalFileMediaProvider;
pman_media_LocalFileMediaProvider.__name__ = ["pman","media","LocalFileMediaProvider"];
pman_media_LocalFileMediaProvider.__super__ = pman_media_MediaProvider;
pman_media_LocalFileMediaProvider.prototype = $extend(pman_media_MediaProvider.prototype,{
	getMedia: function() {
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var this1 = window;
			this1.requestAnimationFrame(function() {
				var media = new pman_media_LocalFileMedia(_gthis.file);
				media.provider = _gthis;
				accept(media);
			});
		},null);
	}
	,hxSerialize: function(s) {
		pman_media_MediaProvider.prototype.hxSerialize.call(this,s);
		s.serialize(this.file._path.s);
	}
	,hxUnserialize: function(u) {
		pman_media_MediaProvider.prototype.hxUnserialize.call(this,u);
		var this1 = new tannus_sys_CPath(u.unserialize());
		var this2 = new tannus_sys_CFile(this1);
		this.file = this2;
	}
	,file: null
	,__class__: pman_media_LocalFileMediaProvider
});
var pman_media_LocalVideoPlaybackDriver = function(video) {
	pman_media_LocalMediaObjectPlaybackDriver.call(this,video);
};
$hxClasses["pman.media.LocalVideoPlaybackDriver"] = pman_media_LocalVideoPlaybackDriver;
pman_media_LocalVideoPlaybackDriver.__name__ = ["pman","media","LocalVideoPlaybackDriver"];
pman_media_LocalVideoPlaybackDriver.__super__ = pman_media_LocalMediaObjectPlaybackDriver;
pman_media_LocalVideoPlaybackDriver.prototype = $extend(pman_media_LocalMediaObjectPlaybackDriver.prototype,{
	get_video: function() {
		return js_Boot.__cast(this.mediaObject , gryffin_display_Video);
	}
	,__class__: pman_media_LocalVideoPlaybackDriver
	,__properties__: $extend(pman_media_LocalMediaObjectPlaybackDriver.prototype.__properties__,{get_video:"get_video"})
});
var pman_media_MediaError = $hxClasses["pman.media.MediaError"] = { __ename__ : ["pman","media","MediaError"], __constructs__ : ["ENotFound","EInvalidFormat"] };
pman_media_MediaError.ENotFound = ["ENotFound",0];
pman_media_MediaError.ENotFound.toString = $estr;
pman_media_MediaError.ENotFound.__enum__ = pman_media_MediaError;
pman_media_MediaError.EInvalidFormat = ["EInvalidFormat",1];
pman_media_MediaError.EInvalidFormat.toString = $estr;
pman_media_MediaError.EInvalidFormat.__enum__ = pman_media_MediaError;
var pman_media_MediaSource = $hxClasses["pman.media.MediaSource"] = { __ename__ : ["pman","media","MediaSource"], __constructs__ : ["MSLocalPath","MSUrl"] };
pman_media_MediaSource.MSLocalPath = function(path) { var $x = ["MSLocalPath",0,path]; $x.__enum__ = pman_media_MediaSource; $x.toString = $estr; return $x; };
pman_media_MediaSource.MSUrl = function(url) { var $x = ["MSUrl",1,url]; $x.__enum__ = pman_media_MediaSource; $x.toString = $estr; return $x; };
var pman_media_MediaTools = function() { };
$hxClasses["pman.media.MediaTools"] = pman_media_MediaTools;
pman_media_MediaTools.__name__ = ["pman","media","MediaTools"];
pman_media_MediaTools.loadTrackMediaState = function(track,callback) {
	var rethrow = function(error) {
		callback(error);
		return;
	};
	track.provider.getMedia().unless(rethrow).then(function(media) {
		track.media = media;
		media.getPlaybackDriver().unless(rethrow).then(function(driver) {
			track.driver = driver;
			media.getRenderer(driver).unless(rethrow).then(function(renderer) {
				track.renderer = renderer;
				callback(null);
			});
		});
	});
};
pman_media_MediaTools.jscbWrap = function(promise,handler) {
	promise.then(function(result) {
		handler(null,result);
		return;
	});
	promise.unless(function(error) {
		handler(error,null);
		return;
	});
};
pman_media_MediaTools.buildContextInfoFromProvider = function(provider) {
	return new tannus_ds_Promise(function(accept,reject) {
		var mediaPromise = provider.getMedia();
		mediaPromise.then(function(media) {
			var driverPromise = media.getPlaybackDriver();
			driverPromise.then(function(driver) {
				media.getRenderer(driver).then(function(renderer) {
					accept(new pman_core_MediaContextInfo(provider,media,driver,renderer));
				}).unless(function(error) {
					reject(error);
				});
			});
			driverPromise.unless(function(error1) {
				reject(error1);
			});
		});
		mediaPromise.unless(function(error2) {
			reject(error2);
		});
	},null);
};
pman_media_MediaTools.buildContextInfoFromMedia = function(media) {
	return new tannus_ds_Promise(function(accept,reject) {
		var driverPromise = media.getPlaybackDriver();
		driverPromise.then(function(driver) {
			var viewPromise = media.getRenderer(driver);
			viewPromise.then(function(renderer) {
				var tmp = new pman_core_MediaContextInfo(media.provider,media,driver,renderer);
				accept(tmp);
			});
			viewPromise.unless(function(error) {
				reject(error);
			});
		});
		driverPromise.unless(function(error1) {
			reject(error1);
		});
	},null);
};
pman_media_MediaTools.inf = function(p,m,d,v) {
	return new pman_core_MediaContextInfo(p,m,d,v);
};
var pman_media_PlaybackCommand = $hxClasses["pman.media.PlaybackCommand"] = { __ename__ : ["pman","media","PlaybackCommand"], __constructs__ : ["PCPlay","PCPause","PCTogglePlayback","PCStop","PCTime","PCSpeed","PCVolume"] };
pman_media_PlaybackCommand.PCPlay = ["PCPlay",0];
pman_media_PlaybackCommand.PCPlay.toString = $estr;
pman_media_PlaybackCommand.PCPlay.__enum__ = pman_media_PlaybackCommand;
pman_media_PlaybackCommand.PCPause = ["PCPause",1];
pman_media_PlaybackCommand.PCPause.toString = $estr;
pman_media_PlaybackCommand.PCPause.__enum__ = pman_media_PlaybackCommand;
pman_media_PlaybackCommand.PCTogglePlayback = ["PCTogglePlayback",2];
pman_media_PlaybackCommand.PCTogglePlayback.toString = $estr;
pman_media_PlaybackCommand.PCTogglePlayback.__enum__ = pman_media_PlaybackCommand;
pman_media_PlaybackCommand.PCStop = ["PCStop",3];
pman_media_PlaybackCommand.PCStop.toString = $estr;
pman_media_PlaybackCommand.PCStop.__enum__ = pman_media_PlaybackCommand;
pman_media_PlaybackCommand.PCTime = function(time,relative) { var $x = ["PCTime",4,time,relative]; $x.__enum__ = pman_media_PlaybackCommand; $x.toString = $estr; return $x; };
pman_media_PlaybackCommand.PCSpeed = function(speed,relative) { var $x = ["PCSpeed",5,speed,relative]; $x.__enum__ = pman_media_PlaybackCommand; $x.toString = $estr; return $x; };
pman_media_PlaybackCommand.PCVolume = function(volume,relative) { var $x = ["PCVolume",6,volume,relative]; $x.__enum__ = pman_media_PlaybackCommand; $x.toString = $estr; return $x; };
var pman_media__$Playlist_Playlist_$Impl_$ = {};
$hxClasses["pman.media._Playlist.Playlist_Impl_"] = pman_media__$Playlist_Playlist_$Impl_$;
pman_media__$Playlist_Playlist_$Impl_$.__name__ = ["pman","media","_Playlist","Playlist_Impl_"];
pman_media__$Playlist_Playlist_$Impl_$._new = function(tracks) {
	var this1 = new pman_media_PlaylistClass(tracks);
	return this1;
};
pman_media__$Playlist_Playlist_$Impl_$.get = function(this1,index) {
	return this1.l[index];
};
pman_media__$Playlist_Playlist_$Impl_$.fromJSON = function(dataStrings) {
	return pman_media_PlaylistClass.fromJSON(dataStrings);
};
var pman_media_PlaylistChange = $hxClasses["pman.media.PlaylistChange"] = { __ename__ : ["pman","media","PlaylistChange"], __constructs__ : ["PCInsert","PCPop","PCPush","PCRemove","PCReverse","PCClear","PCShift","PCSort","PCSplice","PCMove"] };
pman_media_PlaylistChange.PCInsert = function(pos,track) { var $x = ["PCInsert",0,pos,track]; $x.__enum__ = pman_media_PlaylistChange; $x.toString = $estr; return $x; };
pman_media_PlaylistChange.PCPop = function(track) { var $x = ["PCPop",1,track]; $x.__enum__ = pman_media_PlaylistChange; $x.toString = $estr; return $x; };
pman_media_PlaylistChange.PCPush = function(track) { var $x = ["PCPush",2,track]; $x.__enum__ = pman_media_PlaylistChange; $x.toString = $estr; return $x; };
pman_media_PlaylistChange.PCRemove = function(track) { var $x = ["PCRemove",3,track]; $x.__enum__ = pman_media_PlaylistChange; $x.toString = $estr; return $x; };
pman_media_PlaylistChange.PCReverse = ["PCReverse",4];
pman_media_PlaylistChange.PCReverse.toString = $estr;
pman_media_PlaylistChange.PCReverse.__enum__ = pman_media_PlaylistChange;
pman_media_PlaylistChange.PCClear = ["PCClear",5];
pman_media_PlaylistChange.PCClear.toString = $estr;
pman_media_PlaylistChange.PCClear.__enum__ = pman_media_PlaylistChange;
pman_media_PlaylistChange.PCShift = function(track) { var $x = ["PCShift",6,track]; $x.__enum__ = pman_media_PlaylistChange; $x.toString = $estr; return $x; };
pman_media_PlaylistChange.PCSort = function(sorter) { var $x = ["PCSort",7,sorter]; $x.__enum__ = pman_media_PlaylistChange; $x.toString = $estr; return $x; };
pman_media_PlaylistChange.PCSplice = function(pos,len) { var $x = ["PCSplice",8,pos,len]; $x.__enum__ = pman_media_PlaylistChange; $x.toString = $estr; return $x; };
pman_media_PlaylistChange.PCMove = function(track,oldPos,newPos) { var $x = ["PCMove",9,track,oldPos,newPos]; $x.__enum__ = pman_media_PlaylistChange; $x.toString = $estr; return $x; };
var pman_media_PlaylistClass = function(a) {
	this.l = a != null ? a.slice() : [];
	this.changeEvent = new tannus_io_Signal();
};
$hxClasses["pman.media.PlaylistClass"] = pman_media_PlaylistClass;
pman_media_PlaylistClass.__name__ = ["pman","media","PlaylistClass"];
pman_media_PlaylistClass.fromJSON = function(dataStrings) {
	var tracks = [];
	var _g = 0;
	while(_g < dataStrings.length) {
		var ds = dataStrings[_g];
		++_g;
		var track = haxe_Unserializer.run(ds);
		tracks.push(track);
	}
	return new pman_media_PlaylistClass(tracks);
};
pman_media_PlaylistClass.prototype = {
	get: function(index) {
		return this.l[index];
	}
	,concat: function(other) {
		var this1 = new pman_media_PlaylistClass(this.l.concat(other.l));
		return this1;
	}
	,copy: function() {
		var this1 = new pman_media_PlaylistClass(this.l.slice());
		return this1;
	}
	,clear: function() {
		this.l = [];
		this.changeEvent.broadcast(pman_media_PlaylistChange.PCClear);
	}
	,filter: function(f) {
		var this1 = new pman_media_PlaylistClass(this.l.filter(f));
		return this1;
	}
	,indexOf: function(track) {
		return this.l.indexOf(track);
	}
	,insert: function(pos,track,report) {
		if(report == null) {
			report = true;
		}
		this.l.splice(pos,0,track);
		if(report) {
			this.changeEvent.broadcast(pman_media_PlaylistChange.PCInsert(pos,track));
		}
	}
	,move: function(track,pos,report) {
		if(report == null) {
			report = true;
		}
		if(Lambda.has(this.l,track)) {
			var oldPos = this.indexOf(track);
			this.remove(track,false);
			var newPos = pos();
			this.insert(newPos,track,false);
			if(report) {
				this.changeEvent.broadcast(pman_media_PlaylistChange.PCMove(track,oldPos,newPos));
			}
		}
	}
	,iterator: function() {
		return HxOverrides.iter(this.l);
	}
	,lastIndexOf: function(track) {
		return this.l.lastIndexOf(track);
	}
	,map: function(f) {
		return this.l.map(f);
	}
	,pop: function() {
		var t = this.l.pop();
		if(t != null) {
			this.changeEvent.broadcast(pman_media_PlaylistChange.PCPop(t));
		}
		return t;
	}
	,push: function(track) {
		var n = this.l.push(track);
		this.changeEvent.broadcast(pman_media_PlaylistChange.PCPush(track));
		return n;
	}
	,remove: function(track,report) {
		if(report == null) {
			report = true;
		}
		var status = HxOverrides.remove(this.l,track);
		if(status && report) {
			this.changeEvent.broadcast(pman_media_PlaylistChange.PCRemove(track));
		}
		return status;
	}
	,reverse: function() {
		this.l.reverse();
		this.changeEvent.broadcast(pman_media_PlaylistChange.PCReverse);
	}
	,shift: function() {
		var t = this.l.shift();
		if(t != null) {
			this.changeEvent.broadcast(pman_media_PlaylistChange.PCShift(t));
		}
		return t;
	}
	,slice: function(pos,end) {
		var this1 = new pman_media_PlaylistClass(this.l.slice(pos,end));
		return this1;
	}
	,sort: function(f) {
		this.l.sort(f);
		this.changeEvent.broadcast(pman_media_PlaylistChange.PCSort(f));
	}
	,splice: function(pos,len) {
		var sub = this.l.splice(pos,len);
		var this1 = new pman_media_PlaylistClass(sub);
		return this1;
	}
	,toString: function() {
		return "Playlist";
	}
	,change: function(c) {
		this.changeEvent.broadcast(c);
	}
	,hxSerialize: function(s) {
		return;
	}
	,hxUnserialize: function(u) {
		return;
	}
	,toJSON: function() {
		return this.l.map(function(_) {
			return haxe_Serializer.run(_);
		});
	}
	,get_length: function() {
		return this.l.length;
	}
	,changeEvent: null
	,l: null
	,__class__: pman_media_PlaylistClass
	,__properties__: {get_length:"get_length"}
};
var pman_media_Track = function(p) {
	this.provider = p;
	this.media = null;
	this.driver = null;
	this.renderer = null;
};
$hxClasses["pman.media.Track"] = pman_media_Track;
pman_media_Track.__name__ = ["pman","media","Track"];
pman_media_Track.fromFile = function(file) {
	return new pman_media_Track(new pman_media_LocalFileMediaProvider(file));
};
pman_media_Track.fromUrl = function(url) {
	return new pman_media_Track(new pman_media_HttpAddressMediaProvider(url));
};
pman_media_Track.prototype = {
	getName: function() {
		return this.provider.getName();
	}
	,nullify: function() {
		this.media = null;
		this.driver = null;
		this.renderer = null;
	}
	,deallocate: function() {
		if(this.media != null) {
			this.media.dispose();
		}
		if(this.driver != null) {
			this.driver.dispose();
		}
		if(this.renderer != null) {
			this.renderer.dispose();
		}
	}
	,mount: function(callback) {
		var _gthis = this;
		pman_media_MediaTools.loadTrackMediaState(this,function(error) {
			if(error != null) {
				_gthis.deallocate();
				_gthis.media = null;
				_gthis.driver = null;
				_gthis.renderer = null;
			}
			callback(error);
		});
	}
	,dismount: function() {
		this.deallocate();
		this.media = null;
		this.driver = null;
		this.renderer = null;
	}
	,isMounted: function() {
		if(this.media != null && this.driver != null) {
			return this.renderer != null;
		} else {
			return false;
		}
	}
	,hxSerialize: function(s) {
		s.serialize(this.provider);
	}
	,hxUnserialize: function(u) {
		this.provider = u.unserialize();
	}
	,get_title: function() {
		return this.provider.getName();
	}
	,provider: null
	,media: null
	,driver: null
	,renderer: null
	,__class__: pman_media_Track
	,__properties__: {get_title:"get_title"}
};
var pman_tools_chromecast_Browser = function(browser) {
	this.b = browser;
	this.deviceFound = new tannus_io_Signal();
	this.__init();
};
$hxClasses["pman.tools.chromecast.Browser"] = pman_tools_chromecast_Browser;
pman_tools_chromecast_Browser.__name__ = ["pman","tools","chromecast","Browser"];
pman_tools_chromecast_Browser.create = function() {
	return new pman_tools_chromecast_Browser(new pman_tools_chromecast_ExtBrowser());
};
pman_tools_chromecast_Browser.prototype = {
	__init: function() {
		var _gthis = this;
		var device_on = function(extDevice) {
			var device = new pman_tools_chromecast_Device(extDevice);
			_gthis.deviceFound.broadcast(device);
		};
		this.b.on("deviceOn",device_on);
	}
	,destroy: function() {
		this.b.destroy();
		this.b = null;
	}
	,update: function() {
		this.b.update();
	}
	,deviceFound: null
	,b: null
	,__class__: pman_tools_chromecast_Browser
};
var pman_tools_chromecast_Device = function(device) {
	this.d = device;
	this.__init();
};
$hxClasses["pman.tools.chromecast.Device"] = pman_tools_chromecast_Device;
pman_tools_chromecast_Device.__name__ = ["pman","tools","chromecast","Device"];
pman_tools_chromecast_Device.prototype = {
	__init: function() {
		var _gthis = this;
		var self = tannus_ds_CObj.create(this);
		var this1 = function() {
			return _gthis.d.host;
		};
		var o = self.o;
		var o1 = self.o;
		var tmp;
		var func;
		if(o1 == null) {
			func = null;
		} else {
			var func1;
			if(o1.__properties__) {
				tmp = o1.__properties__["get_" + "__defineGetter__"];
				func1 = tmp;
			} else {
				func1 = false;
			}
			if(func1) {
				func = o1[tmp]();
			} else {
				func = o1["__defineGetter__"];
			}
		}
		func.apply(o,["host",this1]);
		var this2 = function() {
			return _gthis.d.config.name;
		};
		var o2 = self.o;
		var o3 = self.o;
		var tmp1;
		var func2;
		if(o3 == null) {
			func2 = null;
		} else {
			var func3;
			if(o3.__properties__) {
				tmp1 = o3.__properties__["get_" + "__defineGetter__"];
				func3 = tmp1;
			} else {
				func3 = false;
			}
			if(func3) {
				func2 = o3[tmp1]();
			} else {
				func2 = o3["__defineGetter__"];
			}
		}
		func2.apply(o2,["name",this2]);
	}
	,play: function(media,seconds,callback) {
		this.d.play(media,seconds,callback);
	}
	,getStatus: function(callback) {
		this.d.getStatus(callback);
	}
	,seekTo: function(newCurrentTime,callback) {
		this.d.seekTo(newCurrentTime,callback);
	}
	,seek: function(time,callback) {
		this.d.seek(time,callback);
	}
	,pause: function(f) {
		this.d.pause(f);
	}
	,unpause: function(f) {
		this.d.unpause(f);
	}
	,setVolume: function(volume,cb) {
		this.d.setVolume(volume,cb);
	}
	,stop: function(cb) {
		this.d.stop(cb);
	}
	,setVolumeMuted: function(muted,cb) {
		this.d.setVolumeMuted(muted,cb);
	}
	,close: function(cb) {
		this.d.close(cb);
	}
	,get_host: function() {
		return this.d.host;
	}
	,get_name: function() {
		return this.d.config.name;
	}
	,d: null
	,__class__: pman_tools_chromecast_Device
	,__properties__: {get_name:"get_name",get_host:"get_host"}
};
var pman_tools_chromecast_ExtBrowser = require("chromecast-api").Browser;
var pman_ui_DragDropManager = function(main) {
	this.app = main;
};
$hxClasses["pman.ui.DragDropManager"] = pman_ui_DragDropManager;
pman_ui_DragDropManager.__name__ = ["pman","ui","DragDropManager"];
pman_ui_DragDropManager.prototype = {
	init: function() {
		this.bind_events();
	}
	,bind_events: function() {
		var events = ["dragenter","dragleave","dragover","dragend","drop"];
		var target = this.app.body;
		target.forwardEvents(events,null,pman_events_DragDropEvent.fromJqEvent);
		target.on("dragenter",$bind(this,this.onDragEnter));
		target.on("dragleave",$bind(this,this.onDragLeave));
		target.on("dragover",$bind(this,this.onDragOver));
		target.on("dragend",$bind(this,this.onDragEnd));
		target.on("drop",$bind(this,this.onDrop));
	}
	,onDragEnter: function(event) {
	}
	,onDragLeave: function(event) {
	}
	,onDragOver: function(event) {
		event.preventDefault();
	}
	,onDragEnd: function(event) {
	}
	,onDrop: function(event) {
		event.preventDefault();
		var tracks = [];
		var this1 = event.e.dataTransfer;
		var dt = this1;
		var tmp;
		if(dt.items != null) {
			var this2 = dt.items;
			tmp = this2;
		} else {
			tmp = null;
		}
		if(tmp != null) {
			var _g = 0;
			var _g1;
			if(dt.items != null) {
				var this3 = dt.items;
				_g1 = this3;
			} else {
				_g1 = null;
			}
			while(_g < _g1.length) {
				var this4 = _g1[_g];
				var item = this4;
				++_g;
				if(item.kind == "file") {
					var this5 = new tannus_sys_CFile(tannus_sys__$Path_Path_$Impl_$.fromString(new tannus_html_fs_WebFile(item.getAsFile()).file.path));
					var file = this5;
					tracks.push(new pman_media_Track(new pman_media_LocalFileMediaProvider(file)));
				} else if(item.kind == "string") {
					console.log({ data : item.getAsString(), type : item.type});
				} else {
					continue;
				}
			}
		} else {
			var tmp1;
			if(dt.files != null) {
				var this6 = dt.files;
				tmp1 = this6;
			} else {
				tmp1 = null;
			}
			if(tmp1 != null) {
				var _g2 = 0;
				var _g11;
				if(dt.files != null) {
					var this7 = dt.files;
					_g11 = this7;
				} else {
					_g11 = null;
				}
				while(_g2 < _g11.length) {
					var webFile = new tannus_html_fs_WebFile(_g11[_g2]);
					++_g2;
					var this8 = new tannus_sys_CFile(tannus_sys__$Path_Path_$Impl_$.fromString(webFile.file.path));
					var file1 = this8;
					tracks.push(new pman_media_Track(new pman_media_LocalFileMediaProvider(file1)));
				}
			}
		}
		this.app.playerPage.player.addItemList(tracks,function() {
			console.log(tracks);
		});
	}
	,app: null
	,__class__: pman_ui_DragDropManager
};
var pman_ui_KeyboardCommands = function(app) {
	this.app = app;
};
$hxClasses["pman.ui.KeyboardCommands"] = pman_ui_KeyboardCommands;
pman_ui_KeyboardCommands.__name__ = ["pman","ui","KeyboardCommands"];
pman_ui_KeyboardCommands.prototype = {
	bind: function() {
		this.app.playerPage.stage.on("keydown",$bind(this,this.handleKeyDown));
	}
	,unbind: function() {
	}
	,handleKeyDown: function(event) {
		var _g = event.key;
		switch(_g) {
		case 32:
			this.app.playerPage.player.togglePlayback();
			break;
		case 37:
			var n = -this.seekTimeDelta(event);
			var _g1 = this.app.playerPage.player;
			var v;
			if(_g1.session.focusedTrack != null) {
				var _this = _g1.session;
				v = (_this.focusedTrack != null ? _this.focusedTrack.driver : null).getCurrentTime();
			} else {
				v = 0.0;
			}
			if(_g1.session.focusedTrack != null) {
				var _this1 = _g1.session;
				(_this1.focusedTrack != null ? _this1.focusedTrack.driver : null).setCurrentTime(v + n);
			}
			if(_g1.session.focusedTrack != null) {
				var _this2 = _g1.session;
				(_this2.focusedTrack != null ? _this2.focusedTrack.driver : null).getCurrentTime();
			}
			break;
		case 39:
			var n1 = this.seekTimeDelta(event);
			var _g2 = this.app.playerPage.player;
			var v1;
			if(_g2.session.focusedTrack != null) {
				var _this3 = _g2.session;
				v1 = (_this3.focusedTrack != null ? _this3.focusedTrack.driver : null).getCurrentTime();
			} else {
				v1 = 0.0;
			}
			if(_g2.session.focusedTrack != null) {
				var _this4 = _g2.session;
				(_this4.focusedTrack != null ? _this4.focusedTrack.driver : null).setCurrentTime(v1 + n1);
			}
			if(_g2.session.focusedTrack != null) {
				var _this5 = _g2.session;
				(_this5.focusedTrack != null ? _this5.focusedTrack.driver : null).getCurrentTime();
			}
			break;
		case 48:
			this.nextCmdCount *= 10;
			break;
		case 49:
			this.nextCmdCount = this.nextCmdCount * 10 + 1;
			break;
		case 50:
			this.nextCmdCount = this.nextCmdCount * 10 + 2;
			break;
		case 51:
			this.nextCmdCount = this.nextCmdCount * 10 + 3;
			break;
		case 52:
			this.nextCmdCount = this.nextCmdCount * 10 + 4;
			break;
		case 53:
			this.nextCmdCount = this.nextCmdCount * 10 + 5;
			break;
		case 54:
			this.nextCmdCount = this.nextCmdCount * 10 + 6;
			break;
		case 55:
			this.nextCmdCount = this.nextCmdCount * 10 + 7;
			break;
		case 56:
			this.nextCmdCount = this.nextCmdCount * 10 + 8;
			break;
		case 57:
			this.nextCmdCount = this.nextCmdCount * 10 + 9;
			break;
		case 70:
			if(event.ctrlKey || event.metaKey) {
				this.app.playerPage.player.selectAndOpenDirectory();
			}
			break;
		case 74:
			if(event.shiftKey && (event.metaKey || event.ctrlKey)) {
				var wc = this.app.browserWindow.webContents;
				if(wc.isDevToolsOpened()) {
					wc.closeDevTools();
				} else {
					wc.openDevTools();
				}
			}
			break;
		case 76:
			var _this6 = this.app.playerPage.player;
			if(_this6.page.playlistView != null) {
				_this6.page.closePlaylistView();
			} else {
				_this6.page.openPlaylistView();
			}
			break;
		case 77:
			if(!event.ctrlKey) {
				var _this7 = this.app.playerPage.player;
				var _this8 = this.app.playerPage.player;
				var v2;
				if(_this8.session.focusedTrack != null) {
					var _this9 = _this8.session;
					v2 = (_this9.focusedTrack != null ? _this9.focusedTrack.driver : null).getMuted();
				} else {
					v2 = false;
				}
				if(_this7.session.focusedTrack != null) {
					var _this10 = _this7.session;
					(_this10.focusedTrack != null ? _this10.focusedTrack.driver : null).setMuted(!v2);
				}
				if(_this7.session.focusedTrack != null) {
					var _this11 = _this7.session;
					(_this11.focusedTrack != null ? _this11.focusedTrack.driver : null).getMuted();
				}
			}
			break;
		case 78:
			this.app.playerPage.player.gotoByOffset(this.flushNextCmdCount());
			break;
		case 79:
			if((event.ctrlKey || event.metaKey) && event.shiftKey) {
				this.app.playerPage.player.selectAndOpenAddresses();
			} else if(event.ctrlKey || event.metaKey) {
				this.app.playerPage.player.selectAndOpenFiles();
			}
			break;
		case 80:
			this.app.playerPage.player.gotoByOffset(-1,null);
			break;
		case 81:
			if(event.metaKey || event.ctrlKey) {
				this.app.quit();
			}
			break;
		case 82:
			if(event.metaKey || event.ctrlKey) {
				this.app.browserWindow.webContents.reload();
			}
			break;
		case 83:
			if(event.metaKey || event.ctrlKey) {
				this.app.playerPage.player.saveState();
			}
			break;
		case 87:
			if(event.metaKey || event.ctrlKey) {
				this.app.playerPage.player.clearPlaylist();
			}
			break;
		case 187:
			this.app.playerPage.player.session.playbackProperties.speed = 1.0;
			break;
		case 219:
			var _g3 = this.app.playerPage.player;
			var v3 = _g3.session.playbackProperties.speed - this.flushNextCmdCount() * 0.02;
			_g3.session.playbackProperties.speed = v3;
			break;
		case 221:
			var _g4 = this.app.playerPage.player;
			var v4 = _g4.session.playbackProperties.speed + this.flushNextCmdCount() * 0.02;
			_g4.session.playbackProperties.speed = v4;
			break;
		default:
		}
	}
	,seekTimeDelta: function(event) {
		var n = 0;
		if(event.altKey) {
			if(event.shiftKey) {
				n = 0.166666666666666657;
			} else if(event.ctrlKey) {
				n = 0.333333333333333315;
			} else {
				n = 0.0333333333333333329;
			}
		} else if(event.shiftKey) {
			n = 10.0;
		} else if(event.ctrlKey) {
			n = 30.0;
		} else {
			n = 2.0;
		}
		n *= this.flushNextCmdCount();
		return n;
	}
	,modifyNextCmdCount: function(n) {
		return this.nextCmdCount = this.nextCmdCount * 10 + n;
	}
	,mncc: function(n) {
		return this.nextCmdCount = this.nextCmdCount * 10 + n;
	}
	,flushNextCmdCount: function() {
		var n = this.nextCmdCount;
		this.nextCmdCount = 0;
		return n > 1 ? n : 1;
	}
	,fncc: function() {
		return this.flushNextCmdCount();
	}
	,get_p: function() {
		return this.app.playerPage.player;
	}
	,app: null
	,nextCmdCount: null
	,__class__: pman_ui_KeyboardCommands
	,__properties__: {get_p:"get_p"}
};
var pman_ui_PlayerControlsView = function(p) {
	this.hovered = false;
	var _gthis = this;
	pman_core_Ent.call(this);
	this.playerView = p;
	this.uiEnabled = true;
	this.uiHideDelay = 3000;
	this.cidm = new haxe_ds_StringMap();
	this.buttons = [];
	this.seekBar = new pman_ui_ctrl_SeekBar(this);
	gryffin_Tools.defer(function() {
		_gthis.addButton(new pman_ui_ctrl_PlaybackButton(_gthis));
		_gthis.addButton(new pman_ui_ctrl_ShuffleButton(_gthis));
		_gthis.addButton(new pman_ui_ctrl_PreviousButton(_gthis));
		_gthis.addButton(new pman_ui_ctrl_FullscreenButton(_gthis));
		_gthis.addButton(new pman_ui_ctrl_CastButton(_gthis));
		_gthis.addButton(new pman_ui_ctrl_PlaybackSpeedButton(_gthis));
		_gthis.addButton(new pman_ui_ctrl_NextButton(_gthis));
		_gthis.addChild(_gthis.seekBar);
	});
};
$hxClasses["pman.ui.PlayerControlsView"] = pman_ui_PlayerControlsView;
pman_ui_PlayerControlsView.__name__ = ["pman","ui","PlayerControlsView"];
pman_ui_PlayerControlsView.__super__ = pman_core_Ent;
pman_ui_PlayerControlsView.prototype = $extend(pman_core_Ent.prototype,{
	render: function(stage,c) {
		if(!this.uiEnabled) {
			return;
		}
		c.ctx.save();
		c.ctx.beginPath();
		var r = this.rect;
		c.ctx.rect(r.x,r.y,r.width,r.height);
		c.ctx.closePath();
		c.set_fillStyle(this.getBackgroundColor().toString());
		c.ctx.fill();
		pman_core_Ent.prototype.render.call(this,stage,c);
		c.ctx.restore();
	}
	,update: function(stage) {
		pman_core_Ent.prototype.update.call(this,stage);
		var mp = stage.getMousePosition();
		this.hovered = mp != null && this.containsPoint(mp);
		var events = ["mousemove","click","keydown"];
		var times = events.map($bind(stage,stage.mostRecentOccurrenceTime)).filter(function(_) {
			return _ != null;
		}).map(function(_1) {
			return new Date().getTime() - _1;
		});
		if(!Lambda.empty(times)) {
			var _e = times;
			var last = (function(predicate) {
				return tannus_ds_ArrayTools.min(_e,predicate);
			})(function(_2) {
				return _2;
			});
			this.uiEnabled = this.hovered || last <= this.uiHideDelay;
		}
	}
	,calculateGeometry: function(r) {
		r = this.playerView.rect;
		this.set_w(r.width);
		this.set_h(50);
		this.rect.y = r.height;
		this.rect.x = 0;
		this.__positionButtons();
		pman_core_Ent.prototype.calculateGeometry.call(this,r);
	}
	,addButton: function(b) {
		this.buttons.push(b);
		this.addChild(b);
		this.calculateGeometry(this.rect);
	}
	,__positionButtons: function() {
		var l = [];
		var r = [];
		var _g = 0;
		var _g1 = this.buttons;
		while(_g < _g1.length) {
			var btn = _g1[_g];
			++_g;
			if(btn.enabled) {
				var _g2 = btn.btnFloat;
				var tmp;
				switch(_g2) {
				case false:
					tmp = l;
					break;
				case true:
					tmp = r;
					break;
				}
				tmp.push(btn);
			}
		}
		var padding = 5.0;
		var bdfb = 26;
		var this1 = new tannus_geom_TPoint(this.rect.x + padding,this.rect.y + this.get_h() - bdfb - padding,0);
		var c = this1;
		var _g3 = 0;
		while(_g3 < l.length) {
			var btn1 = l[_g3];
			++_g3;
			btn1.calculateGeometry(this.rect);
			var v = c.get_x();
			btn1.rect.x = v;
			var v1 = c.get_y();
			btn1.rect.y = v1;
			c.set_x(c.get_x() + (btn1.get_w() + 10.0));
		}
		var this2 = new tannus_geom_TPoint(this.rect.x + this.get_w() - padding,this.rect.y + this.get_h() - bdfb - padding,0);
		c = this2;
		var _g4 = 0;
		while(_g4 < r.length) {
			var btn2 = r[_g4];
			++_g4;
			btn2.calculateGeometry(this.rect);
			c.set_x(c.get_x() - (btn2.get_w() + 5));
			var v2 = c.get_x();
			btn2.rect.x = v2;
			var v3 = c.get_y();
			btn2.rect.y = v3;
		}
	}
	,getBackgroundColor: function() {
		var _this = this.cidm;
		if(__map_reserved["bg"] != null ? _this.existsReserved("bg") : _this.h.hasOwnProperty("bg")) {
			var _this1 = this.playerView.player.theme;
			var _this2 = this.cidm;
			var id = __map_reserved["bg"] != null ? _this2.getReserved("bg") : _this2.h["bg"];
			return _this1.derived.get(id);
		} else {
			var color = this.playerView.player.theme.colors[0].lighten(12);
			var this1 = this.cidm;
			var v = this.playerView.player.theme.save(color);
			var _this3 = this1;
			if(__map_reserved["bg"] != null) {
				_this3.setReserved("bg",v);
			} else {
				_this3.h["bg"] = v;
			}
			return color;
		}
	}
	,get_player: function() {
		return this.playerView.player;
	}
	,playerView: null
	,buttons: null
	,seekBar: null
	,hovered: null
	,uiEnabled: null
	,uiHideDelay: null
	,cidm: null
	,__class__: pman_ui_PlayerControlsView
	,__properties__: $extend(pman_core_Ent.prototype.__properties__,{get_player:"get_player"})
});
var pman_ui_PlayerMessageBoard = function(p) {
	pman_core_Ent.call(this);
	this.player = p;
	this.box = new gryffin_display_TextBox();
	this.box.set_padding(7);
	this.box.set_fontSize(14);
	this.box.set_fontFamily("Ubuntu");
	var tmp = this.box;
	var this1 = new tannus_graphics__$Color_TColor(255,255,255,null);
	tmp.set_color(this1);
	this.currentMessage = null;
};
$hxClasses["pman.ui.PlayerMessageBoard"] = pman_ui_PlayerMessageBoard;
pman_ui_PlayerMessageBoard.__name__ = ["pman","ui","PlayerMessageBoard"];
pman_ui_PlayerMessageBoard.__super__ = pman_core_Ent;
pman_ui_PlayerMessageBoard.prototype = $extend(pman_core_Ent.prototype,{
	update: function(stage) {
		pman_core_Ent.prototype.update.call(this,stage);
		if(this.currentMessage != null) {
			var dur = this.currentMessage.duration != null ? this.currentMessage.duration : 6500;
			if(new Date().getTime() - this.currentMessage.startTime > dur) {
				this.currentMessage = null;
			} else {
				this.syncBox();
				this.set_w(this.box.get_width());
				this.set_h(this.box.get_height());
				this.rect.x = this.player.view.rect.x + 12;
				this.rect.y = this.player.view.rect.y + 12;
			}
		}
	}
	,render: function(stage,c) {
		pman_core_Ent.prototype.render.call(this,stage,c);
		if(this.currentMessage != null) {
			c.ctx.beginPath();
			c.set_fillStyle(this.player.theme.colors[0]);
			var rect = this.rect;
			c.roundRect(rect.x,rect.y,rect.width,rect.height,5);
			c.ctx.closePath();
			c.ctx.fill();
			c.drawComponent(this.box,0,0,this.box.get_width(),this.box.get_height(),this.rect.x,this.rect.y,this.get_w(),this.get_h());
		}
	}
	,syncBox: function() {
		var m = this.currentMessage;
		this.box.set_fontSize(14);
		this.box.set_fontFamily("Ubuntu");
		var tmp = this.box;
		var this1 = new tannus_graphics__$Color_TColor(255,255,255,null);
		tmp.set_color(this1);
		this.box.set_text(m.text);
		if(m.color != null) {
			this.box.set_color(m.color);
		}
		if(m.backgroundColor != null) {
			this.box.set_backgroundColor(m.backgroundColor);
		}
		if(m.fontSize != null) {
			this.box.set_fontSize(m.fontSize.size);
			this.box.set_fontSizeUnit(m.fontSize.unit);
		}
	}
	,post: function(message) {
		var options;
		if(typeof(message) == "string") {
			options = { text : js_Boot.__cast(message , String)};
		} else {
			options = message;
		}
		this.currentMessage = new pman_ui__$PlayerMessageBoard_Message(options);
		this.currentMessage.startTime = new Date().getTime();
	}
	,get_pview: function() {
		return this.player.view;
	}
	,player: null
	,currentMessage: null
	,box: null
	,__class__: pman_ui_PlayerMessageBoard
	,__properties__: $extend(pman_core_Ent.prototype.__properties__,{get_pview:"get_pview"})
});
var pman_ui__$PlayerMessageBoard_Message = function(options) {
	this.text = options.text;
	this.duration = options.duration;
	this.color = options.color;
	this.backgroundColor = options.backgroundColor;
	this.fontSize = null;
	this.__pull(options);
};
$hxClasses["pman.ui._PlayerMessageBoard.Message"] = pman_ui__$PlayerMessageBoard_Message;
pman_ui__$PlayerMessageBoard_Message.__name__ = ["pman","ui","_PlayerMessageBoard","Message"];
pman_ui__$PlayerMessageBoard_Message.prototype = {
	__pull: function(o) {
		if(o.fontSize != null) {
			var s = o.fontSize;
			var value = new tannus_css_vals_Lexer().parse(new tannus_io_impl_NodeBinary(s.length,new Buffer(s)))[0];
			if(value != null) {
				if(value[1] == 2) {
					var unit = value[3];
					var num = value[2];
					if(unit == null) {
						unit = "pt";
					}
					this.fontSize = { size : num, unit : unit};
				}
			}
		}
	}
	,start: function() {
		this.startTime = new Date().getTime();
	}
	,text: null
	,duration: null
	,color: null
	,backgroundColor: null
	,fontSize: null
	,startTime: null
	,__class__: pman_ui__$PlayerMessageBoard_Message
};
var pman_ui_PlayerPage = function(main) {
	this.playlistView = null;
	crayon_Page.call(this);
	this.addClass("ui_page");
	this.app = main;
};
$hxClasses["pman.ui.PlayerPage"] = pman_ui_PlayerPage;
pman_ui_PlayerPage.__name__ = ["pman","ui","PlayerPage"];
pman_ui_PlayerPage.__super__ = crayon_Page;
pman_ui_PlayerPage.prototype = $extend(crayon_Page.prototype,{
	open: function(body) {
		tannus_html__$Element_Element_$Impl_$.get_style(this.el).set("overflow","hidden");
		var win = body.application.win;
		var canvas = win.document.createElement("canvas");
		var this1 = $(canvas);
		this.append(this1);
		this.stage = new gryffin_core_Stage(canvas);
		this.stage.fill();
		this.player = new pman_core_Player(this.app,this);
		this.player.attachToStage(this.stage);
		var value = this.player;
		var self = tannus_ds_CObj.create(this.app.win);
		self.set("player",value);
	}
	,openPlaylistView: function() {
		var _gthis = this;
		if(this.playlistView == null) {
			this.playlistView = new pman_ui_PlaylistView(this.player);
			this.playlistView.open();
			this.playlistView.once("close",function() {
				_gthis.playlistView = null;
			});
			this.stage.calculateGeometry();
			return true;
		} else {
			return false;
		}
	}
	,closePlaylistView: function() {
		if(this.playlistView != null) {
			this.playlistView.close();
		}
	}
	,stage: null
	,player: null
	,app: null
	,playlistView: null
	,__class__: pman_ui_PlayerPage
});
var pman_ui_PlaylistView = function(p) {
	this.list = null;
	foundation_Pane.call(this);
	this.addClasses(["right-panel","playlist"]);
	this.player = p;
	this.tracks = [];
	this.build();
};
$hxClasses["pman.ui.PlaylistView"] = pman_ui_PlaylistView;
pman_ui_PlaylistView.__name__ = ["pman","ui","PlaylistView"];
pman_ui_PlaylistView.__super__ = foundation_Pane;
pman_ui_PlaylistView.prototype = $extend(foundation_Pane.prototype,{
	open: function() {
		this.player.page.append(this);
		this.player.session.trackChanged.listen($bind(this,this.on_track_change),false);
		this.player.session.playlist.changeEvent.listen($bind(this,this.on_playlist_change),false);
	}
	,close: function() {
		this.player.session.trackChanged.ignore($bind(this,this.on_track_change));
		this.player.session.playlist.changeEvent.ignore($bind(this,this.on_playlist_change));
		this.dispatch("close",null);
		this.destroy();
	}
	,populate: function() {
		this.buildRows();
		var hed = new foundation_Heading(4,"Playlist");
		this.hedRow.append(hed);
		this.buildSearchWidget();
		this.buildTrackList();
		this.forwardEvents(["click","mousedown","mouseup","mousemove","mouseleave"],null,tannus_events_MouseEvent.fromJqEvent);
		this.on("mouseleave",function(event) {
			var this1 = $("div.drop-indicator");
			var this2 = this1;
			var _g = [];
			var _g2 = 0;
			var _g1 = this2.length;
			while(_g2 < _g1) {
				var i = _g2++;
				var this3 = $(this2.get(i));
				_g.push(this3);
			}
			var dil = _g;
			var _g3 = 0;
			while(_g3 < dil.length) {
				var di = dil[_g3];
				++_g3;
				di.parent("li").remove();
			}
		});
	}
	,refresh: function() {
		this.rebuildTracks();
	}
	,buildRows: function() {
		this.hedRow = new foundation_Row();
		this.append(this.hedRow);
		this.searchRow = new foundation_Row();
		this.searchRow.addClass("search-box");
		this.append(this.searchRow);
		this.listRow = new foundation_Row();
		this.append(this.listRow);
	}
	,buildTrackList: function() {
		this.list = new foundation_List();
		this.listRow.append(this.list);
		tannus_html__$Element_Element_$Impl_$.plugin(this.list.el,"disableSelection");
		var track = HxOverrides.iter(this.player.session.playlist.l);
		while(track.hasNext()) {
			var track1 = track.next();
			var trackView = new pman_ui_pl_TrackView(this,track1);
			if(this.player.session.focusedTrack == track1) {
				trackView.addClass("focused");
				trackView.el.hasClass("focused");
			}
			this.tracks.push(trackView);
			this.list.addItem(trackView);
		}
	}
	,undoTrackList: function() {
		var _g = 0;
		var _g1 = this.tracks;
		while(_g < _g1.length) {
			var track = _g1[_g];
			++_g;
			track.destroy();
		}
		this.tracks = [];
		if(this.list != null) {
			this.list.destroy();
		}
		this.list = null;
	}
	,rebuildTracks: function() {
		this.undoTrackList();
		this.buildTrackList();
	}
	,buildSearchWidget: function() {
		this.searchWidget = new pman_ui_pl_SearchWidget(this.player,this);
		this.searchRow.append(this.searchWidget);
	}
	,addTrack: function(tv) {
		this.tracks.push(tv);
		this.list.addItem(tv);
	}
	,on_track_change: function(delta) {
		if(delta[1] != null) {
			var pv = this.viewFor(delta[1]);
			if(pv != null) {
				pv.removeClass("focused");
				pv.el.hasClass("focused");
			}
		}
		if(delta[0] != null) {
			var cv = this.viewFor(delta[0]);
			if(cv != null) {
				cv.addClass("focused");
				cv.el.hasClass("focused");
			}
		}
	}
	,on_playlist_change: function(change) {
		this.refresh();
	}
	,viewFor: function(track) {
		var _g = 0;
		var _g1 = this.tracks;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(t.track == track) {
				return t;
			}
		}
		return null;
	}
	,destroy: function() {
		foundation_Pane.prototype.destroy.call(this);
	}
	,findTrackViewByPoint: function(p) {
		var lastPassed = null;
		var _g = 0;
		var _g1 = this.tracks;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			var tr = t.rect();
			var ox = p.get_x();
			var oy = p.get_y();
			if(ox > tr.x && ox < tr.x + tr.width && (oy > tr.y && oy < tr.y + tr.height)) {
				return t;
			} else if(p.get_y() > tr.y) {
				lastPassed = { t : t, r : tr};
			}
		}
		if(lastPassed != null) {
			return lastPassed.t;
		} else {
			return null;
		}
	}
	,get_session: function() {
		return this.player.session;
	}
	,get_playlist: function() {
		return this.player.session.playlist;
	}
	,player: null
	,tracks: null
	,hedRow: null
	,searchRow: null
	,searchWidget: null
	,listRow: null
	,list: null
	,__class__: pman_ui_PlaylistView
	,__properties__: $extend(foundation_Pane.prototype.__properties__,{get_playlist:"get_playlist",get_session:"get_session"})
});
var pman_ui_PromptBox = function() {
	foundation_Pane.call(this);
	this.input = new foundation_TextInput();
	this.titl = new foundation_LabelSpan();
	this.append(this.titl);
	this.append(this.input);
	this.titl.set_text("Prompt Title");
	this.__listen();
};
$hxClasses["pman.ui.PromptBox"] = pman_ui_PromptBox;
pman_ui_PromptBox.__name__ = ["pman","ui","PromptBox"];
pman_ui_PromptBox.__super__ = foundation_Pane;
pman_ui_PromptBox.prototype = $extend(foundation_Pane.prototype,{
	open: function() {
		this.__init();
		this.appendTo("body");
		this.__center();
	}
	,close: function() {
		this.destroy();
	}
	,focus: function() {
		this.input.focus();
	}
	,caret: function(index) {
		this.input.focus();
		this.input.get_iel().setSelectionRange(index,index);
	}
	,select: function() {
		this.input.get_iel().select();
	}
	,selectRange: function(start,end) {
		this.input.get_iel().setSelectionRange(start,end);
	}
	,readLine: function(f) {
		this.once("line",f);
	}
	,moveTo: function(x,y) {
		tannus_html__$Element_Element_$Impl_$.get_style(this.el).applyObject({ left : x + "px", top : y + "px"});
	}
	,__init: function() {
		var c = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		c.set("position","absolute");
		c.set("display","block");
		c.set("z-index","11111");
		c.set("top","55px");
		c.set("width","90%");
		c = tannus_html__$Element_Element_$Impl_$.get_style(this.input.el);
		c.set("width","100%");
		c = tannus_html__$Element_Element_$Impl_$.get_style(this.titl.el);
		c.set("font-size","13.8px");
	}
	,__listen: function() {
		this.input.on("keydown",function(event) {
			event.stopPropogation();
		});
		this.input.on("keyup",$bind(this,this.keyup));
	}
	,keyup: function(event) {
		var _g = event.key;
		if(_g == 13) {
			if(StringTools.trim(this.input.getValue()).length != 0) {
				this.line(this.input.getValue());
			}
			this.close();
		}
	}
	,line: function(l) {
		this.dispatch("line",this.input.getValue());
	}
	,__center: function() {
		var mr = tannus_html__$Element_Element_$Impl_$.get_rectangle(this.el);
		var this1 = $("body");
		var pr = tannus_html__$Element_Element_$Impl_$.get_rectangle(this1);
		var c = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		var cx = mr.x = pr.x + pr.width / 2 - mr.width / 2;
		c.set("left","" + cx + "px");
	}
	,get_value: function() {
		return this.input.getValue();
	}
	,set_value: function(v) {
		this.input.setValue(v);
		return this.input.getValue();
	}
	,get_title: function() {
		return this.titl.get_text();
	}
	,set_title: function(v) {
		return this.titl.set_text(v);
	}
	,get_placeholder: function() {
		var this1 = this.input.el.attr("placeholder");
		if(this1 != null) {
			return this1;
		} else {
			return "";
		}
	}
	,set_placeholder: function(v) {
		return tannus_html__$Element_Element_$Impl_$.set(this.input.el,"placeholder",v);
	}
	,get_i: function() {
		return this.input.get_iel();
	}
	,input: null
	,titl: null
	,__class__: pman_ui_PromptBox
	,__properties__: $extend(foundation_Pane.prototype.__properties__,{get_i:"get_i",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder",set_title:"set_title",get_title:"get_title",set_value:"set_value",get_value:"get_value"})
});
var pman_ui_ctrl_PlayerControlButton = function(c) {
	pman_core_Ent.call(this);
	this.controls = c;
	this.btnFloat = false;
	this.tb = new gryffin_display_TextBox();
	this.tb.set_fontFamily("Ubuntu");
	this.tb.set_fontSize(10);
	this.tb.set_fontSizeUnit("px");
	this.tb.set_color(this.controls.playerView.player.theme.colors[1]);
	this.label = null;
	this.enabled = true;
	this.__bindEvents();
};
$hxClasses["pman.ui.ctrl.PlayerControlButton"] = pman_ui_ctrl_PlayerControlButton;
pman_ui_ctrl_PlayerControlButton.__name__ = ["pman","ui","ctrl","PlayerControlButton"];
pman_ui_ctrl_PlayerControlButton.__super__ = pman_core_Ent;
pman_ui_ctrl_PlayerControlButton.prototype = $extend(pman_core_Ent.prototype,{
	update: function(stage) {
		pman_core_Ent.prototype.update.call(this,stage);
		if(!this.enabled) {
			this.hide();
		} else {
			this.show();
		}
	}
	,render: function(stage,c) {
		pman_core_Ent.prototype.render.call(this,stage,c);
		if(this.label != null) {
			this.__drawLabel(stage,c);
		}
	}
	,calculateGeometry: function(r) {
		this.set_h(30);
		this.set_w(this.get_h());
	}
	,__drawLabel: function(stage,c) {
		if(this.tb.get_text() != this.label) {
			this.tb.set_text(this.label);
		}
		var lx = this.rect.x + this.get_w() - this.tb.get_width() * 0.60;
		var ly = this.rect.y + this.get_h() - this.tb.get_height() * 0.60;
		c.drawComponent(this.tb,0,0,this.tb.get_width(),this.tb.get_height(),lx,ly,this.tb.get_width(),this.tb.get_height());
	}
	,click: function(event) {
	}
	,rightClick: function(event) {
	}
	,__bindEvents: function() {
		this.on("click",$bind(this,this.click));
		this.on("contextmenu",$bind(this,this.rightClick));
	}
	,get_player: function() {
		return this.controls.playerView.player;
	}
	,controls: null
	,btnFloat: null
	,label: null
	,enabled: null
	,tb: null
	,__class__: pman_ui_ctrl_PlayerControlButton
	,__properties__: $extend(pman_core_Ent.prototype.__properties__,{get_player:"get_player"})
});
var pman_ui_ctrl_IconicPlayerControlButton = function(p) {
	pman_ui_ctrl_PlayerControlButton.call(this,p);
	this._il = [];
	this.iconSize = 64;
};
$hxClasses["pman.ui.ctrl.IconicPlayerControlButton"] = pman_ui_ctrl_IconicPlayerControlButton;
pman_ui_ctrl_IconicPlayerControlButton.__name__ = ["pman","ui","ctrl","IconicPlayerControlButton"];
pman_ui_ctrl_IconicPlayerControlButton.__super__ = pman_ui_ctrl_PlayerControlButton;
pman_ui_ctrl_IconicPlayerControlButton.prototype = $extend(pman_ui_ctrl_PlayerControlButton.prototype,{
	init: function(stage) {
		pman_ui_ctrl_PlayerControlButton.prototype.init.call(this,stage);
		this.initIcon();
	}
	,initIcon: function() {
	}
	,render: function(stage,c) {
		this.drawIcon(this.getIcon(),c);
		pman_ui_ctrl_PlayerControlButton.prototype.render.call(this,stage,c);
	}
	,getIcon: function() {
		return this._il[0];
	}
	,drawIcon: function(icon,c) {
	}
	,_il: null
	,iconSize: null
	,__class__: pman_ui_ctrl_IconicPlayerControlButton
});
var pman_ui_ctrl_ImagePlayerControlButton = function(p) {
	pman_ui_ctrl_IconicPlayerControlButton.call(this,p);
};
$hxClasses["pman.ui.ctrl.ImagePlayerControlButton"] = pman_ui_ctrl_ImagePlayerControlButton;
pman_ui_ctrl_ImagePlayerControlButton.__name__ = ["pman","ui","ctrl","ImagePlayerControlButton"];
pman_ui_ctrl_ImagePlayerControlButton.__super__ = pman_ui_ctrl_IconicPlayerControlButton;
pman_ui_ctrl_ImagePlayerControlButton.prototype = $extend(pman_ui_ctrl_IconicPlayerControlButton.prototype,{
	drawIcon: function(icon,c) {
		if(icon == null) {
			return;
		}
		c.drawComponent(icon,0,0,icon.img.naturalWidth,icon.img.naturalHeight,this.rect.x,this.rect.y,this.get_w(),this.get_h());
	}
	,__class__: pman_ui_ctrl_ImagePlayerControlButton
});
var pman_ui_ctrl_CastButton = function(c) {
	this.browser = null;
	pman_ui_ctrl_ImagePlayerControlButton.call(this,c);
	this.btnFloat = true;
	this.enabled = false;
};
$hxClasses["pman.ui.ctrl.CastButton"] = pman_ui_ctrl_CastButton;
pman_ui_ctrl_CastButton.__name__ = ["pman","ui","ctrl","CastButton"];
pman_ui_ctrl_CastButton.__super__ = pman_ui_ctrl_ImagePlayerControlButton;
pman_ui_ctrl_CastButton.prototype = $extend(pman_ui_ctrl_ImagePlayerControlButton.prototype,{
	initIcon: function() {
		this._il = [pman_display_Icons.castIcon(this.iconSize,this.iconSize).toImage()];
	}
	,getIcon: function() {
		return this._il[0];
	}
	,click: function(event) {
		var _gthis = this;
		if(this.browser == null) {
			this.browser = new pman_tools_chromecast_Browser(new pman_tools_chromecast_ExtBrowser());
			this.browser.deviceFound.listen(function(device) {
				var name = StringTools.htmlUnescape(device.d.config.name);
				if(name == "Ryans Room") {
					var m = { url : "http://commondatastorage.googleapis.com/gtv-videos-bucket/big_buck_bunny_1080p.mp4"};
					device.play(m,0,function(err) {
						if(err != null) {
							console.log(err);
						} else {
							console.log("playback started");
							device.pause(function(err1) {
								device.getStatus(function(err2,status) {
									console.log(status);
									device.stop(function(err3) {
										_gthis.browser.destroy();
										_gthis.browser = null;
									});
								});
							});
						}
					});
				}
			},false);
		}
		this.browser.update();
	}
	,browser: null
	,__class__: pman_ui_ctrl_CastButton
});
var pman_ui_ctrl_FullscreenButton = function(c) {
	pman_ui_ctrl_ImagePlayerControlButton.call(this,c);
	this.btnFloat = true;
};
$hxClasses["pman.ui.ctrl.FullscreenButton"] = pman_ui_ctrl_FullscreenButton;
pman_ui_ctrl_FullscreenButton.__name__ = ["pman","ui","ctrl","FullscreenButton"];
pman_ui_ctrl_FullscreenButton.__super__ = pman_ui_ctrl_ImagePlayerControlButton;
pman_ui_ctrl_FullscreenButton.prototype = $extend(pman_ui_ctrl_ImagePlayerControlButton.prototype,{
	initIcon: function() {
		this._il = [pman_display_Icons.expandIcon(this.iconSize,this.iconSize).toImage(),pman_display_Icons.collapseIcon(this.iconSize,this.iconSize).toImage()];
	}
	,getIcon: function() {
		return this._il[this.controls.playerView.player.app.browserWindow.isFullScreen() ? 1 : 0];
	}
	,click: function(event) {
		var _this = this.controls.playerView.player;
		var flag = !this.controls.playerView.player.app.browserWindow.isFullScreen();
		_this.app.browserWindow.setFullScreen(flag);
	}
	,__class__: pman_ui_ctrl_FullscreenButton
});
var pman_ui_ctrl_NextButton = function(c) {
	pman_ui_ctrl_ImagePlayerControlButton.call(this,c);
	this.btnFloat = true;
};
$hxClasses["pman.ui.ctrl.NextButton"] = pman_ui_ctrl_NextButton;
pman_ui_ctrl_NextButton.__name__ = ["pman","ui","ctrl","NextButton"];
pman_ui_ctrl_NextButton.__super__ = pman_ui_ctrl_ImagePlayerControlButton;
pman_ui_ctrl_NextButton.prototype = $extend(pman_ui_ctrl_ImagePlayerControlButton.prototype,{
	initIcon: function() {
		this._il = [pman_display_Icons.nextIcon(this.iconSize,this.iconSize).toImage()];
	}
	,getIcon: function() {
		return this._il[0];
	}
	,click: function(event) {
		var _this = this.controls.playerView.player;
		var index = _this.session.indexOfCurrentMedia() + 1;
		var nt = _this.session.playlist.l[index];
		if(nt != null) {
			this.controls.playerView.player.openTrack(nt);
		}
	}
	,__class__: pman_ui_ctrl_NextButton
});
var pman_ui_ctrl_PlaybackButton = function(c) {
	pman_ui_ctrl_ImagePlayerControlButton.call(this,c);
};
$hxClasses["pman.ui.ctrl.PlaybackButton"] = pman_ui_ctrl_PlaybackButton;
pman_ui_ctrl_PlaybackButton.__name__ = ["pman","ui","ctrl","PlaybackButton"];
pman_ui_ctrl_PlaybackButton.__super__ = pman_ui_ctrl_ImagePlayerControlButton;
pman_ui_ctrl_PlaybackButton.prototype = $extend(pman_ui_ctrl_ImagePlayerControlButton.prototype,{
	initIcon: function() {
		this._il = [pman_display_Icons.playIcon(this.iconSize,this.iconSize).toImage(),pman_display_Icons.pauseIcon(this.iconSize,this.iconSize).toImage()];
	}
	,getIcon: function() {
		var tmp = this._il;
		var tmp1;
		var _this = this.controls.playerView.player;
		var tmp2;
		if(_this.session.focusedTrack != null) {
			var _this1 = _this.session;
			tmp2 = (_this1.focusedTrack != null ? _this1.focusedTrack.driver : null).getPaused();
		} else {
			tmp2 = true;
		}
		if(tmp2) {
			tmp1 = 0;
		} else {
			tmp1 = 1;
		}
		return tmp[tmp1];
	}
	,click: function(event) {
		this.controls.playerView.player.togglePlayback();
	}
	,__class__: pman_ui_ctrl_PlaybackButton
});
var pman_ui_ctrl_PlaybackSpeedButton = function(c) {
	pman_ui_ctrl_ImagePlayerControlButton.call(this,c);
	this.btnFloat = true;
	this.widget = new pman_ui_ctrl_PlaybackSpeedWidget(this.controls,this);
};
$hxClasses["pman.ui.ctrl.PlaybackSpeedButton"] = pman_ui_ctrl_PlaybackSpeedButton;
pman_ui_ctrl_PlaybackSpeedButton.__name__ = ["pman","ui","ctrl","PlaybackSpeedButton"];
pman_ui_ctrl_PlaybackSpeedButton.__super__ = pman_ui_ctrl_ImagePlayerControlButton;
pman_ui_ctrl_PlaybackSpeedButton.prototype = $extend(pman_ui_ctrl_ImagePlayerControlButton.prototype,{
	init: function(stage) {
		pman_ui_ctrl_ImagePlayerControlButton.prototype.init.call(this,stage);
		this.controls.addSibling(this.widget);
	}
	,update: function(stage) {
		pman_ui_ctrl_ImagePlayerControlButton.prototype.update.call(this,stage);
		var ispeed = Math.round(this.controls.playerView.player.session.playbackProperties.speed * 100);
		this.label = "" + ispeed + "%";
	}
	,initIcon: function() {
		this._il = [pman_display_Icons.clockIcon(this.iconSize,this.iconSize).toImage()];
	}
	,getIcon: function() {
		return this._il[0];
	}
	,click: function(event) {
		this.widget.toggleHidden();
	}
	,widget: null
	,__class__: pman_ui_ctrl_PlaybackSpeedButton
});
var pman_ui_ctrl_PlaybackSpeedOption = function(c,b,w,v) {
	pman_core_Ent.call(this);
	this.controls = c;
	this.button = b;
	this.widget = w;
	this.value = v;
	this.tb = new gryffin_display_TextBox();
	this.tb.set_fontSize(10);
	this.tb.set_fontSizeUnit("pt");
	var tmp = this.tb;
	var this1 = new tannus_graphics__$Color_TColor(255,255,255,null);
	tmp.set_color(this1);
};
$hxClasses["pman.ui.ctrl.PlaybackSpeedOption"] = pman_ui_ctrl_PlaybackSpeedOption;
pman_ui_ctrl_PlaybackSpeedOption.__name__ = ["pman","ui","ctrl","PlaybackSpeedOption"];
pman_ui_ctrl_PlaybackSpeedOption.__super__ = pman_core_Ent;
pman_ui_ctrl_PlaybackSpeedOption.prototype = $extend(pman_core_Ent.prototype,{
	init: function(stage) {
		pman_core_Ent.prototype.init.call(this,stage);
		this.on("click",$bind(this,this.onClick));
	}
	,update: function(stage) {
		pman_core_Ent.prototype.update.call(this,stage);
		var mp = stage.getMousePosition();
		var hovered = mp != null && this.containsPoint(mp);
		if(hovered) {
			this.tb.set_color(this.button.controls.playerView.player.theme.colors[1]);
		} else {
			var tmp = this.tb;
			var this1 = new tannus_graphics__$Color_TColor(255,255,255,null);
			tmp.set_color(this1);
		}
		this.tb.set_text(pman_ui_ctrl__$PlaybackSpeedWidget_NamedSpeed_$Impl_$.getName(this.value));
	}
	,render: function(stage,c) {
		pman_core_Ent.prototype.render.call(this,stage,c);
		c.ctx.beginPath();
		c.set_strokeStyle(this.controls.seekBar.getBackgroundColor().toString());
		var r = this.rect;
		c.ctx.rect(r.x,r.y,r.width,r.height);
		c.ctx.closePath();
		c.ctx.stroke();
		var this1 = new tannus_geom_CRectangle(0,0,this.tb.get_width(),this.tb.get_height());
		var tbr = this1;
		tbr.x = this.get_centerX() - tbr.width / 2;
		tbr.y = this.get_centerY() - tbr.height / 2;
		c.drawComponent(this.tb,0,0,this.tb.get_width(),this.tb.get_height(),tbr.x,tbr.y,tbr.width,tbr.height);
	}
	,calculateGeometry: function(r) {
		this.set_w(this.tb.get_width() + 2);
		this.set_h(this.tb.get_height() + 2);
		this.set_centerX(this.widget.get_centerX());
	}
	,onClick: function(event) {
		this.button.controls.playerView.player.session.playbackProperties.speed = this.value;
		this.widget.toggleHidden();
	}
	,value: null
	,tb: null
	,controls: null
	,button: null
	,widget: null
	,__class__: pman_ui_ctrl_PlaybackSpeedOption
});
var pman_ui_ctrl_PlaybackSpeedWidget = function(c,b) {
	this.margin = 4.0;
	pman_core_Ent.call(this);
	this.controls = c;
	this.button = b;
	this.options = [];
	this.hide();
};
$hxClasses["pman.ui.ctrl.PlaybackSpeedWidget"] = pman_ui_ctrl_PlaybackSpeedWidget;
pman_ui_ctrl_PlaybackSpeedWidget.__name__ = ["pman","ui","ctrl","PlaybackSpeedWidget"];
pman_ui_ctrl_PlaybackSpeedWidget.__super__ = pman_core_Ent;
pman_ui_ctrl_PlaybackSpeedWidget.prototype = $extend(pman_core_Ent.prototype,{
	init: function(stage) {
		pman_core_Ent.prototype.init.call(this,stage);
		this.buildOptions();
	}
	,update: function(stage) {
		pman_core_Ent.prototype.update.call(this,stage);
	}
	,render: function(stage,c) {
		var bg = this.controls.getBackgroundColor();
		c.set_fillStyle(bg.toString());
		c.ctx.beginPath();
		var rect = this.rect;
		c.roundRect(rect.x,rect.y,rect.width,rect.height,4.0);
		c.ctx.closePath();
		c.ctx.fill();
		pman_core_Ent.prototype.render.call(this,stage,c);
	}
	,calculateGeometry: function(r) {
		this.set_w(100);
		this.set_centerX(this.button.get_centerX());
		this.set_h(this.calculateHeight());
		var v = this.controls.rect.y - this.get_h() - 7;
		this.rect.y = v;
		pman_core_Ent.prototype.calculateGeometry.call(this,r);
		this.positionOptions();
	}
	,calculateHeight: function() {
		var result = this.margin;
		var _g = 0;
		var _g1 = this.options;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			result += o.get_h() + this.margin;
		}
		return result;
	}
	,positionOptions: function() {
		var oy = this.rect.y + this.margin;
		var _g = 0;
		var _g1 = this.options;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.rect.y = oy;
			oy += o.get_h();
			oy += this.margin;
		}
		oy += this.margin;
	}
	,buildOptions: function() {
		var all = [0.75,1.00,1.25,1.75];
		var _g = 0;
		while(_g < all.length) {
			var value = all[_g];
			++_g;
			var o = new pman_ui_ctrl_PlaybackSpeedOption(this.controls,this.button,this,value);
			this.addChild(o);
			this.options.push(o);
		}
	}
	,addOption: function(o) {
		this.addChild(o);
		this.options.push(o);
	}
	,option: function(value) {
		return new pman_ui_ctrl_PlaybackSpeedOption(this.controls,this.button,this,value);
	}
	,controls: null
	,button: null
	,options: null
	,margin: null
	,__class__: pman_ui_ctrl_PlaybackSpeedWidget
});
var pman_ui_ctrl__$PlaybackSpeedWidget_NamedSpeed_$Impl_$ = {};
$hxClasses["pman.ui.ctrl._PlaybackSpeedWidget.NamedSpeed_Impl_"] = pman_ui_ctrl__$PlaybackSpeedWidget_NamedSpeed_$Impl_$;
pman_ui_ctrl__$PlaybackSpeedWidget_NamedSpeed_$Impl_$.__name__ = ["pman","ui","ctrl","_PlaybackSpeedWidget","NamedSpeed_Impl_"];
pman_ui_ctrl__$PlaybackSpeedWidget_NamedSpeed_$Impl_$.isNamedSpeed = function(n) {
	return Lambda.has([0.75,1.00,1.25,1.75],n);
};
pman_ui_ctrl__$PlaybackSpeedWidget_NamedSpeed_$Impl_$.getName = function(this1) {
	switch(this1) {
	case 0.75:
		return "Slow";
	case 1.00:
		return "Normal";
	case 1.25:
		return "Fast";
	case 1.75:
		return "Very Fast";
	default:
		if(this1 == null) {
			return "null";
		} else {
			return "" + this1;
		}
	}
};
pman_ui_ctrl__$PlaybackSpeedWidget_NamedSpeed_$Impl_$.getValue = function(this1) {
	return this1;
};
var pman_ui_ctrl_PreviousButton = function(c) {
	pman_ui_ctrl_ImagePlayerControlButton.call(this,c);
	this.btnFloat = false;
};
$hxClasses["pman.ui.ctrl.PreviousButton"] = pman_ui_ctrl_PreviousButton;
pman_ui_ctrl_PreviousButton.__name__ = ["pman","ui","ctrl","PreviousButton"];
pman_ui_ctrl_PreviousButton.__super__ = pman_ui_ctrl_ImagePlayerControlButton;
pman_ui_ctrl_PreviousButton.prototype = $extend(pman_ui_ctrl_ImagePlayerControlButton.prototype,{
	initIcon: function() {
		this._il = [pman_display_Icons.prevIcon(this.iconSize,this.iconSize).toImage()];
	}
	,getIcon: function() {
		return this._il[0];
	}
	,click: function(event) {
		var _this = this.controls.playerView.player;
		var index = _this.session.indexOfCurrentMedia() + -1;
		var nt = _this.session.playlist.l[index];
		if(nt != null) {
			this.controls.playerView.player.openTrack(nt);
		}
	}
	,__class__: pman_ui_ctrl_PreviousButton
});
var pman_ui_ctrl_SeekBar = function(c) {
	this.thumbnail = null;
	this.loadingThumbnail = false;
	pman_core_Ent.call(this);
	this.controls = c;
	var this1 = new tannus_geom_CRectangle(0,0,0,0);
	this.viewed = this1;
	this.hoverLocation = null;
	this.hovered = false;
	this.lhct = new Date().getTime();
	this.thumb = new pman_ui_ctrl_ThumbPreviewBox(this);
	this.ctb = new gryffin_display_TextBox();
	this.dtb = new gryffin_display_TextBox();
	var t = this.ctb;
	t.set_fontFamily("Ubuntu");
	t.set_fontSizeUnit("px");
	t.set_fontSize(10);
	t.set_color(tannus_graphics__$Color_TColor.fromString("#FFFFFF"));
	var t1 = this.dtb;
	t1.set_fontFamily("Ubuntu");
	t1.set_fontSizeUnit("px");
	t1.set_fontSize(10);
	t1.set_color(tannus_graphics__$Color_TColor.fromString("#FFFFFF"));
	this.tb_margin = 0;
};
$hxClasses["pman.ui.ctrl.SeekBar"] = pman_ui_ctrl_SeekBar;
pman_ui_ctrl_SeekBar.__name__ = ["pman","ui","ctrl","SeekBar"];
pman_ui_ctrl_SeekBar.__super__ = pman_core_Ent;
pman_ui_ctrl_SeekBar.prototype = $extend(pman_core_Ent.prototype,{
	init: function(stage) {
		pman_core_Ent.prototype.init.call(this,stage);
		this.controls.addSibling(this.thumb);
		this.on("click",$bind(this,this.onClick));
	}
	,update: function(stage) {
		pman_core_Ent.prototype.update.call(this,stage);
		var lastHovered = this.hovered;
		var lastHoverLocation = this.hoverLocation;
		var mp = stage.getMousePosition();
		this.hovered = mp != null && this.containsPoint(mp) && this.controls.playerView.player.session.focusedTrack != null;
		this.hoverLocation = this.hovered ? mp : null;
		if(this.hovered && this.hoverLocation != null) {
			var hoverStatusChanged = !lastHovered || (lastHoverLocation == null || this.hoverLocation.nequals(lastHoverLocation));
			if(hoverStatusChanged) {
				this.lhct = new Date().getTime();
			} else {
				var sinceLast = new Date().getTime() - this.lhct;
				if(sinceLast > 2500 && !this.loadingThumbnail) {
					if(!(this.thumbnail != null && this.thumbnail.loadedAt > this.lhct)) {
						this.loadThumbnail();
					}
				} else if(this.thumbnail != null) {
					this.thumbnail = null;
				}
			}
		}
		this.__updateTextBoxes(stage);
		this.__updateViewed(stage);
		this.calculateGeometry(this.rect);
	}
	,render: function(stage,c) {
		pman_core_Ent.prototype.render.call(this,stage,c);
		var bg = this.getBackgroundColor();
		var fg = this.getForegroundColor();
		c.set_fillStyle(bg.toString());
		c.ctx.beginPath();
		var r = this.rect;
		c.ctx.rect(r.x,r.y,r.width,r.height);
		c.ctx.closePath();
		c.ctx.fill();
		c.set_fillStyle(fg.toString());
		c.ctx.beginPath();
		var r1 = this.viewed;
		c.ctx.rect(r1.x,r1.y,r1.width,r1.height);
		c.ctx.closePath();
		c.ctx.fill();
		var ctbx = this.controls.rect.x + (this.rect.x - this.controls.rect.x - this.ctb.get_width()) / 2;
		c.drawComponent(this.ctb,0,0,this.ctb.get_width(),this.ctb.get_height(),ctbx,this.rect.y,this.ctb.get_width(),this.ctb.get_height());
		var dtbx = this.rect.x + this.get_w() + (this.controls.rect.x + this.controls.get_w() - (this.rect.x + this.get_w()) - this.dtb.get_width()) / 2;
		c.drawComponent(this.dtb,0,0,this.dtb.get_width(),this.dtb.get_height(),dtbx,this.rect.y,this.dtb.get_width(),this.dtb.get_height());
	}
	,calculateGeometry: function(r) {
		this.set_w(this.controls.get_w() - this.tb_margin * 2);
		this.set_h(12);
		this.set_centerX(this.controls.get_centerX());
		this.rect.y = this.controls.rect.y + 5.0;
	}
	,loadThumbnail: function() {
		var _gthis = this;
		var track = this.controls.playerView.player.session.focusedTrack;
		if(track != null) {
			var driver = track.driver;
			if(driver.hasMediaObject()) {
				var mo = driver.getMediaObject();
				if(mo != null && js_Boot.__instanceof(mo,gryffin_display_Video)) {
					var video = js_Boot.__cast(mo , gryffin_display_Video);
					this.loadingThumbnail = true;
					var loader = new pman_async_SeekbarPreviewThumbnailLoader(track,this);
					var _this = this.controls.playerView.player.session;
					var cp = loader.loadPreview(Math.floor((_this.focusedTrack != null ? _this.focusedTrack.driver : null).getDurationTime() * (tannus_math__$Percent_Percent_$Impl_$.percent(this.viewed.width,this.get_w()) / 100)),video);
					cp.then(function(canvas) {
						var tmp = new Date().getTime();
						_gthis.thumbnail = { image : canvas, loadedAt : tmp};
						_gthis.loadingThumbnail = false;
					});
					cp.unless(function(error) {
						console.log("Error: " + error);
						_gthis.loadingThumbnail = false;
					});
				} else {
					return;
				}
			} else {
				return;
			}
		} else {
			return;
		}
	}
	,__updateViewed: function(stage) {
		var v = this.viewed;
		v.x = this.rect.x;
		v.y = this.rect.y;
		v.height = this.get_h();
		var _this = this.controls.playerView.player.session;
		if((_this.focusedTrack != null ? _this.focusedTrack.driver : null) != null) {
			if(this.hovered) {
				var mx = this.hoverLocation.get_x();
				mx -= this.rect.x;
				v.width = mx;
			} else {
				var _this1 = this.controls.playerView.player.session;
				var total = (_this1.focusedTrack != null ? _this1.focusedTrack.driver : null).getDurationTime();
				var _this2 = this.controls.playerView.player.session;
				var time = (_this2.focusedTrack != null ? _this2.focusedTrack.driver : null).getCurrentTime();
				var perc = tannus_math__$Percent_Percent_$Impl_$.percent(time,total);
				v.width = this.get_w() * (perc / 100);
			}
		} else {
			v.width = 0.0;
		}
	}
	,__updateTextBoxes: function(stage) {
		var _this = this.controls.playerView.player;
		var n;
		if(_this.session.focusedTrack != null) {
			var _this1 = _this.session;
			n = (_this1.focusedTrack != null ? _this1.focusedTrack.driver : null).getCurrentTime();
		} else {
			n = 0.0;
		}
		var cdur = tannus_media_CDur.fromSecondsI(Math.floor(n));
		this.ctb.set_text(cdur.toString());
		var tmp = this.dtb;
		var _this2 = this.controls.playerView.player;
		var this1;
		if(_this2.session.focusedTrack != null) {
			var _this3 = _this2.session;
			this1 = (_this3.focusedTrack != null ? _this3.focusedTrack.driver : null).getDuration();
		} else {
			this1 = tannus_media__$Duration_Duration_$Impl_$._new();
		}
		tmp.set_text(this1.toString());
		var a = this.ctb.get_width();
		var b = this.dtb.get_width();
		var mwtb = a > b ? a : b;
		mwtb += mwtb * 0.2;
		this.tb_margin = mwtb;
	}
	,__itb: function(t) {
		t.set_fontFamily("Ubuntu");
		t.set_fontSizeUnit("px");
		t.set_fontSize(10);
		t.set_color(tannus_graphics__$Color_TColor.fromString("#FFFFFF"));
	}
	,getBackgroundColor: function() {
		var _this = this.controls.cidm;
		if(__map_reserved["sb-bg"] != null ? _this.existsReserved("sb-bg") : _this.h.hasOwnProperty("sb-bg")) {
			var _this1 = this.controls.playerView.player.theme;
			var _this2 = this.controls.cidm;
			var id = __map_reserved["sb-bg"] != null ? _this2.getReserved("sb-bg") : _this2.h["sb-bg"];
			return _this1.derived.get(id);
		} else {
			var color = this.controls.playerView.player.theme.colors[0].darken(14.0);
			var this1 = this.controls.cidm;
			var v = this.controls.playerView.player.theme.save(color);
			var _this3 = this1;
			if(__map_reserved["sb-bg"] != null) {
				_this3.setReserved("sb-bg",v);
			} else {
				_this3.h["sb-bg"] = v;
			}
			return color;
		}
	}
	,getForegroundColor: function() {
		return this.controls.playerView.player.theme.colors[1];
	}
	,onClick: function(event) {
		var ex = event.position.get_x();
		ex -= this.rect.x;
		var perc = tannus_math__$Percent_Percent_$Impl_$.percent(ex,this.get_w());
		var _this = this.controls.playerView.player.session;
		if((_this.focusedTrack != null ? _this.focusedTrack.driver : null) != null) {
			var _this1 = this.controls.playerView.player.session;
			var ts = (_this1.focusedTrack != null ? _this1.focusedTrack.driver : null).getDurationTime();
			var _this2 = this.controls.playerView.player.session;
			(_this2.focusedTrack != null ? _this2.focusedTrack.driver : null).setCurrentTime(ts * (perc / 100));
		}
	}
	,getCurrentPercent: function() {
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.viewed.width,this.get_w());
	}
	,getCurrentTime: function() {
		var _this = this.controls.playerView.player.session;
		return (_this.focusedTrack != null ? _this.focusedTrack.driver : null).getDurationTime() * (tannus_math__$Percent_Percent_$Impl_$.percent(this.viewed.width,this.get_w()) / 100);
	}
	,get_playerView: function() {
		return this.controls.playerView;
	}
	,get_player: function() {
		return this.controls.playerView.player;
	}
	,get_sess: function() {
		return this.controls.playerView.player.session;
	}
	,get_pd: function() {
		var _this = this.controls.playerView.player.session;
		if(_this.focusedTrack != null) {
			return _this.focusedTrack.driver;
		} else {
			return null;
		}
	}
	,get_progress: function() {
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.viewed.width,this.get_w());
	}
	,controls: null
	,hoverLocation: null
	,hovered: null
	,viewed: null
	,thumb: null
	,ctb: null
	,dtb: null
	,tb_margin: null
	,lhct: null
	,loadingThumbnail: null
	,thumbnail: null
	,__class__: pman_ui_ctrl_SeekBar
	,__properties__: $extend(pman_core_Ent.prototype.__properties__,{get_progress:"get_progress",get_pd:"get_pd",get_sess:"get_sess",get_player:"get_player",get_playerView:"get_playerView"})
});
var pman_ui_ctrl_ShuffleButton = function(c) {
	pman_ui_ctrl_ImagePlayerControlButton.call(this,c);
	this.btnFloat = false;
};
$hxClasses["pman.ui.ctrl.ShuffleButton"] = pman_ui_ctrl_ShuffleButton;
pman_ui_ctrl_ShuffleButton.__name__ = ["pman","ui","ctrl","ShuffleButton"];
pman_ui_ctrl_ShuffleButton.__super__ = pman_ui_ctrl_ImagePlayerControlButton;
pman_ui_ctrl_ShuffleButton.prototype = $extend(pman_ui_ctrl_ImagePlayerControlButton.prototype,{
	initIcon: function() {
		var _gthis = this;
		this._il.push(pman_display_Icons.shuffleIcon(this.iconSize,this.iconSize).toImage());
		this._il.push(pman_display_Icons.shuffleIcon(this.iconSize,this.iconSize,function(p) {
			p.style.set_fill(_gthis.controls.playerView.player.theme.colors[1].toString());
		}).toImage());
	}
	,getIcon: function() {
		return this._il[this.controls.playerView.player.session.playbackProperties.shuffle ? 1 : 0];
	}
	,click: function(event) {
		this.controls.playerView.player.session.playbackProperties.shuffle = !this.controls.playerView.player.session.playbackProperties.shuffle;
	}
	,__class__: pman_ui_ctrl_ShuffleButton
});
var pman_ui_ctrl_ThumbPreviewBox = function(seekbar) {
	pman_core_Ent.call(this);
	this.bar = seekbar;
	this.border = new gryffin_ui_Border(6,tannus_graphics__$Color_TColor.fromString("#333333"),5);
	this.tbox = new gryffin_display_TextBox();
	this.tbox.set_fontFamily("Ubuntu");
	this.tbox.set_fontSize(14);
	this.tbox.set_fontSizeUnit("px");
	this.tbox.set_color(tannus_graphics__$Color_TColor.fromString("#FFFFFF"));
};
$hxClasses["pman.ui.ctrl.ThumbPreviewBox"] = pman_ui_ctrl_ThumbPreviewBox;
pman_ui_ctrl_ThumbPreviewBox.__name__ = ["pman","ui","ctrl","ThumbPreviewBox"];
pman_ui_ctrl_ThumbPreviewBox.__super__ = pman_core_Ent;
pman_ui_ctrl_ThumbPreviewBox.prototype = $extend(pman_core_Ent.prototype,{
	init: function(stage) {
		pman_core_Ent.prototype.init.call(this,stage);
	}
	,update: function(stage) {
		pman_core_Ent.prototype.update.call(this,stage);
		this.updateSize(stage);
		if(this.bar.hoverLocation != null) {
			this.set_centerX(this.bar.hoverLocation.get_x());
			var v = this.bar.rect.y - this.get_h() - 18;
			this.rect.y = v;
			var _this = this.bar;
			var progress = tannus_math__$Percent_Percent_$Impl_$.percent(_this.viewed.width,_this.get_w());
			var _this1 = this.bar.controls.playerView.player;
			var _this2;
			if(_this1.session.focusedTrack != null) {
				var _this3 = _this1.session;
				_this2 = (_this3.focusedTrack != null ? _this3.focusedTrack.driver : null).getDuration();
			} else {
				_this2 = tannus_media__$Duration_Duration_$Impl_$._new();
			}
			var ct = tannus_media_CDur.fromSecondsI(Math.floor((3600 * _this2.hours + 60 * _this2.minutes + _this2.seconds) * (progress / 100)));
			this.tbox.set_text(ct.toString());
		}
	}
	,updateSize: function(stage) {
		if((this.bar.thumbnail != null ? this.bar.thumbnail.image : null) != null) {
			var vp = this.bar.controls.playerView.player.view.rect;
			var this1 = new tannus_geom_CRectangle(0,0,(this.bar.thumbnail != null ? this.bar.thumbnail.image : null).canvas.width,(this.bar.thumbnail != null ? this.bar.thumbnail.image : null).canvas.height);
			var thumbRect = this1;
			thumbRect.scale(null,0.2 * vp.height);
			var a = thumbRect.width;
			var b = this.tbox.get_width();
			this.set_w((a > b ? a : b) + 30);
			this.set_h(thumbRect.height + 20 + 5);
		} else {
			this.set_w(this.tbox.get_width() + 30);
			this.set_h(20);
		}
	}
	,render: function(stage,c) {
		if(!this.bar.hovered) {
			return;
		}
		c.ctx.save();
		var total = this.getTotalRect();
		c.ctx.beginPath();
		c.set_fillStyle(this.border.color.toString());
		c.ctx.rect(total.x,total.y,total.width,total.height);
		c.ctx.closePath();
		c.ctx.fill();
		var this1 = new tannus_geom_CRectangle(this.rect.x,this.rect.y + this.get_h() - 20,this.get_w(),20);
		var ttr = this1;
		var ttx = ttr.x + ttr.width / 2 - this.tbox.get_width() / 2;
		var tty = ttr.y + ttr.height / 2 - this.tbox.get_height() / 2;
		c.drawComponent(this.tbox,0,0,this.tbox.get_width(),this.tbox.get_height(),ttx,tty,this.tbox.get_width(),this.tbox.get_height());
		if((this.bar.thumbnail != null ? this.bar.thumbnail.image : null) != null) {
			c.drawComponent(this.bar.thumbnail != null ? this.bar.thumbnail.image : null,0,0,(this.bar.thumbnail != null ? this.bar.thumbnail.image : null).canvas.width,(this.bar.thumbnail != null ? this.bar.thumbnail.image : null).canvas.height,this.rect.x,this.rect.y,this.get_w(),this.get_h() - 20);
		}
		c.ctx.beginPath();
		c.set_shadowBlur(10);
		c.set_shadowColor(this.border.color.darken(12).toString());
		c.set_strokeStyle(this.border.color.toString());
		c.set_lineWidth(this.border.width);
		if(this.border.radius == 0) {
			var r = this.rect;
			c.ctx.rect(r.x,r.y,r.width,r.height);
		} else {
			var rect = this.rect;
			c.roundRect(rect.x,rect.y,rect.width,rect.height,this.border.radius);
		}
		c.ctx.closePath();
		c.ctx.stroke();
		c.ctx.restore();
	}
	,getTotalRect: function() {
		var this1 = new tannus_geom_CRectangle(0,0,0,0);
		var r = this1;
		if((this.bar.thumbnail != null ? this.bar.thumbnail.image : null) != null) {
			var a = (this.bar.thumbnail != null ? this.bar.thumbnail.image : null).canvas.width;
			var b = Math.ceil(this.tbox.get_width());
			r.width = (a > b ? a : b) + 30;
			r.height = (this.bar.thumbnail != null ? this.bar.thumbnail.image : null).canvas.height + 25;
		} else {
			r.width = Math.ceil(this.tbox.get_width() + 30);
			r.height = 20;
		}
		if(this.bar.hoverLocation != null) {
			r.y = Math.floor(this.bar.rect.y - r.height - 18);
			r.x = this.bar.hoverLocation.get_x() - r.width / 2;
		}
		return r;
	}
	,get_player: function() {
		return this.bar.controls.playerView.player;
	}
	,get_thumb: function() {
		if(this.bar.thumbnail != null) {
			return this.bar.thumbnail.image;
		} else {
			return null;
		}
	}
	,get_target: function() {
		return this.bar.hoverLocation;
	}
	,bar: null
	,border: null
	,tbox: null
	,__class__: pman_ui_ctrl_ThumbPreviewBox
	,__properties__: $extend(pman_core_Ent.prototype.__properties__,{get_target:"get_target",get_thumb:"get_thumb",get_player:"get_player"})
});
var pman_ui_pl_SearchWidget = function(p,l) {
	foundation_Pane.call(this);
	this.player = p;
	this.playlistView = l;
	this.build();
};
$hxClasses["pman.ui.pl.SearchWidget"] = pman_ui_pl_SearchWidget;
pman_ui_pl_SearchWidget.__name__ = ["pman","ui","pl","SearchWidget"];
pman_ui_pl_SearchWidget.__super__ = foundation_Pane;
pman_ui_pl_SearchWidget.prototype = $extend(foundation_Pane.prototype,{
	populate: function() {
		this.searchInput = new foundation_TextInput();
		this.append(this.searchInput);
		this.__events();
		tannus_html__$Element_Element_$Impl_$.get_style(this.el).applyObject({ "width" : "98%", "margin-left" : "auto", "margin-right" : "auto"});
	}
	,onkeyup: function(event) {
		var _g = event.key;
		if(_g == 13) {
			this.submit();
		}
	}
	,submit: function() {
		var d = this.getData();
		var tmp = d.search != null;
	}
	,getData: function() {
		var inputText = this.searchInput.getValue();
		if(inputText != null) {
			inputText = StringTools.trim(inputText);
			if(inputText.length == 0) {
				inputText = null;
			}
		}
		return { search : inputText};
	}
	,__events: function() {
		this.searchInput.on("keydown",function(event) {
			event.stopPropogation();
		});
		this.searchInput.on("keyup",$bind(this,this.onkeyup));
	}
	,player: null
	,playlistView: null
	,inputRow: null
	,searchInput: null
	,__class__: pman_ui_pl_SearchWidget
});
var pman_ui_pl_TrackView = function(v,t) {
	this.menuOpen = false;
	foundation_Pane.call(this);
	this.addClass("track");
	this.list = v;
	this.track = t;
	this.build();
};
$hxClasses["pman.ui.pl.TrackView"] = pman_ui_pl_TrackView;
pman_ui_pl_TrackView.__name__ = ["pman","ui","pl","TrackView"];
pman_ui_pl_TrackView.__super__ = foundation_Pane;
pman_ui_pl_TrackView.prototype = $extend(foundation_Pane.prototype,{
	populate: function() {
		this.title = new foundation_Pane();
		this.title.addClass("title");
		this.title.set_text(this.track.provider.getName());
		this.append(this.title);
		this.forwardEvents(["click","contextmenu","mousedown","mouseup","mousemove"],null,tannus_events_MouseEvent.fromJqEvent);
		this.on("click",$bind(this,this.onLeftClick));
		this.on("contextmenu",$bind(this,this.onRightClick));
		tannus_html__$Element_Element_$Impl_$.plugin(this.el,"disableSelection");
		this.configureDragAndDropRearrangement();
	}
	,onLeftClick: function(event) {
		event.cancel();
		if(this.list.player.session.focusedTrack != this.track) {
			this.list.player.openTrack(this.track);
		}
	}
	,onRightClick: function(event) {
		var _gthis = this;
		event.cancel();
		var ctxMenu = electron_ext_Menu.buildFromTemplate([{ label : "Play", click : function(x,y,z) {
			_gthis.list.player.openTrack(_gthis.track);
		}},{ label : "Play Next", click : function(x1,y1,z1) {
			_gthis.list.player.session.playlist.move(_gthis.track,function() {
				return _gthis.list.player.session.indexOfCurrentMedia() + 1;
			});
		}},{ label : "Remove from Playlist", click : function(x2,y2,z2) {
			_gthis.list.player.session.playlist.remove(_gthis.track);
		}},{ type : "separator"},{ label : "Clear Playlist", click : function(x3,y3,z3) {
			_gthis.list.player.clearPlaylist();
		}},{ label : "Save Playlist"},{ label : "Export Playlist"}]);
		this.menuOpen = true;
		ctxMenu.popup();
	}
	,configureDragAndDropRearrangement: function() {
		var _gthis = this;
		var this1 = $("<li><div class=\"drop-indicator\"></div></li>");
		var di = this1;
		var dragging = false;
		this.on("mousedown",function(event) {
			if(_gthis.menuOpen) {
				_gthis.menuOpen = false;
				return;
			}
			if(event.button != 1) {
				console.log(event.button);
				return;
			}
			var start = event.position;
			_gthis.list.once("mousemove",function(event1) {
				dragging = true;
			});
			_gthis.list.once("mouseup",function(event2) {
				if(event2.button != 1) {
					return;
				}
				if(dragging) {
					var tvOver = _gthis.list.findTrackViewByPoint(event2.position);
					if(tvOver != null) {
						var t = tvOver.track;
						var r = tvOver.rect();
						var hwm = r.y + r.height / 2;
						di.remove();
						dragging = false;
						if(event2.position.get_y() > hwm) {
							_gthis.list.player.session.playlist.move(_gthis.track,function() {
								return _gthis.list.player.session.playlist.indexOf(t) + 1;
							});
						} else {
							_gthis.list.player.session.playlist.move(_gthis.track,function() {
								return _gthis.list.player.session.playlist.indexOf(t) - 1;
							});
						}
					}
				}
			});
		});
		this.list.on("mousemove",function(event3) {
			if(dragging) {
				var tvOver1 = _gthis.list.findTrackViewByPoint(event3.position);
				if(tvOver1 != null) {
					var r1 = tvOver1.rect();
					var hwm1 = r1.y + r1.height / 2;
					di.remove();
					var this2 = $("<li><div class=\"drop-indicator\"></div></li>");
					di = this2;
					(event3.position.get_y() > hwm1 ? ($_=tvOver1.parentWidget,$bind($_,$_.after)) : ($_=tvOver1.parentWidget,$bind($_,$_.before)))(di);
				}
			}
		});
	}
	,focused: function(value) {
		if(value != null) {
			(value ? $bind(this,this.addClass) : $bind(this,this.removeClass))("focused");
		}
		return this.el.hasClass("focused");
	}
	,hovered: function(value) {
		if(value != null) {
			(value ? $bind(this,this.addClass) : $bind(this,this.removeClass))("hovered");
		}
		return this.el.hasClass("hovered");
	}
	,cg: function(name) {
		return this.el.hasClass(name);
	}
	,cs: function(name,value) {
		(value ? $bind(this,this.addClass) : $bind(this,this.removeClass))(name);
	}
	,c: function(name,value) {
		if(value != null) {
			(value ? $bind(this,this.addClass) : $bind(this,this.removeClass))(name);
		}
		return this.el.hasClass(name);
	}
	,get_player: function() {
		return this.list.player;
	}
	,get_session: function() {
		return this.list.player.session;
	}
	,get_playlist: function() {
		return this.list.player.session.playlist;
	}
	,get_li: function() {
		return this.parentWidget;
	}
	,list: null
	,track: null
	,title: null
	,menuOpen: null
	,__class__: pman_ui_pl_TrackView
	,__properties__: $extend(foundation_Pane.prototype.__properties__,{get_li:"get_li",get_playlist:"get_playlist",get_session:"get_session",get_player:"get_player"})
});
var tannus_chrome_FileSystem = function() { };
$hxClasses["tannus.chrome.FileSystem"] = tannus_chrome_FileSystem;
tannus_chrome_FileSystem.__name__ = ["tannus","chrome","FileSystem"];
tannus_chrome_FileSystem.__properties__ = {get_lib:"get_lib"}
tannus_chrome_FileSystem.requestFileSystem = function(volume,cb) {
	chrome.fileSystem.requestFileSystem({ "volumeId" : volume, "writable" : true},cb);
};
tannus_chrome_FileSystem.getVolumeList = function(cb) {
	chrome.fileSystem.getVolumeList(cb);
};
tannus_chrome_FileSystem.chooseEntry = function(options,cb) {
	chrome.fileSystem.chooseEntry(options,function(entry) {
		var all = [];
		var tn = tannus_internal_TypeTools.typename(entry);
		if(entry != null) {
			if(tn == "Array") {
				all = all.concat(entry);
			} else {
				all.push(entry);
			}
		}
		console.log(all);
		cb(all);
	});
};
tannus_chrome_FileSystem.retainEntry = function(entry) {
	return chrome.fileSystem.retainEntry(entry);
};
tannus_chrome_FileSystem.restoreEntry = function(id,cb) {
	chrome.fileSystem.restoreEntry(id,cb);
};
tannus_chrome_FileSystem.isRestorable = function(id,cb) {
	chrome.fileSystem.isRestorable(id,cb);
};
tannus_chrome_FileSystem.canRestore = function(id) {
	return new tannus_ds_Promise(function(accept,reject) {
		chrome.fileSystem.isRestorable(id,function(status) {
			accept(status);
		});
	},null).bool();
};
tannus_chrome_FileSystem.chooseDirectory = function() {
	return new tannus_ds_Promise(function(accept,reject) {
		tannus_chrome_FileSystem.chooseEntry({ type : "openDirectory"},function(entries) {
			var e = entries.shift();
			if(e == null || !e.isDirectory) {
				reject("Not a Directory!");
			} else {
				var this1 = e;
				accept(this1);
			}
		});
	},null);
};
tannus_chrome_FileSystem.chooseFile = function(writable,mustExist) {
	if(mustExist == null) {
		mustExist = true;
	}
	if(writable == null) {
		writable = false;
	}
	return new tannus_html_fs_FilePromise(function(provide) {
		var options = { };
		if(writable == true) {
			switch(mustExist) {
			case false:
				options.type = "saveFile";
				break;
			case true:
				options.type = "openWritableFile";
				break;
			}
		} else if(mustExist == false) {
			options.type = "saveFile";
		} else {
			options.type = "openFile";
		}
		tannus_chrome_FileSystem.chooseEntry(options,function(entries) {
			provide(entries[0]);
		});
	});
};
tannus_chrome_FileSystem.saveAs = function(name) {
	return new tannus_ds_Promise(function(accept,reject) {
		var options = { "type" : "saveFile", "suggestedName" : name};
		tannus_chrome_FileSystem.chooseEntry(options,function(entries) {
			if(chrome.runtime.lastError != null) {
				var error = chrome.runtime.lastError;
				console.log(error);
				reject(error);
				return;
			}
			if(entries.length > 0) {
				accept(entries[0]);
			} else {
				reject("No File Selected");
			}
		});
	},null);
};
tannus_chrome_FileSystem.getDisplayPath = function(entry,cb) {
	chrome.fileSystem.getDisplayPath(entry,cb);
};
tannus_chrome_FileSystem.get_lib = function() {
	return chrome.fileSystem;
};
var tannus_chrome_Runtime = function() { };
$hxClasses["tannus.chrome.Runtime"] = tannus_chrome_Runtime;
tannus_chrome_Runtime.__name__ = ["tannus","chrome","Runtime"];
tannus_chrome_Runtime.__properties__ = {get_lib:"get_lib",get_lastError:"get_lastError",get_id:"get_id"}
tannus_chrome_Runtime.reload = function() {
	chrome.runtime.reload();
};
tannus_chrome_Runtime.sendMessage = function(tid,data,onresponse) {
	chrome.runtime.sendMessage(tid,data,{ },function(response) {
		if(onresponse != null) {
			var f = onresponse;
			f(response);
		}
	});
};
tannus_chrome_Runtime.onMessageRaw = function(callb) {
	chrome.runtime.onMessage.addListener(callb);
};
tannus_chrome_Runtime.onMessage = function(callb) {
	chrome.runtime.onMessage.addListener(function(d,sendr,sendResponse) {
		callb({ "data" : d, "sender" : sendr, "respond" : sendResponse});
	});
};
tannus_chrome_Runtime.getBackgroundPage = function(cb) {
	if(tannus_chrome_Runtime._bg == null) {
		chrome.runtime.getBackgroundPage(function(w) {
			cb(tannus_chrome_Runtime._bg = w);
		});
	} else {
		cb(tannus_chrome_Runtime._bg);
	}
};
tannus_chrome_Runtime.isBackgroundPage = function(w,cb) {
	tannus_chrome_Runtime.getBackgroundPage(function(bg) {
		cb(w == bg);
	});
};
tannus_chrome_Runtime.inBackgroundPage = function(cb) {
	var this1 = window;
	tannus_chrome_Runtime.isBackgroundPage(this1,cb);
};
tannus_chrome_Runtime.get_id = function() {
	return Std.string(chrome.runtime.id) + "";
};
tannus_chrome_Runtime.get_lastError = function() {
	return chrome.runtime.lastError;
};
tannus_chrome_Runtime.get_lib = function() {
	return chrome.runtime;
};
var tannus_chrome__$Tab_Tab_$Impl_$ = {};
$hxClasses["tannus.chrome._Tab.Tab_Impl_"] = tannus_chrome__$Tab_Tab_$Impl_$;
tannus_chrome__$Tab_Tab_$Impl_$.__name__ = ["tannus","chrome","_Tab","Tab_Impl_"];
tannus_chrome__$Tab_Tab_$Impl_$.__properties__ = {get_value:"get_value"}
tannus_chrome__$Tab_Tab_$Impl_$._new = function(ct) {
	var this1 = ct;
	return this1;
};
tannus_chrome__$Tab_Tab_$Impl_$.update = function(this1,props,cb) {
	tannus_chrome_Tabs.update(this1.id,props,cb);
};
tannus_chrome__$Tab_Tab_$Impl_$.duplicate = function(this1,cb) {
	tannus_chrome_Tabs.duplicate(this1.id,cb);
};
tannus_chrome__$Tab_Tab_$Impl_$.move = function(this1,offset,window,cb) {
	tannus_chrome_Tabs.move(this1.id,offset,window,cb);
};
tannus_chrome__$Tab_Tab_$Impl_$.remove = function(this1,cb) {
	tannus_chrome_Tabs.remove(this1.id,cb);
};
tannus_chrome__$Tab_Tab_$Impl_$.reload = function(this1,bypassCache,cb) {
	var opts = { };
	if(bypassCache != null) {
		var tmp;
		var tmp1;
		if(opts.__properties__) {
			tmp = opts.__properties__["set_" + "bypassCache"];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			opts[tmp](bypassCache);
		} else {
			opts["bypassCache"] = bypassCache;
		}
		var tmp2;
		if(opts == null) {
			null;
		} else {
			var tmp3;
			if(opts.__properties__) {
				tmp2 = opts.__properties__["get_" + "bypassCache"];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				opts[tmp2]();
			}
		}
	}
	tannus_chrome_Tabs.reload(this1.id,opts,function(t) {
		if(cb != null) {
			cb();
		}
	});
};
tannus_chrome__$Tab_Tab_$Impl_$.sendMessage = function(this1,data,onres) {
	chrome.tabs.sendMessage(this1.id,data,{ },onres);
};
tannus_chrome__$Tab_Tab_$Impl_$.executeScript = function(this1,path,code,cb) {
	tannus_chrome_Tabs.executeScript(this1.id,path,code,cb);
};
tannus_chrome__$Tab_Tab_$Impl_$.get_value = function(this1) {
	return this1;
};
var tannus_chrome_Tabs = function() { };
$hxClasses["tannus.chrome.Tabs"] = tannus_chrome_Tabs;
tannus_chrome_Tabs.__name__ = ["tannus","chrome","Tabs"];
tannus_chrome_Tabs.__properties__ = {get_lib:"get_lib"}
tannus_chrome_Tabs.getAll = function(callb) {
	tannus_chrome_Windows.getAll(function(wins) {
		var tablist = [];
		var _g = 0;
		while(_g < wins.length) {
			var win = wins[_g];
			++_g;
			var tabs = win.tabs;
			tablist = tablist.concat(tabs);
		}
		callb(tablist);
	});
};
tannus_chrome_Tabs.query = function(queryStr,cb) {
	tannus_chrome_Tabs.getAll(function(tabs) {
		var otabs = tabs;
		var results = otabs.filter(function(t) {
			var this1 = new tannus_nore_CSelector(queryStr);
			var sel = this1;
			return sel.test(t);
		});
		cb(results);
	});
};
tannus_chrome_Tabs.getCurrent = function(cb) {
	chrome.tabs.getCurrent(cb);
};
tannus_chrome_Tabs.get = function(id,cb) {
	chrome.tabs.get(id,cb);
};
tannus_chrome_Tabs.create = function(options,cb) {
	chrome.tabs.create(options,cb);
};
tannus_chrome_Tabs.update = function(id,props,cb) {
	chrome.tabs.update(id,props,function(tab) {
		if(cb != null) {
			cb(tab);
		}
	});
};
tannus_chrome_Tabs.reload = function(id,opts,cb) {
	chrome.tabs.reload(id,opts,function(tab) {
		if(cb != null) {
			cb(tab);
		}
	});
};
tannus_chrome_Tabs.duplicate = function(id,cb) {
	chrome.tabs.duplicate(id,function(clone) {
		if(cb != null) {
			cb(clone);
		}
	});
};
tannus_chrome_Tabs.move = function(id,index,windowId,cb) {
	chrome.tabs.move(id,{ "windowId" : windowId, "index" : index},function(tab) {
		cb();
	});
};
tannus_chrome_Tabs.remove = function(id,cb) {
	chrome.tabs.remove(id,function() {
		if(cb != null) {
			cb();
		}
	});
};
tannus_chrome_Tabs.executeScript = function(id,path,code,cb) {
	var opts = { };
	if(path != null) {
		var tmp;
		var tmp1;
		if(opts.__properties__) {
			tmp = opts.__properties__["set_" + "file"];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			opts[tmp](path);
		} else {
			opts["file"] = path;
		}
		var tmp2;
		if(opts == null) {
			null;
		} else {
			var tmp3;
			if(opts.__properties__) {
				tmp2 = opts.__properties__["get_" + "file"];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				opts[tmp2]();
			}
		}
	}
	if(code != null) {
		var tmp4;
		var tmp5;
		if(opts.__properties__) {
			tmp4 = opts.__properties__["set_" + "code"];
			tmp5 = tmp4;
		} else {
			tmp5 = false;
		}
		if(tmp5) {
			opts[tmp4](code);
		} else {
			opts["code"] = code;
		}
		var tmp6;
		if(opts == null) {
			null;
		} else {
			var tmp7;
			if(opts.__properties__) {
				tmp6 = opts.__properties__["get_" + "code"];
				tmp7 = tmp6;
			} else {
				tmp7 = false;
			}
			if(tmp7) {
				opts[tmp6]();
			}
		}
	}
	chrome.tabs.executeScript(id,opts,function(res) {
		if(cb != null) {
			cb();
		}
	});
};
tannus_chrome_Tabs.focusOrCreateTab = function(url,cb) {
	var t = null;
	tannus_chrome_Tabs.getAll(function(tabs) {
		var _g = 0;
		while(_g < tabs.length) {
			var tab = tabs[_g];
			++_g;
			if(tab.url.s == url) {
				t = tab;
			}
		}
		if(t != null) {
			tannus_chrome_Tabs.update(t.id,{ "active" : true},function(tab1) {
				if(cb != null) {
					cb(tab1);
				}
			});
		} else {
			var opts = { "url" : url, "active" : true};
			tannus_chrome_Tabs.create(opts,function(tab2) {
				if(cb != null) {
					cb(tab2);
				}
			});
		}
	});
};
tannus_chrome_Tabs.get_lib = function() {
	return chrome.tabs;
};
var tannus_chrome__$Window_Window_$Impl_$ = {};
$hxClasses["tannus.chrome._Window.Window_Impl_"] = tannus_chrome__$Window_Window_$Impl_$;
tannus_chrome__$Window_Window_$Impl_$.__name__ = ["tannus","chrome","_Window","Window_Impl_"];
tannus_chrome__$Window_Window_$Impl_$._new = function(tw) {
	var this1 = tw;
	return this1;
};
tannus_chrome__$Window_Window_$Impl_$.update = function(this1,changes,done) {
	tannus_chrome_Windows.update(this1.id,changes).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.state = function(this1,nstate,cb) {
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ "state" : nstate}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.focus = function(this1,nfoc,cb) {
	if(nfoc == null) {
		nfoc = true;
	}
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ "focused" : nfoc}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.minimize = function(this1,cb) {
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ "state" : "minimized"}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.maximize = function(this1,cb) {
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ "state" : "maximized"}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.normalize = function(this1,cb) {
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ "state" : "normal"}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.fullscreen = function(this1,cb) {
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ "state" : "fullscreen"}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.close = function(this1,cb) {
	var id = this1.id;
	chrome.windows.remove(id,cb);
};
var tannus_chrome__$WindowData_WindowData_$Impl_$ = {};
$hxClasses["tannus.chrome._WindowData.WindowData_Impl_"] = tannus_chrome__$WindowData_WindowData_$Impl_$;
tannus_chrome__$WindowData_WindowData_$Impl_$.__name__ = ["tannus","chrome","_WindowData","WindowData_Impl_"];
tannus_chrome__$WindowData_WindowData_$Impl_$._new = function(o) {
	var this1 = new tannus_chrome_CWindowData(o);
	return this1;
};
tannus_chrome__$WindowData_WindowData_$Impl_$.fromDynamic = function(d) {
	var this1 = new tannus_chrome_CWindowData(d);
	return this1;
};
tannus_chrome__$WindowData_WindowData_$Impl_$.fromObject = function(o) {
	var this1 = new tannus_chrome_CWindowData(o);
	return this1;
};
var tannus_chrome_CWindowData = function(o) {
	this.url = [];
	var tmp;
	var _url;
	if(o == null) {
		_url = null;
	} else {
		var _url1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + "url"];
			_url1 = tmp;
		} else {
			_url1 = false;
		}
		if(_url1) {
			_url = o[tmp]();
		} else {
			_url = o["url"];
		}
	}
	var _url2 = _url;
	if(_url2 != null ? _url2 : _url2) {
		if((_url2 instanceof Array) && _url2.__enum__ == null) {
			this.url = this.url.concat((js_Boot.__cast(_url2 , Array)).map(function(s) {
				return Std.string(s);
			}));
		} else if(typeof(_url2) == "string") {
			this.url.push((_url2 != null ? _url2 : _url2) + "");
		}
	}
	var tmp1;
	var tmp2;
	var this1;
	if(o == null) {
		this1 = null;
	} else {
		var this2;
		if(o.__properties__) {
			tmp2 = o.__properties__["get_" + "focused"];
			this2 = tmp2;
		} else {
			this2 = false;
		}
		if(this2) {
			this1 = o[tmp2]();
		} else {
			this1 = o["focused"];
		}
	}
	var this3 = this1;
	var tmp3;
	var alt;
	if(o == null) {
		alt = null;
	} else {
		var alt1;
		if(o.__properties__) {
			tmp3 = o.__properties__["get_" + "active"];
			alt1 = tmp3;
		} else {
			alt1 = false;
		}
		if(alt1) {
			alt = o[tmp3]();
		} else {
			alt = o["active"];
		}
	}
	if(!(this3 != null ? this3 : alt)) {
		tmp1 = true;
	} else {
		tmp1 = true;
	}
	this.focused = tmp1;
	var tmp4;
	var this4;
	if(o == null) {
		this4 = null;
	} else {
		var this5;
		if(o.__properties__) {
			tmp4 = o.__properties__["get_" + "incognito"];
			this5 = tmp4;
		} else {
			this5 = false;
		}
		if(this5) {
			this4 = o[tmp4]();
		} else {
			this4 = o["incognito"];
		}
	}
	var this6 = this4;
	this.incognito = this6 != null && this6;
	var tmp5;
	var this7;
	if(o == null) {
		this7 = null;
	} else {
		var this8;
		if(o.__properties__) {
			tmp5 = o.__properties__["get_" + "type"];
			this8 = tmp5;
		} else {
			this8 = false;
		}
		if(this8) {
			this7 = o[tmp5]();
		} else {
			this7 = o["type"];
		}
	}
	var this9 = this7;
	this.type = this9 != null ? this9 : "normal";
	var tmp6;
	var this10;
	if(o == null) {
		this10 = null;
	} else {
		var this11;
		if(o.__properties__) {
			tmp6 = o.__properties__["get_" + "left"];
			this11 = tmp6;
		} else {
			this11 = false;
		}
		if(this11) {
			this10 = o[tmp6]();
		} else {
			this10 = o["left"];
		}
	}
	var this12 = this10;
	this.left = this12 != null ? this12 : 0;
	var tmp7;
	var this13;
	if(o == null) {
		this13 = null;
	} else {
		var this14;
		if(o.__properties__) {
			tmp7 = o.__properties__["get_" + "top"];
			this14 = tmp7;
		} else {
			this14 = false;
		}
		if(this14) {
			this13 = o[tmp7]();
		} else {
			this13 = o["top"];
		}
	}
	var this15 = this13;
	this.top = this15 != null ? this15 : 0;
	var tmp8;
	var this16;
	if(o == null) {
		this16 = null;
	} else {
		var this17;
		if(o.__properties__) {
			tmp8 = o.__properties__["get_" + "width"];
			this17 = tmp8;
		} else {
			this17 = false;
		}
		if(this17) {
			this16 = o[tmp8]();
		} else {
			this16 = o["width"];
		}
	}
	if(this16 != null) {
		var tmp9;
		var this18;
		if(o == null) {
			this18 = null;
		} else {
			var this19;
			if(o.__properties__) {
				tmp9 = o.__properties__["get_" + "width"];
				this19 = tmp9;
			} else {
				this19 = false;
			}
			if(this19) {
				this18 = o[tmp9]();
			} else {
				this18 = o["width"];
			}
		}
		var this20 = this18;
		this.width = this20 != null ? this20 : this20;
	}
	var tmp10;
	var this21;
	if(o == null) {
		this21 = null;
	} else {
		var this22;
		if(o.__properties__) {
			tmp10 = o.__properties__["get_" + "height"];
			this22 = tmp10;
		} else {
			this22 = false;
		}
		if(this22) {
			this21 = o[tmp10]();
		} else {
			this21 = o["height"];
		}
	}
	if(this21 != null) {
		var tmp11;
		var this23;
		if(o == null) {
			this23 = null;
		} else {
			var this24;
			if(o.__properties__) {
				tmp11 = o.__properties__["get_" + "height"];
				this24 = tmp11;
			} else {
				this24 = false;
			}
			if(this24) {
				this23 = o[tmp11]();
			} else {
				this23 = o["height"];
			}
		}
		var this25 = this23;
		this.height = this25 != null ? this25 : this25;
	}
};
$hxClasses["tannus.chrome.CWindowData"] = tannus_chrome_CWindowData;
tannus_chrome_CWindowData.__name__ = ["tannus","chrome","CWindowData"];
tannus_chrome_CWindowData.prototype = {
	url: null
	,focused: null
	,incognito: null
	,type: null
	,left: null
	,top: null
	,width: null
	,height: null
	,__class__: tannus_chrome_CWindowData
};
var tannus_chrome_Windows = function() { };
$hxClasses["tannus.chrome.Windows"] = tannus_chrome_Windows;
tannus_chrome_Windows.__name__ = ["tannus","chrome","Windows"];
tannus_chrome_Windows.__properties__ = {get_lib:"get_lib"}
tannus_chrome_Windows.getAll = function(callb) {
	chrome.windows.getAll({ "populate" : true},function(wins) {
		callb(wins);
	});
};
tannus_chrome_Windows.all = function() {
	return new tannus_ds_Promise(function(accept,reject) {
		try {
			tannus_chrome_Windows.getAll(function(wins) {
				accept(wins);
			});
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			reject(err);
		}
	},null).array();
};
tannus_chrome_Windows.get = function(id) {
	return new tannus_ds_Promise(function(accept,reject) {
		chrome.windows.get(id,{ "populate" : true},function(win) {
			if(win != null) {
				accept(win);
			} else {
				reject("Window not found");
			}
		});
	},null);
};
tannus_chrome_Windows.create = function(data) {
	return new tannus_ds_Promise(function(accept,reject) {
		var this1 = new tannus_chrome_CWindowData(data);
		var wd = this1;
		chrome.windows.create(wd,function(win) {
			accept(win);
		});
	},null);
};
tannus_chrome_Windows.update = function(id,changes) {
	return new tannus_ds_Promise(function(accept,reject) {
		chrome.windows.update(id,changes,function(win) {
			accept(win);
		});
	},null);
};
tannus_chrome_Windows.remove = function(id,cb) {
	chrome.windows.remove(id,cb);
};
tannus_chrome_Windows.get_lib = function() {
	return chrome.windows;
};
var tannus_css__$FontFace_FontFace_$Impl_$ = {};
$hxClasses["tannus.css._FontFace.FontFace_Impl_"] = tannus_css__$FontFace_FontFace_$Impl_$;
tannus_css__$FontFace_FontFace_$Impl_$.__name__ = ["tannus","css","_FontFace","FontFace_Impl_"];
tannus_css__$FontFace_FontFace_$Impl_$.__properties__ = {set_source:"set_source",get_source:"get_source",set_family:"set_family",get_family:"get_family"}
tannus_css__$FontFace_FontFace_$Impl_$._new = function(sheet,family,source) {
	var this1 = new tannus_css_Rule(sheet,"@font-face");
	this1.set("font-family",family);
	this1.set("src","url(\"" + source + "\")");
	return this1;
};
tannus_css__$FontFace_FontFace_$Impl_$.get_family = function(this1) {
	return this1.get("font-family");
};
tannus_css__$FontFace_FontFace_$Impl_$.set_family = function(this1,v) {
	this1.set("font-family",v);
	return this1.get("font-family");
};
tannus_css__$FontFace_FontFace_$Impl_$.get_source = function(this1) {
	var _g = this1.property("src").get_values()[0];
	if(_g[1] == 5) {
		if(_g[2] == "url") {
			if(_g[3].length == 1) {
				if(_g[3][0][1] == 1) {
					var src = _g[3][0][2];
					return src;
				} else {
					throw new js__$Boot_HaxeError("Unabled to get the \"src\" of the FontFace");
				}
			} else {
				throw new js__$Boot_HaxeError("Unabled to get the \"src\" of the FontFace");
			}
		} else {
			throw new js__$Boot_HaxeError("Unabled to get the \"src\" of the FontFace");
		}
	} else {
		throw new js__$Boot_HaxeError("Unabled to get the \"src\" of the FontFace");
	}
};
tannus_css__$FontFace_FontFace_$Impl_$.set_source = function(this1,v) {
	this1.set("src","url(\"" + v + "\")");
	return v;
};
var tannus_css_Lexer = function() {
};
$hxClasses["tannus.css.Lexer"] = tannus_css_Lexer;
tannus_css_Lexer.__name__ = ["tannus","css","Lexer"];
tannus_css_Lexer.__interfaces__ = [tannus_ds_Stateful];
tannus_css_Lexer.quickLex = function(d) {
	return new tannus_css_Lexer().tokenize(d);
};
tannus_css_Lexer.prototype = {
	tokenize: function(data) {
		this.buffer = new tannus_io_ByteStack(data);
		this.tokens = [];
		while(!this.buffer.get_empty()) {
			var tk = this.token();
			if(tk != null) {
				this.tokens.push(tk);
			}
		}
		return this.tokens;
	}
	,token: function() {
		if(this.buffer.get_empty()) {
			return null;
		} else {
			var c = this.buffer.peek(0);
			if(Lambda.has([9,10,11,12,13,32],c)) {
				this.advance();
				return this.token();
			} else if(c == 64) {
				this.advance();
				var this1 = this.buffer;
				var n = HxOverrides.cca(":",0);
				var this2;
				if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
					throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
				}
				this2 = n;
				var name = StringTools.trim(this1.readUntil(this2).toString());
				this.advance();
				var this3 = this.buffer;
				var n1 = HxOverrides.cca(";",0);
				var this4;
				if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n1)) {
					throw new js__$Boot_HaxeError("Invalid Byte Value (" + n1 + ")!");
				}
				this4 = n1;
				var valtext = StringTools.trim(this3.readUntil(this4).toString());
				this.advance();
				return tannus_css_Token.TVar(name,new tannus_css_vals_Lexer().parse(new tannus_io_impl_NodeBinary(valtext.length,new Buffer(valtext))));
			} else if(new EReg("[^{}():;,]","").match(String.fromCharCode(c))) {
				var str = String.fromCharCode(this.advance());
				var tok = null;
				while(!this.buffer.get_empty()) {
					c = this.buffer.peek(0);
					if(c == 123) {
						var sel = StringTools.trim(str);
						var props = this.block();
						tok = tannus_css_Token.TRule(sel,props);
					} else if(c == 59) {
						if(StringTools.startsWith(str,".")) {
							var name1 = tannus_ds_StringUtils.after(str,".");
							tok = tannus_css_Token.TMixin(name1);
						} else {
							var name2 = StringTools.trim(tannus_ds_StringUtils.before(str,":"));
							var valtext1 = StringTools.trim(tannus_ds_StringUtils.after(str,":"));
							tok = tannus_css_Token.TProp(name2,new tannus_css_vals_Lexer().parse(new tannus_io_impl_NodeBinary(valtext1.length,new Buffer(valtext1))));
						}
					} else {
						str += String.fromCharCode(c);
					}
					this.advance();
					if(tok != null) {
						break;
					}
				}
				if(tok == null) {
					throw new js__$Boot_HaxeError("Error: unexpected end of input");
				}
				return tok;
			} else {
				var err = "Error: unexpected " + String.fromCharCode(c);
				console.log(err);
				throw new js__$Boot_HaxeError(err);
			}
		}
	}
	,block: function() {
		var c = this.buffer.peek(0);
		if(c == 123) {
			this.advance();
			var buf = "";
			var lvl = 1;
			while(!this.buffer.get_empty() && lvl > 0) {
				c = this.buffer.peek(0);
				if(c == 123) {
					++lvl;
				} else if(c == 125) {
					--lvl;
				}
				if(lvl > 0) {
					buf += String.fromCharCode(c);
				}
				this.advance();
			}
			return tannus_css_Lexer.quickLex(new tannus_io_impl_NodeBinary(buf.length,new Buffer(buf)));
		} else {
			throw new js__$Boot_HaxeError("Error: No block at current position");
		}
	}
	,next: function(i) {
		if(i == null) {
			i = 0;
		}
		return this.buffer.peek(i);
	}
	,advance: function(i) {
		if(i == null) {
			i = 0;
		}
		var r = this.buffer.pop();
		while(i > 0) {
			this.buffer.pop();
			--i;
		}
		return r;
	}
	,getState: function() {
		return { buffer : this.buffer.copy(), tokens : this.tokens.slice()};
	}
	,setState: function(s) {
		this.buffer = s.buffer;
		this.tokens = s.tokens;
	}
	,isSel: function(c) {
		return new EReg("[^{}():;,]","").match(String.fromCharCode(c));
	}
	,get_done: function() {
		return this.buffer.get_empty();
	}
	,buffer: null
	,tokens: null
	,__class__: tannus_css_Lexer
	,__properties__: {get_done:"get_done"}
};
var tannus_css_Parser = function() {
	this.rule = null;
	this.macros = new haxe_ds_StringMap();
};
$hxClasses["tannus.css.Parser"] = tannus_css_Parser;
tannus_css_Parser.__name__ = ["tannus","css","Parser"];
tannus_css_Parser.quickParse = function(tokens) {
	return new tannus_css_Parser().parse(tokens);
};
tannus_css_Parser.prototype = {
	parse: function(tree) {
		this.tokens = tree;
		this.sheet = new tannus_css_StyleSheet();
		this.heap = new tannus_ds_Stack();
		this.heap.add(new haxe_ds_StringMap());
		this.rule = null;
		while(!Lambda.empty(this.tokens)) this.next();
		return this.sheet;
	}
	,next: function() {
		var tk = this.tokens.shift();
		switch(tk[1]) {
		case 0:
			var body = tk[3];
			var selector = tk[2];
			var superRule = this.rule;
			if(this.rule != null) {
				this.rule = this.rule.child(selector);
			} else {
				this.rule = this.sheet.rule(selector);
			}
			this.subScope();
			this.subTree(body);
			this.superScope();
			this.rule = superRule;
			break;
		case 1:
			var val = tk[3];
			var name = tk[2];
			val = this.rewrite(val);
			this.rule.property(name).setValues(val);
			break;
		case 2:
			var name1 = tk[2];
			var mixinRule = this.sheet.getRule("." + name1);
			if(mixinRule != null) {
				var _g = 0;
				var _g1 = mixinRule.properties;
				while(_g < _g1.length) {
					var p = _g1[_g];
					++_g;
					console.log(Std.string(p.get_values()) + "");
					this.rule.set(p.name,p.value);
				}
			} else {
				throw new js__$Boot_HaxeError("MixinError: mixin " + name1 + " is not defined");
			}
			break;
		case 3:
			var val1 = tk[3];
			var name2 = tk[2];
			this.heap.peek().set(name2,val1);
			break;
		}
	}
	,rewrite: function(value) {
		var hunks = [];
		var _g = 0;
		while(_g < value.length) {
			var v = value[_g];
			++_g;
			switch(v[1]) {
			case 4:
				var name = v[2];
				if(this.heap.peek().exists(name)) {
					hunks.push(this.rewrite(this.heap.peek().get(name)));
				} else {
					var err = "Error: " + name + " is not defined";
					console.log(err);
					throw new js__$Boot_HaxeError(err);
				}
				break;
			case 5:
				var args = v[3];
				var name1 = v[2];
				args = this.rewrite(args);
				if(this.macros.exists(name1)) {
					hunks.push(this.callMacro(name1,args));
				} else {
					hunks.push([tannus_css_Value.VCall(name1,args)]);
				}
				break;
			default:
				hunks.push([v]);
			}
		}
		return tannus_ds_ArrayTools.flatten(hunks);
	}
	,subTree: function(stree) {
		var _tree = this.tokens;
		this.tokens = stree;
		while(!Lambda.empty(this.tokens)) this.next();
		this.tokens = _tree;
	}
	,subScope: function() {
		var sub = new haxe_ds_StringMap();
		var n = this.heap.peek().keys();
		while(n.hasNext()) {
			var n1 = n.next();
			var _this = this.heap.peek();
			var v = __map_reserved[n1] != null ? _this.getReserved(n1) : _this.h[n1];
			if(__map_reserved[n1] != null) {
				sub.setReserved(n1,v);
			} else {
				sub.h[n1] = v;
			}
		}
		this.heap.add(sub);
	}
	,superScope: function() {
		this.heap.pop();
	}
	,token: function() {
		return this.tokens.shift();
	}
	,isMacro: function(name) {
		var _this = this.macros;
		if(__map_reserved[name] != null) {
			return _this.existsReserved(name);
		} else {
			return _this.h.hasOwnProperty(name);
		}
	}
	,callMacro: function(name,args) {
		var _this = this.macros;
		var result = (__map_reserved[name] != null ? _this.getReserved(name) : _this.h[name])(args);
		result = this.rewrite(result);
		return result;
	}
	,defMacro: function(name,mfunc) {
		var _this = this.macros;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,mfunc);
		} else {
			_this.h[name] = mfunc;
		}
	}
	,get_scope: function() {
		return this.heap.peek();
	}
	,tokens: null
	,sheet: null
	,rule: null
	,heap: null
	,macros: null
	,__class__: tannus_css_Parser
	,__properties__: {get_scope:"get_scope"}
};
var tannus_css_Property = function(key,val) {
	this.name = key;
	this.value = val;
};
$hxClasses["tannus.css.Property"] = tannus_css_Property;
tannus_css_Property.__name__ = ["tannus","css","Property"];
tannus_css_Property.prototype = {
	setValues: function(val) {
		var hunks = val.map(function(item) {
			return tannus_css_vals_ValueTools.toString(item);
		});
		return this.value = hunks.join(" ");
	}
	,clone: function() {
		return new tannus_css_Property(this.name,this.value);
	}
	,get_values: function() {
		var s = this.value;
		return new tannus_css_vals_Lexer().parse(new tannus_io_impl_NodeBinary(s.length,new Buffer(s)));
	}
	,name: null
	,value: null
	,__class__: tannus_css_Property
	,__properties__: {get_values:"get_values"}
};
var tannus_css_Rule = function(par,sel,props) {
	this.parentRule = null;
	this.sheet = par;
	this.selector = sel;
	this.properties = props != null ? props : [];
};
$hxClasses["tannus.css.Rule"] = tannus_css_Rule;
tannus_css_Rule.__name__ = ["tannus","css","Rule"];
tannus_css_Rule.prototype = {
	child: function(childSel,props) {
		var sel = [this.selector," ",childSel].join("");
		var kid = this.sheet.rule(sel,props);
		kid.parentRule = this;
		return kid;
	}
	,set: function(name,value) {
		if(this.exists(name)) {
			var p = this.getProp(name);
			p.value = Std.string(value);
		} else {
			var p1 = new tannus_css_Property(name,Std.string(value));
			this.properties.push(p1);
		}
		this.sheet._update.call();
	}
	,exists: function(name) {
		return this.getProp(name) != null;
	}
	,get: function(name) {
		if(this.exists(name)) {
			return this.getProp(name).value;
		} else {
			return null;
		}
	}
	,property: function(name) {
		var p = this.getProp(name);
		if(p == null) {
			p = new tannus_css_Property(name,"");
			this.properties.push(p);
		}
		return p;
	}
	,getProp: function(name) {
		var _g = 0;
		var _g1 = this.properties;
		while(_g < _g1.length) {
			var prop = _g1[_g];
			++_g;
			if(prop.name == name) {
				return prop;
			}
		}
		return null;
	}
	,clone: function(nsheet) {
		return new tannus_css_Rule(nsheet != null ? nsheet : this.sheet,this.selector,this.properties.map(function(item) {
			return new tannus_css_Property(item.name,item.value);
		}));
	}
	,changed: function() {
		this.sheet._update.call();
	}
	,selector: null
	,sheet: null
	,properties: null
	,parentRule: null
	,__class__: tannus_css_Rule
};
var tannus_css_StyleSheet = $hx_exports["tannus"]["css"]["StyleSheet"] = function() {
	this.rules = [];
	this._update = new tannus_io_VoidSignal();
};
$hxClasses["tannus.css.StyleSheet"] = tannus_css_StyleSheet;
tannus_css_StyleSheet.__name__ = ["tannus","css","StyleSheet"];
tannus_css_StyleSheet.fromCSS = function(code) {
	var tokens = tannus_css_Lexer.quickLex(new tannus_io_impl_NodeBinary(code.length,new Buffer(code)));
	return new tannus_css_Parser().parse(tokens);
};
tannus_css_StyleSheet.prototype = {
	rule: function(selector,props) {
		var r;
		if(this.hasRule(selector)) {
			r = this.getRule(selector);
		} else {
			r = new tannus_css_Rule(this,selector);
			this.rules.push(r);
			this._update.call();
		}
		if(props != null) {
			var _g = 0;
			var this1 = props;
			var _g1 = Reflect.fields(this1).map(function(k) {
				var tmp;
				var _g11;
				if(this1 == null) {
					_g11 = null;
				} else {
					var _g12;
					if(this1.__properties__) {
						tmp = this1.__properties__["get_" + k];
						_g12 = tmp;
					} else {
						_g12 = false;
					}
					if(_g12) {
						_g11 = this1[tmp]();
					} else {
						_g11 = this1[k];
					}
				}
				return { "name" : k, "value" : _g11};
			});
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				r.set(p.name,p.value);
			}
			this._update.call();
		}
		return r;
	}
	,hasRule: function(sel) {
		return this.getRule(sel) != null;
	}
	,getRule: function(sel) {
		var _g = 0;
		var _g1 = this.rules;
		while(_g < _g1.length) {
			var rule = _g1[_g];
			++_g;
			if(rule.selector == sel) {
				return rule;
			}
		}
		return null;
	}
	,fontFace: function(family,source) {
		var r = new tannus_css_Rule(this,"@font-face");
		r.set("font-family",family);
		r.set("src","url(\"" + source + "\")");
		this.rules.push(r);
		this._update.call();
		return r;
	}
	,getFontFace: function(family) {
		var _g = 0;
		var _g1 = this.getAllFontFaces();
		while(_g < _g1.length) {
			var font = _g1[_g];
			++_g;
			if(font.get("font-family") == family) {
				return font;
			}
		}
		return null;
	}
	,hasFontFace: function(name) {
		return this.getFontFace(name) != null;
	}
	,getAllFontFaces: function() {
		return this.rules.filter(function(item) {
			return item.selector == "@font-face";
		});
	}
	,clone: function() {
		var c = new tannus_css_StyleSheet();
		c.rules = this.rules.map(function(item) {
			return new tannus_css_Rule(c != null ? c : item.sheet,item.selector,item.properties.map(function(item1) {
				return new tannus_css_Property(item1.name,item1.value);
			}));
		});
		return c;
	}
	,concat: function(other) {
		var sum = new tannus_css_StyleSheet();
		var _g = 0;
		var _g1 = this.rules.concat(other.rules);
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			sum.rules.push(new tannus_css_Rule(sum != null ? sum : r.sheet,r.selector,r.properties.map(function(item) {
				return new tannus_css_Property(item.name,item.value);
			})));
		}
		return sum;
	}
	,toString: function() {
		var w = new tannus_css_Writer();
		return w.generate(this).toString();
	}
	,toByteArray: function() {
		var w = new tannus_css_Writer();
		return w.generate(this);
	}
	,changed: function() {
		this._update.call();
	}
	,onchange: function(cb) {
		this._update.on(cb);
	}
	,rules: null
	,_update: null
	,__class__: tannus_css_StyleSheet
};
var tannus_css_Token = $hxClasses["tannus.css.Token"] = { __ename__ : ["tannus","css","Token"], __constructs__ : ["TRule","TProp","TMixin","TVar"] };
tannus_css_Token.TRule = function(selector,props) { var $x = ["TRule",0,selector,props]; $x.__enum__ = tannus_css_Token; $x.toString = $estr; return $x; };
tannus_css_Token.TProp = function(name,value) { var $x = ["TProp",1,name,value]; $x.__enum__ = tannus_css_Token; $x.toString = $estr; return $x; };
tannus_css_Token.TMixin = function(name) { var $x = ["TMixin",2,name]; $x.__enum__ = tannus_css_Token; $x.toString = $estr; return $x; };
tannus_css_Token.TVar = function(name,value) { var $x = ["TVar",3,name,value]; $x.__enum__ = tannus_css_Token; $x.toString = $estr; return $x; };
var tannus_css_Value = $hxClasses["tannus.css.Value"] = { __ename__ : ["tannus","css","Value"], __constructs__ : ["VIdent","VString","VNumber","VColor","VRef","VCall","VTuple","VComma"] };
tannus_css_Value.VIdent = function(id) { var $x = ["VIdent",0,id]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VString = function(str) { var $x = ["VString",1,str]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VNumber = function(num,unit) { var $x = ["VNumber",2,num,unit]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VColor = function(col) { var $x = ["VColor",3,col]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VRef = function(name) { var $x = ["VRef",4,name]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VCall = function(func,args) { var $x = ["VCall",5,func,args]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VTuple = function(vals) { var $x = ["VTuple",6,vals]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VComma = ["VComma",7];
tannus_css_Value.VComma.toString = $estr;
tannus_css_Value.VComma.__enum__ = tannus_css_Value;
var tannus_css_Writer = function() {
};
$hxClasses["tannus.css.Writer"] = tannus_css_Writer;
tannus_css_Writer.__name__ = ["tannus","css","Writer"];
tannus_css_Writer.prototype = {
	generate: function(sheet) {
		var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
		this.buffer = this1;
		var _g = 0;
		var _g1 = sheet.rules;
		while(_g < _g1.length) {
			var rule = _g1[_g];
			++_g;
			this.writeRule(rule);
		}
		return this.buffer;
	}
	,writeRule: function(rule) {
		var tab = "    ";
		var s = rule.selector + " {";
		this.writeln(new tannus_io_impl_NodeBinary(s.length,new Buffer(s)));
		var _g = 0;
		var _g1 = rule.properties;
		while(_g < _g1.length) {
			var prop = _g1[_g];
			++_g;
			var s1 = "" + tab + prop.name + ": " + prop.value + ";";
			this.writeln(new tannus_io_impl_NodeBinary(s1.length,new Buffer(s1)));
		}
		this.writeln(new tannus_io_impl_NodeBinary("}".length,new Buffer("}")));
	}
	,reset: function() {
		var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
		this.buffer = this1;
	}
	,write: function(what) {
		this.buffer.append(what);
	}
	,writeln: function(data) {
		var n = HxOverrides.cca("\n",0);
		var this1;
		if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
			throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
		}
		this1 = n;
		data.push(this1);
		this.buffer.append(data);
	}
	,buffer: null
	,__class__: tannus_css_Writer
};
var tannus_css_vals_Lexer = $hx_exports["tannus"]["css"]["vals"]["Lexer"] = function() {
};
$hxClasses["tannus.css.vals.Lexer"] = tannus_css_vals_Lexer;
tannus_css_vals_Lexer.__name__ = ["tannus","css","vals","Lexer"];
tannus_css_vals_Lexer.eof = function() {
	throw new js__$Boot_HaxeError(tannus_css_vals__$Lexer_Err.Eof);
};
tannus_css_vals_Lexer.unex = function(c) {
	throw new js__$Boot_HaxeError(tannus_css_vals__$Lexer_Err.Unexpected(c));
};
tannus_css_vals_Lexer.isUnit = function(c) {
	if(!(c >= 65 && c <= 90 || c >= 97 && c <= 122)) {
		return Lambda.has([37],c);
	} else {
		return true;
	}
};
tannus_css_vals_Lexer.parseString = function(s) {
	return new tannus_css_vals_Lexer().parse(new tannus_io_impl_NodeBinary(s.length,new Buffer(s)));
};
tannus_css_vals_Lexer.prototype = {
	parse: function(snip) {
		this.buffer = new tannus_io_ByteStack(snip);
		this.tree = [];
		while(!this.buffer.get_empty()) {
			var val = this.parseNext();
			if(val != null) {
				this.tree.push(val);
			}
		}
		return this.tree;
	}
	,parseNext: function() {
		if(this.buffer.get_empty()) {
			return null;
		}
		var c = this.buffer.peek(0);
		if(Lambda.has([9,10,11,12,13,32],c)) {
			this.advance();
			return this.parseNext();
		} else if(c >= 65 && c <= 90 || c >= 97 && c <= 122 || c == 95 || this.buffer.peek() == 64) {
			var ident = String.fromCharCode(this.advance());
			while(true) {
				var tmp;
				if(!this.buffer.get_empty()) {
					var tmp1;
					var this1 = this.buffer.peek(0);
					if(!(this1 >= 65 && this1 <= 90 || this1 >= 97 && this1 <= 122)) {
						var this2 = this.buffer.peek(0);
						if(this2 >= 48) {
							tmp1 = this2 <= 57;
						} else {
							tmp1 = false;
						}
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						tmp = this.buffer.peek(0) == 95;
					} else {
						tmp = true;
					}
				} else {
					tmp = false;
				}
				if(!tmp) {
					break;
				}
				ident += String.fromCharCode(this.advance());
			}
			if(StringTools.startsWith(ident,"@")) {
				ident = tannus_ds_StringUtils.after(ident,"@");
				return tannus_css_Value.VRef(ident);
			} else {
				if(this.buffer.get_empty()) {
					return tannus_css_Value.VIdent(ident);
				}
				c = this.buffer.peek(0);
				if(c == 40) {
					return tannus_css_Value.VCall(ident,this.tuple());
				} else {
					return tannus_css_Value.VIdent(ident);
				}
			}
		} else if(c >= 48 && c <= 57) {
			var snum = String.fromCharCode(this.advance());
			while(true) {
				var tmp2;
				if(!this.buffer.get_empty()) {
					var this3 = this.buffer.peek(0);
					if(!(this3 >= 48 && this3 <= 57)) {
						tmp2 = this.buffer.peek(0) == 46;
					} else {
						tmp2 = true;
					}
				} else {
					tmp2 = false;
				}
				if(!tmp2) {
					break;
				}
				snum += String.fromCharCode(this.advance());
			}
			var num = parseFloat(snum);
			var unit = null;
			if(!this.buffer.get_empty() && tannus_css_vals_Lexer.isUnit(this.buffer.peek(0))) {
				var su = String.fromCharCode(this.advance());
				while(!this.buffer.get_empty() && tannus_css_vals_Lexer.isUnit(this.buffer.peek(0))) su += String.fromCharCode(this.advance());
				if(Lambda.has(["em","ex","ch","rem","vw","vh","%","cm","mm","in","px","pt","pc"],su)) {
					unit = su;
				} else {
					var e = "CSSUnitError: " + su + " is not a valid unit!";
					throw new js__$Boot_HaxeError(e);
				}
			}
			return tannus_css_Value.VNumber(num,unit);
		} else if(c == 35) {
			var scol = String.fromCharCode(this.advance());
			while(!this.buffer.get_empty() && new EReg("[0-9A-F]","i").match(String.fromCharCode(this.buffer.peek(0)))) scol += String.fromCharCode(this.advance());
			var color = tannus_graphics__$Color_TColor.fromString(scol);
			return tannus_css_Value.VColor(color);
		} else if(c == 34 || c == 39) {
			var del = c;
			var str = "";
			this.advance();
			c = this.buffer.peek(0);
			while(!this.buffer.get_empty()) {
				if(c == del) {
					this.advance();
					break;
				} else {
					str += String.fromCharCode(this.buffer.peek());
					this.advance();
				}
				c = this.buffer.peek(0);
			}
			return tannus_css_Value.VString(str);
		} else if(c == 44) {
			this.advance();
			return tannus_css_Value.VComma;
		} else {
			throw new js__$Boot_HaxeError(tannus_css_vals__$Lexer_Err.Unexpected(this.buffer.peek()));
		}
	}
	,tuple: function() {
		var c = this.buffer.peek(0);
		var str = "";
		var lvl = 1;
		this.advance();
		while(lvl > 0) {
			c = this.buffer.peek(0);
			if(c == 40) {
				++lvl;
			} else if(c == 41) {
				--lvl;
			}
			if(lvl > 0) {
				str += String.fromCharCode(c);
			}
			this.advance();
		}
		var sublexer = new tannus_css_vals_Lexer();
		var subvals = sublexer.parse(new tannus_io_impl_NodeBinary(str.length,new Buffer(str)));
		var tupvals = [];
		var tmp = null;
		var _g = 0;
		while(_g < subvals.length) {
			var sv = subvals[_g];
			++_g;
			if(sv[1] == 7) {
				if(tmp != null) {
					tupvals.push(tmp);
					tmp = null;
				} else {
					throw new js__$Boot_HaxeError("Error: unexpected ,");
				}
			} else if(tmp == null) {
				tmp = sv;
			} else {
				throw new js__$Boot_HaxeError("Error: missing ,");
			}
		}
		if(tmp != null) {
			tupvals.push(tmp);
		}
		return tupvals;
	}
	,saveState: function() {
		return { "buffer" : this.buffer.copy(), "tree" : this.tree.slice()};
	}
	,loadState: function(state) {
		this.buffer = state.buffer;
		this.tree = state.tree;
	}
	,advance: function(d) {
		if(d == null) {
			d = 0;
		}
		var r = this.buffer.pop();
		while(d > 0) {
			--d;
			this.buffer.pop();
		}
		return r;
	}
	,next: function(d) {
		if(d == null) {
			d = 0;
		}
		return this.buffer.peek(d);
	}
	,push: function(v) {
		this.tree.push(v);
	}
	,get_end: function() {
		return this.buffer.get_empty();
	}
	,get_cur: function() {
		return this.buffer.peek();
	}
	,buffer: null
	,tree: null
	,__class__: tannus_css_vals_Lexer
	,__properties__: {get_cur:"get_cur",get_end:"get_end"}
};
var tannus_css_vals__$Lexer_Err = $hxClasses["tannus.css.vals._Lexer.Err"] = { __ename__ : ["tannus","css","vals","_Lexer","Err"], __constructs__ : ["Unexpected","Eof"] };
tannus_css_vals__$Lexer_Err.Unexpected = function(c) { var $x = ["Unexpected",0,c]; $x.__enum__ = tannus_css_vals__$Lexer_Err; $x.toString = $estr; return $x; };
tannus_css_vals__$Lexer_Err.Eof = ["Eof",1];
tannus_css_vals__$Lexer_Err.Eof.toString = $estr;
tannus_css_vals__$Lexer_Err.Eof.__enum__ = tannus_css_vals__$Lexer_Err;
var tannus_css_vals__$Unit_Unit_$Impl_$ = {};
$hxClasses["tannus.css.vals._Unit.Unit_Impl_"] = tannus_css_vals__$Unit_Unit_$Impl_$;
tannus_css_vals__$Unit_Unit_$Impl_$.__name__ = ["tannus","css","vals","_Unit","Unit_Impl_"];
tannus_css_vals__$Unit_Unit_$Impl_$.__properties__ = {get_all:"get_all"}
tannus_css_vals__$Unit_Unit_$Impl_$.get_all = function() {
	return ["em","ex","ch","rem","vw","vh","%","cm","mm","in","px","pt","pc"];
};
tannus_css_vals__$Unit_Unit_$Impl_$.isValidUnit = function(s) {
	return Lambda.has(["em","ex","ch","rem","vw","vh","%","cm","mm","in","px","pt","pc"],s);
};
var tannus_css_vals_ValueTools = function() { };
$hxClasses["tannus.css.vals.ValueTools"] = tannus_css_vals_ValueTools;
tannus_css_vals_ValueTools.__name__ = ["tannus","css","vals","ValueTools"];
tannus_css_vals_ValueTools.toString = function(v) {
	if(v == null) {
		throw new js__$Boot_HaxeError("CSSError: Cannot convert a null-Value to String!");
	} else if(v == null) {
		throw new js__$Boot_HaxeError("CSSError: Cannot convert " + Std.string(v) + " to String!");
	} else {
		switch(v[1]) {
		case 0:
			var id = v[2];
			return id;
		case 1:
			var str = v[2];
			return JSON.stringify(str);
		case 2:
			var unit = v[3];
			var num = v[2];
			var su = unit != null ? unit : "";
			return "" + num + su;
		case 3:
			var color = v[2];
			return color.toString();
		case 4:
			var name = v[2];
			return "@" + name;
		case 5:
			var args = v[3];
			var name1 = v[2];
			var sargs = args.map(function(item) {
				return tannus_css_vals_ValueTools.toString(item);
			}).join(", ");
			return "" + name1 + "(" + sargs + ")";
		default:
			throw new js__$Boot_HaxeError("CSSError: Cannot convert " + Std.string(v) + " to String!");
		}
	}
};
tannus_css_vals_ValueTools.toInt = function(v) {
	switch(v[1]) {
	case 1:
		var s = v[2];
		return Std.parseInt(s);
	case 2:
		var n = v[2];
		return n | 0;
	default:
		return null;
	}
};
tannus_css_vals_ValueTools.toBool = function(v) {
	if(v[1] == 0) {
		var s = v[2];
		if(new EReg("true|false|yes|no|on|off","i").match(s)) {
			var _g = s.toLowerCase();
			switch(_g) {
			case "false":case "no":case "off":
				return false;
			case "on":case "true":case "yes":
				return true;
			default:
				return null;
			}
		} else {
			return null;
		}
	} else {
		return null;
	}
};
tannus_css_vals_ValueTools.iter = function(value,predicate) {
	predicate(value);
	if(value[1] == 5) {
		var args = value[3];
		var _g = 0;
		while(_g < args.length) {
			var v = args[_g];
			++_g;
			tannus_css_vals_ValueTools.iter(v,predicate);
		}
	}
};
tannus_css_vals_ValueTools.map = function(value,mapper) {
	var val = value;
	if(value[1] == 5) {
		var args = value[3];
		var name = value[2];
		val = tannus_css_Value.VCall(name,args.map(function(item) {
			return tannus_css_vals_ValueTools.map(item,mapper);
		}));
	}
	val = mapper(val);
	return val;
};
var tannus_dom__$Attributes_Attributes_$Impl_$ = {};
$hxClasses["tannus.dom._Attributes.Attributes_Impl_"] = tannus_dom__$Attributes_Attributes_$Impl_$;
tannus_dom__$Attributes_Attributes_$Impl_$.__name__ = ["tannus","dom","_Attributes","Attributes_Impl_"];
tannus_dom__$Attributes_Attributes_$Impl_$._new = function(e) {
	var this1 = new tannus_dom_CAttributes(e);
	return this1;
};
tannus_dom__$Attributes_Attributes_$Impl_$.get = function(this1,k) {
	return this1.get(k);
};
tannus_dom__$Attributes_Attributes_$Impl_$.set = function(this1,k,v) {
	return this1.set(k,v);
};
var tannus_dom_CAttributes = function(e) {
	this.element = e;
};
$hxClasses["tannus.dom.CAttributes"] = tannus_dom_CAttributes;
tannus_dom_CAttributes.__name__ = ["tannus","dom","CAttributes"];
tannus_dom_CAttributes.prototype = {
	exists: function(name) {
		return this.element.els[0].hasAttribute(name);
	}
	,get: function(name) {
		return this.element.els[0].getAttribute(name);
	}
	,set: function(name,value) {
		var _g = 0;
		var _g1 = this.element.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.setAttribute(name,Std.string(value));
		}
		return Std.string(value);
	}
	,remove: function(name) {
		var _g = 0;
		var _g1 = this.element.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.removeAttribute(name);
		}
	}
	,element: null
	,__class__: tannus_dom_CAttributes
};
var tannus_dom__$Data_Data_$Impl_$ = {};
$hxClasses["tannus.dom._Data.Data_Impl_"] = tannus_dom__$Data_Data_$Impl_$;
tannus_dom__$Data_Data_$Impl_$.__name__ = ["tannus","dom","_Data","Data_Impl_"];
tannus_dom__$Data_Data_$Impl_$._new = function(e) {
	var this1 = new tannus_dom_CData(e);
	return this1;
};
tannus_dom__$Data_Data_$Impl_$.get = function(this1,k) {
	return this1.get(k);
};
tannus_dom__$Data_Data_$Impl_$.set = function(this1,k,v) {
	this1.set(k,v);
};
var tannus_dom_CData = function(e) {
	this.el = e;
};
$hxClasses["tannus.dom.CData"] = tannus_dom_CData;
tannus_dom_CData.__name__ = ["tannus","dom","CData"];
tannus_dom_CData.prototype = {
	get: function(name) {
		if(this.el.els.length > 0) {
			var e = this.el.els[0];
			var tmp;
			var this1;
			if(e == null) {
				this1 = null;
			} else {
				var this2;
				if(e.__properties__) {
					tmp = e.__properties__["get_" + "__tandata"];
					this2 = tmp;
				} else {
					this2 = false;
				}
				if(this2) {
					this1 = e[tmp]();
				} else {
					this1 = e["__tandata"];
				}
			}
			var o = this1.pub.o;
			var tmp1;
			var tmp2;
			if(o == null) {
				tmp2 = null;
			} else {
				var tmp3;
				if(o.__properties__) {
					tmp1 = o.__properties__["get_" + name];
					tmp3 = tmp1;
				} else {
					tmp3 = false;
				}
				if(tmp3) {
					tmp2 = o[tmp1]();
				} else {
					tmp2 = o[name];
				}
			}
			return tmp2;
		} else {
			return null;
		}
	}
	,set: function(name,value) {
		var _g = 0;
		var _g1 = this.el.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			var tmp;
			var this1;
			if(e == null) {
				this1 = null;
			} else {
				var this2;
				if(e.__properties__) {
					tmp = e.__properties__["get_" + "__tandata"];
					this2 = tmp;
				} else {
					this2 = false;
				}
				if(this2) {
					this1 = e[tmp]();
				} else {
					this1 = e["__tandata"];
				}
			}
			this1.pub.set(name,value);
		}
	}
	,exists: function(name) {
		if(this.el.els.length > 0) {
			var e = this.el.els[0];
			var tmp;
			var _this;
			if(e == null) {
				_this = null;
			} else {
				var _this1;
				if(e.__properties__) {
					tmp = e.__properties__["get_" + "__tandata"];
					_this1 = tmp;
				} else {
					_this1 = false;
				}
				if(_this1) {
					_this = e[tmp]();
				} else {
					_this = e["__tandata"];
				}
			}
			return Object.prototype.hasOwnProperty.call(_this.pub.o,name);
		} else {
			return false;
		}
	}
	,keys: function() {
		if(this.el.els.length > 0) {
			var e = this.el.els[0];
			var tmp;
			var tmp1;
			if(e == null) {
				tmp1 = null;
			} else {
				var tmp2;
				if(e.__properties__) {
					tmp = e.__properties__["get_" + "__tandata"];
					tmp2 = tmp;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					tmp1 = e[tmp]();
				} else {
					tmp1 = e["__tandata"];
				}
			}
			return tmp1.pub.keys();
		} else {
			return [];
		}
	}
	,ref: function(name) {
		var e = this.el.els[0];
		var tmp;
		var tmp1;
		if(e == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(e.__properties__) {
				tmp = e.__properties__["get_" + "__tandata"];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = e[tmp]();
			} else {
				tmp1 = e["__tandata"];
			}
		}
		return tmp1.pub.field(name);
	}
	,nd: function(e) {
		var tmp;
		var tmp1;
		if(e == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(e.__properties__) {
				tmp = e.__properties__["get_" + "__tandata"];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = e[tmp]();
			} else {
				tmp1 = e["__tandata"];
			}
		}
		return tmp1;
	}
	,el: null
	,__class__: tannus_dom_CData
};
var tannus_dom_ElIter = function(e) {
	this.owner = e;
	this.index = 0;
};
$hxClasses["tannus.dom.ElIter"] = tannus_dom_ElIter;
tannus_dom_ElIter.__name__ = ["tannus","dom","ElIter"];
tannus_dom_ElIter.prototype = {
	hasNext: function() {
		return this.index < this.owner.els.length;
	}
	,next: function() {
		var this1 = new tannus_dom_CElement(this.owner.els[this.index++]);
		return this1;
	}
	,owner: null
	,index: null
	,__class__: tannus_dom_ElIter
};
var tannus_dom__$Element_Element_$Impl_$ = {};
$hxClasses["tannus.dom._Element.Element_Impl_"] = tannus_dom__$Element_Element_$Impl_$;
tannus_dom__$Element_Element_$Impl_$.__name__ = ["tannus","dom","_Element","Element_Impl_"];
tannus_dom__$Element_Element_$Impl_$._new = function(ctx) {
	var this1 = new tannus_dom_CElement(ctx);
	return this1;
};
tannus_dom__$Element_Element_$Impl_$.getAttribute = function(this1,k) {
	return this1.getAttribute(k);
};
tannus_dom__$Element_Element_$Impl_$.setAttribute = function(this1,k,v) {
	return this1.setAttribute(k,v);
};
tannus_dom__$Element_Element_$Impl_$.fromAny = function(o) {
	return tannus_dom__$Element_Element_$Impl_$._new(o);
};
var tannus_dom_CElement = function(ctx) {
	this.els = [];
	var this1 = new tannus_dom_CStyles(this);
	this._style = this1;
	var this2 = new tannus_dom_CAttributes(this);
	this._attr = this2;
	var this3 = new tannus_dom_CData(this);
	this._data = this3;
	this.determineContext(ctx);
	this.initializeData();
};
$hxClasses["tannus.dom.CElement"] = tannus_dom_CElement;
tannus_dom_CElement.__name__ = ["tannus","dom","CElement"];
tannus_dom_CElement.parseDocument = function(code) {
	var parser = new DOMParser();
	var doc = parser.parseFromString(code,"text/html");
	var nl = doc.querySelectorAll("body *, head *");
	var results = [];
	var _g1 = 0;
	var _g = nl.length;
	while(_g1 < _g) {
		var i = _g1++;
		var item = nl.item(i);
		if(js_Boot.__instanceof(item,HTMLElement)) {
			results.push(item);
		}
	}
	return tannus_ds_ArrayTools.unique(results);
};
tannus_dom_CElement.prototype = {
	remove: function() {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.remove();
		}
	}
	,clone: function(deep) {
		if(deep == null) {
			deep = false;
		}
		var this1 = new tannus_dom_CElement(null);
		var copy = this1;
		copy.els = this.els.map(function(item) {
			return item.cloneNode(deep);
		});
		return copy;
	}
	,find: function(sel) {
		var this1 = new tannus_dom_CElement(null);
		var res = this1;
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			var nl = e.querySelectorAll(sel);
			var _g3 = 0;
			var _g2 = nl.length;
			while(_g3 < _g2) {
				var i = _g3++;
				var item = nl.item(i);
				if(js_Boot.__instanceof(item,HTMLElement)) {
					res.els.push(item);
				}
			}
		}
		return res;
	}
	,at: function(n) {
		var this1 = new tannus_dom_CElement(this.els[n]);
		return this1;
	}
	,contains: function(sel) {
		var sub = this.find(sel);
		return sub.els.length > 0;
	}
	,'is': function(sel) {
		return this.els[0].matches(sel);
	}
	,children: function() {
		var rels = tannus_ds_ArrayTools.flatten(this.els.map(function(item) {
			var _g = [];
			var _g2 = 0;
			var _g1 = item.children.length;
			while(_g2 < _g1) {
				var i = _g2++;
				_g.push(item.children.item(i));
			}
			return _g;
		}));
		var this1 = new tannus_dom_CElement(null);
		var res = this1;
		res.els = rels;
		return res;
	}
	,isParentOf: function(mchild) {
		if(this.els.length > 0 && mchild.els.length > 0) {
			var node = mchild.els[0].parentNode;
			while(node != null) {
				if(node == this.els[0]) {
					return true;
				}
				node = node.parentNode;
			}
			return false;
		} else {
			return false;
		}
	}
	,isDescendantOf: function(mparent) {
		return mparent.isParentOf(this);
	}
	,append: function(child) {
		if(this.els.length > 0) {
			var _g = 0;
			var _g1 = child.els;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				this.els[0].appendChild(e);
			}
		}
	}
	,appendTo: function(par) {
		par.append(this);
	}
	,prepend: function(child) {
		if(this.els.length > 0) {
			var _g = 0;
			var _g1 = child.els;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				this.els[0].insertBefore(e,this.els[0].firstElementChild);
			}
		}
	}
	,prependTo: function(par) {
		par.prepend(this);
	}
	,add: function(item) {
		this.els = this.els.concat(item.els);
	}
	,insertAfter: function(child,after) {
		this.els[0].insertBefore(child.els[0],after.els[0].nextSibling);
	}
	,after: function(content) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			var cont = content.clone(true);
			var _g2 = 0;
			var _g3 = cont.els;
			while(_g2 < _g3.length) {
				var c = _g3[_g2];
				++_g2;
				e.parentElement.insertBefore(c,e.nextSibling);
			}
		}
	}
	,before: function(content) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			var cont = content.clone(true);
			var _g2 = 0;
			var _g3 = cont.els;
			while(_g2 < _g3.length) {
				var c = _g3[_g2];
				++_g2;
				e.parentElement.insertBefore(c,e);
			}
		}
	}
	,replaceChild: function(child,repl) {
		if(this.els.length > 0) {
			this.els[0].replaceChild(repl.els[0],child.els[0]);
		}
	}
	,replaceWith: function(other) {
		this.get_parent().replaceChild(this,other);
	}
	,getAttribute: function(name) {
		return this._attr.get(name);
	}
	,setAttribute: function(name,value) {
		return this._attr.set(name,value);
	}
	,hasAttribute: function(name) {
		return this._attr.exists(name);
	}
	,removeAttribute: function(name) {
		this._attr.remove(name);
	}
	,hasClass: function(name) {
		if(this.els.length > 0) {
			return this.els[0].classList.contains(name);
		} else {
			return false;
		}
	}
	,addClass: function(name) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.classList.contains(name)) {
				e.classList.add(name);
			}
		}
	}
	,removeClass: function(name) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.classList.remove(name);
		}
	}
	,toggleClass: function(name) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.classList.toggle(name);
		}
	}
	,field: function(name,value) {
		if(this.els.length <= 0) {
			return null;
		}
		if(value == null) {
			var o = this.els[0];
			var tmp;
			if(o == null) {
				return null;
			} else {
				var tmp1;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + name];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					return o[tmp]();
				} else {
					return o[name];
				}
			}
		} else {
			var o1 = this.els[0];
			var tmp2;
			var tmp3;
			if(o1.__properties__) {
				tmp2 = o1.__properties__["set_" + name];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				o1[tmp2](value);
			} else {
				o1[name] = value;
			}
			var o2 = this.els[0];
			var tmp4;
			if(o2 == null) {
				return null;
			} else {
				var tmp5;
				if(o2.__properties__) {
					tmp4 = o2.__properties__["get_" + name];
					tmp5 = tmp4;
				} else {
					tmp5 = false;
				}
				if(tmp5) {
					return o2[tmp4]();
				} else {
					return o2[name];
				}
			}
		}
	}
	,on: function(name,handler) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			var nd = this.nodeData(e);
			e.addEventListener(name,handler);
			if(!Object.prototype.hasOwnProperty.call(nd.pri.o,"events")) {
				nd.pri.set("events",tannus_ds_CObj.create({ }));
			}
			var o = nd.pri.o;
			var tmp;
			var events;
			if(o == null) {
				events = null;
			} else {
				var events1;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + "events"];
					events1 = tmp;
				} else {
					events1 = false;
				}
				if(events1) {
					events = o[tmp]();
				} else {
					events = o["events"];
				}
			}
			var events2 = events;
			if(!Object.prototype.hasOwnProperty.call(events2.o,name)) {
				events2.set(name,[]);
			}
			var o1 = events2.o;
			var tmp1;
			var tmp2;
			if(o1 == null) {
				tmp2 = null;
			} else {
				var tmp3;
				if(o1.__properties__) {
					tmp1 = o1.__properties__["get_" + name];
					tmp3 = tmp1;
				} else {
					tmp3 = false;
				}
				if(tmp3) {
					tmp2 = o1[tmp1]();
				} else {
					tmp2 = o1[name];
				}
			}
			tmp2.push(handler);
		}
	}
	,off: function(name,handler) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(handler != null) {
				e.removeEventListener(name,handler);
			} else {
				var nd = this.nodeData(e);
				if(!Object.prototype.hasOwnProperty.call(nd.pri.o,"events")) {
					nd.pri.set("events",tannus_ds_CObj.create({ }));
				}
				var o = nd.pri.o;
				var tmp;
				var events;
				if(o == null) {
					events = null;
				} else {
					var events1;
					if(o.__properties__) {
						tmp = o.__properties__["get_" + "events"];
						events1 = tmp;
					} else {
						events1 = false;
					}
					if(events1) {
						events = o[tmp]();
					} else {
						events = o["events"];
					}
				}
				var events2 = events;
				if(Object.prototype.hasOwnProperty.call(events2.o,name)) {
					var o1 = events2.o;
					var tmp1;
					var handlers;
					if(o1 == null) {
						handlers = null;
					} else {
						var handlers1;
						if(o1.__properties__) {
							tmp1 = o1.__properties__["get_" + name];
							handlers1 = tmp1;
						} else {
							handlers1 = false;
						}
						if(handlers1) {
							handlers = o1[tmp1]();
						} else {
							handlers = o1[name];
						}
					}
					var handlers2 = handlers;
					var _g2 = 0;
					while(_g2 < handlers2.length) {
						var f = handlers2[_g2];
						++_g2;
						e.removeEventListener(name,f);
					}
				}
			}
		}
	}
	,value: function() {
		var _g = this.get_tagname();
		if(_g == "input") {
			return this.field("value");
		} else {
			return null;
		}
	}
	,iterator: function() {
		return new tannus_dom_ElIter(this);
	}
	,rect: function() {
		if(this.els.length > 0) {
			var cr = this.els[0].getBoundingClientRect();
			var this1 = new tannus_geom_CRectangle(cr.x,cr.y,cr.width,cr.height);
			return this1;
		} else {
			var this2 = new tannus_geom_CRectangle(0,0,0,0);
			return this2;
		}
	}
	,determineContext: function(ctx) {
		if(ctx == null) {
			return;
		} else if(typeof(ctx) == "string") {
			this.determineStringContext(Std.string(ctx));
		} else if(js_Boot.__instanceof(ctx,HTMLElement)) {
			this.els.push(ctx);
		} else if(js_Boot.__instanceof(ctx,tannus_dom_CElement)) {
			var el = ctx;
			this.els = el.els;
		} else {
			throw new js__$Boot_HaxeError("DOMError: Invalid Element context");
		}
	}
	,determineStringContext: function(s) {
		s = StringTools.trim(s);
		if(StringTools.startsWith(s,"<")) {
			this.els = tannus_dom_CElement.parseDocument(s);
		} else {
			var nl = window.document.querySelectorAll(s);
			var _g1 = 0;
			var _g = nl.length;
			while(_g1 < _g) {
				var i = _g1++;
				var item = nl.item(i);
				if(js_Boot.__instanceof(item,HTMLElement)) {
					this.els.push(item);
				}
			}
		}
	}
	,initializeData: function() {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var el = _g1[_g];
			++_g;
			var this1 = el;
			var e = this1;
			if(!Object.prototype.hasOwnProperty.call(e,"__tandata")) {
				var value = { "pri" : tannus_ds_CObj.create({ }), "pub" : tannus_ds_CObj.create({ })};
				var tmp;
				var tmp1;
				if(e.__properties__) {
					tmp = e.__properties__["set_" + "__tandata"];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					e[tmp](value);
				} else {
					e["__tandata"] = value;
				}
				var tmp2;
				if(e == null) {
					null;
				} else {
					var tmp3;
					if(e.__properties__) {
						tmp2 = e.__properties__["get_" + "__tandata"];
						tmp3 = tmp2;
					} else {
						tmp3 = false;
					}
					if(tmp3) {
						e[tmp2]();
					}
				}
			}
		}
	}
	,nodeData: function(e) {
		var tmp;
		var tmp1;
		if(e == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(e.__properties__) {
				tmp = e.__properties__["get_" + "__tandata"];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = e[tmp]();
			} else {
				tmp1 = e["__tandata"];
			}
		}
		return tmp1;
	}
	,get_length: function() {
		return this.els.length;
	}
	,get_empty: function() {
		return this.els.length <= 0;
	}
	,get_exists: function() {
		return this.els.length > 0;
	}
	,get_first: function() {
		return this.els[0];
	}
	,get_css: function() {
		return this._style;
	}
	,get_attributes: function() {
		return this._attr;
	}
	,get_data: function() {
		return this._data;
	}
	,get_elements: function() {
		return this.els.map(function(item) {
			var this1 = new tannus_dom_CElement(item);
			return this1;
		});
	}
	,get_html: function() {
		if(this.els.length > 0) {
			return this.els[0].innerHTML;
		} else {
			return "";
		}
	}
	,set_html: function(v) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.innerHTML = v;
		}
		return v;
	}
	,get_text: function() {
		if(this.els.length > 0) {
			var result = "";
			var _g = 0;
			var _g1 = this.els;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				result += e.textContent;
			}
			return result;
		} else {
			return "";
		}
	}
	,set_text: function(v) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.textContent = v;
		}
		return v;
	}
	,get_tagname: function() {
		if(this.els.length <= 0) {
			return "";
		} else {
			return this.els[0].tagName.toLowerCase();
		}
	}
	,get_parent: function() {
		if(this.els.length > 0 && this.els[0].parentElement != null) {
			var this1 = new tannus_dom_CElement(this.els[0].parentElement);
			return this1;
		} else {
			return null;
		}
	}
	,els: null
	,_style: null
	,_attr: null
	,_data: null
	,__class__: tannus_dom_CElement
	,__properties__: {get_parent:"get_parent",get_tagname:"get_tagname",set_text:"set_text",get_text:"get_text",set_html:"set_html",get_html:"get_html",get_elements:"get_elements",get_data:"get_data",get_attributes:"get_attributes",get_css:"get_css",get_first:"get_first",get_exists:"get_exists",get_empty:"get_empty",get_length:"get_length"}
};
var tannus_dom__$Styles_Styles_$Impl_$ = {};
$hxClasses["tannus.dom._Styles.Styles_Impl_"] = tannus_dom__$Styles_Styles_$Impl_$;
tannus_dom__$Styles_Styles_$Impl_$.__name__ = ["tannus","dom","_Styles","Styles_Impl_"];
tannus_dom__$Styles_Styles_$Impl_$._new = function(e) {
	var this1 = new tannus_dom_CStyles(e);
	return this1;
};
tannus_dom__$Styles_Styles_$Impl_$.get = function(this1,name) {
	return this1.get(name);
};
tannus_dom__$Styles_Styles_$Impl_$.set = function(this1,name,value) {
	return this1.set(name,value);
};
tannus_dom__$Styles_Styles_$Impl_$.ref = function(this1,name) {
	var this2;
	var f = $bind(this1,this1.get);
	var a1 = name;
	var f1 = $bind(this1,this1.set);
	var a11 = name;
	this2 = new tannus_io__$Pointer_Ref(function() {
		return f(a1);
	},function(a2) {
		return f1(a11,a2);
	});
	return this2;
};
tannus_dom__$Styles_Styles_$Impl_$.toObject = function(this1) {
	return this1.toObject();
};
tannus_dom__$Styles_Styles_$Impl_$.write = function(this1,o) {
	this1.write(o);
};
tannus_dom__$Styles_Styles_$Impl_$.pluck = function(this1,keys) {
	var props = { };
	var _g = 0;
	while(_g < keys.length) {
		var key = keys[_g];
		++_g;
		var value = this1.get(key);
		var tmp;
		var tmp1;
		if(props.__properties__) {
			tmp = props.__properties__["set_" + key];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			props[tmp](value);
		} else {
			props[key] = value;
		}
		var tmp2;
		if(props == null) {
			null;
		} else {
			var tmp3;
			if(props.__properties__) {
				tmp2 = props.__properties__["get_" + key];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				props[tmp2]();
			}
		}
	}
	return props;
};
var tannus_dom_CStyles = function(e) {
	this.element = e;
};
$hxClasses["tannus.dom.CStyles"] = tannus_dom_CStyles;
tannus_dom_CStyles.__name__ = ["tannus","dom","CStyles"];
tannus_dom_CStyles.prototype = {
	get: function(name) {
		if(this.element.els.length <= 0) {
			return "";
		} else {
			return this.first().getPropertyValue(name);
		}
	}
	,set: function(name,value) {
		var _g = 0;
		var _g1 = this.all();
		while(_g < _g1.length) {
			var css = _g1[_g];
			++_g;
			css.setProperty(name,Std.string(value));
		}
		return Std.string(value);
	}
	,remove: function(name) {
		var _g = 0;
		var _g1 = this.all();
		while(_g < _g1.length) {
			var css = _g1[_g];
			++_g;
			css.removeProperty(name);
		}
	}
	,toObject: function() {
		var o = { };
		var css = this.first();
		if(css != null) {
			var _g1 = 0;
			var _g = css.length;
			while(_g1 < _g) {
				var i = _g1++;
				var name = css.item(i);
				var value = css.getPropertyValue(name);
				var tmp;
				var tmp1;
				if(o.__properties__) {
					tmp = o.__properties__["set_" + name];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					o[tmp](value);
				} else {
					o[name] = value;
				}
				var tmp2;
				if(o == null) {
					null;
				} else {
					var tmp3;
					if(o.__properties__) {
						tmp2 = o.__properties__["get_" + name];
						tmp3 = tmp2;
					} else {
						tmp3 = false;
					}
					if(tmp3) {
						o[tmp2]();
					}
				}
			}
		}
		return o;
	}
	,write: function(o) {
		var _g = 0;
		var _g1 = this.all();
		while(_g < _g1.length) {
			var css = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = Reflect.fields(o);
			while(_g2 < _g3.length) {
				var name = _g3[_g2];
				++_g2;
				var tmp;
				var tmp1;
				if(o == null) {
					tmp1 = null;
				} else {
					var tmp2;
					if(o.__properties__) {
						tmp = o.__properties__["get_" + name];
						tmp2 = tmp;
					} else {
						tmp2 = false;
					}
					if(tmp2) {
						tmp1 = o[tmp]();
					} else {
						tmp1 = o[name];
					}
				}
				css.setProperty(name,Std.string(tmp1));
			}
		}
	}
	,first: function() {
		if(this.element.els.length > 0) {
			return window.getComputedStyle(this.element.els[0]);
		} else {
			return null;
		}
	}
	,all: function() {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.element.els;
		while(_g1 < _g2.length) {
			var e = _g2[_g1];
			++_g1;
			_g.push(e.style);
		}
		return _g;
	}
	,element: null
	,__class__: tannus_dom_CStyles
};
var tannus_ds__$ActionStack_ActionStack_$Impl_$ = {};
$hxClasses["tannus.ds._ActionStack.ActionStack_Impl_"] = tannus_ds__$ActionStack_ActionStack_$Impl_$;
tannus_ds__$ActionStack_ActionStack_$Impl_$.__name__ = ["tannus","ds","_ActionStack","ActionStack_Impl_"];
tannus_ds__$ActionStack_ActionStack_$Impl_$._new = function() {
	var this1 = [];
	return this1;
};
tannus_ds__$ActionStack_ActionStack_$Impl_$.call = function(this1) {
	var _g = 0;
	while(_g < this1.length) {
		var action = this1[_g];
		++_g;
		action();
	}
};
tannus_ds__$ActionStack_ActionStack_$Impl_$.clone = function(this1) {
	return this1.slice();
};
var tannus_ds__$ActionStack_ParametricStack_$Impl_$ = {};
$hxClasses["tannus.ds._ActionStack.ParametricStack_Impl_"] = tannus_ds__$ActionStack_ParametricStack_$Impl_$;
tannus_ds__$ActionStack_ParametricStack_$Impl_$.__name__ = ["tannus","ds","_ActionStack","ParametricStack_Impl_"];
tannus_ds__$ActionStack_ParametricStack_$Impl_$._new = function() {
	var this1 = [];
	return this1;
};
tannus_ds__$ActionStack_ParametricStack_$Impl_$.call = function(this1,context) {
	var _g = 0;
	while(_g < this1.length) {
		var a = this1[_g];
		++_g;
		a(context);
	}
};
var tannus_ds_AnonTools = function() { };
$hxClasses["tannus.ds.AnonTools"] = tannus_ds_AnonTools;
tannus_ds_AnonTools.__name__ = ["tannus","ds","AnonTools"];
var tannus_ds_ArrayTools = function() { };
$hxClasses["tannus.ds.ArrayTools"] = tannus_ds_ArrayTools;
tannus_ds_ArrayTools.__name__ = ["tannus","ds","ArrayTools"];
tannus_ds_ArrayTools.equal = function(a) {
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _g3 = i;
		var _g2 = a.length;
		while(_g3 < _g2) {
			var j = _g3++;
			if(a[i] != a[j]) {
				return false;
			}
		}
	}
	return true;
};
tannus_ds_ArrayTools.compare = function(left,right,predicate) {
	if(left.length != right.length) {
		return false;
	} else {
		if(predicate == null) {
			predicate = function(x,y) {
				return x == y;
			};
		}
		var _g1 = 0;
		var _g = left.length;
		while(_g1 < _g) {
			var i = _g1++;
			var l = left[i];
			var r = right[i];
			if(!predicate(l,r)) {
				return false;
			}
		}
		return true;
	}
};
tannus_ds_ArrayTools.pointerArray = function(a) {
	var res = [];
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = [_g1++];
		var this1 = (function(i1) {
			return function() {
				return a[i1[0]];
			};
		})(i);
		var this2 = (function(i2) {
			return function(v) {
				return a[i2[0]] = v;
			};
		})(i);
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		res.push(this3);
	}
	return res;
};
tannus_ds_ArrayTools.without = function(list,blacklist,compare) {
	if(compare == null) {
		compare = function(x,y) {
			return x == y;
		};
	}
	var result = [];
	var x1 = $iterator(list)();
	while(x1.hasNext()) {
		var x2 = x1.next();
		var y1 = $iterator(blacklist)();
		while(y1.hasNext()) {
			var y2 = y1.next();
			if(compare(x2,y2)) {
				continue;
			}
		}
		result.push(x2);
	}
	return result;
};
tannus_ds_ArrayTools.firstMatch = function(list,test) {
	var item = $iterator(list)();
	while(item.hasNext()) {
		var item1 = item.next();
		if(test(item1)) {
			return item1;
		}
	}
	return null;
};
tannus_ds_ArrayTools.firstMatchIndex = function(list,test) {
	var _g1 = 0;
	var _g = list.length;
	while(_g1 < _g) {
		var index = _g1++;
		if(test(list[index])) {
			return index;
		}
	}
	return -1;
};
tannus_ds_ArrayTools.hasf = function(set,item,tester) {
	var x = $iterator(set)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(tester(x1,item)) {
			return true;
		}
	}
	return false;
};
tannus_ds_ArrayTools.unique = function(set,tester) {
	if(tester == null) {
		tester = function(x,y) {
			return x == y;
		};
	}
	var results = [];
	var _g = 0;
	while(_g < set.length) {
		var item = set[_g];
		++_g;
		if(!tannus_ds_ArrayTools.hasf(results,item,tester)) {
			results.push(item);
		}
	}
	return results;
};
tannus_ds_ArrayTools.union = function(one,other) {
	return one.filter(function(item) {
		return Lambda.has(other,item);
	});
};
tannus_ds_ArrayTools.intersection = function(one,two) {
	if(one.length < two.length) {
		return one.filter(function(item) {
			return !Lambda.has(two,item);
		});
	} else {
		return two.filter(function(item1) {
			return !Lambda.has(one,item1);
		});
	}
};
tannus_ds_ArrayTools.flatten = function(set) {
	var res = [];
	var _g = 0;
	while(_g < set.length) {
		var sub = set[_g];
		++_g;
		res = res.concat(sub);
	}
	return res;
};
tannus_ds_ArrayTools.last = function(list,v) {
	if(v == null) {
		return list[list.length - 1];
	} else {
		return list[list.length - 1] = v;
	}
};
tannus_ds_ArrayTools.before = function(list,val) {
	return list.slice(0,list.indexOf(val) != -1 ? list.indexOf(val) : list.length);
};
tannus_ds_ArrayTools.after = function(list,val) {
	return list.slice(list.indexOf(val) != -1 ? list.indexOf(val) + 1 : 0);
};
tannus_ds_ArrayTools.times = function(list,n) {
	var res = list.slice();
	var _g1 = 0;
	var _g = n - 1;
	while(_g1 < _g) {
		var i = _g1++;
		res = res.concat(list.slice());
	}
	return res;
};
tannus_ds_ArrayTools.min = function(list,predicate) {
	var m = null;
	var x = $iterator(list)();
	while(x.hasNext()) {
		var x1 = x.next();
		var score = predicate(x1);
		if(m == null || score < m[1]) {
			var this1 = [x1,score];
			m = this1;
		}
	}
	if(m == null) {
		return null;
	}
	return m[0];
};
tannus_ds_ArrayTools.max = function(list,predicate) {
	var m = null;
	var x = $iterator(list)();
	while(x.hasNext()) {
		var x1 = x.next();
		var score = predicate(x1);
		if(m == null || score > m[1]) {
			var this1 = [x1,score];
			m = this1;
		}
	}
	if(m == null) {
		return null;
	}
	return m[0];
};
tannus_ds_ArrayTools.minmax = function(list,predicate) {
	var l = null;
	var h = null;
	var x = $iterator(list)();
	while(x.hasNext()) {
		var x1 = x.next();
		var score = predicate(x1);
		if(l == null || score < l[1]) {
			var this1 = [x1,score];
			l = this1;
		} else if(h == null || score > h[1]) {
			var this2 = [x1,score];
			h = this2;
		}
	}
	if(l == null || h == null) {
		throw new js__$Boot_HaxeError("Error: Iterable must not be empty!");
	}
	return { "min" : l[0], "max" : h[0]};
};
tannus_ds_ArrayTools.splitfilter = function(list,pred) {
	var res = { "pass" : [], "fail" : []};
	var _g = 0;
	while(_g < list.length) {
		var item = list[_g];
		++_g;
		(pred(item) ? res.pass : res.fail).push(item);
	}
	return res;
};
tannus_ds_ArrayTools.partition = function(list,pred) {
	var results = [[],[]];
	var _g = 0;
	while(_g < list.length) {
		var x = list[_g];
		++_g;
		results[pred(x) ? 0 : 1].push(x);
	}
	return results;
};
tannus_ds_ArrayTools.mapfilter = function(list,test,map) {
	var results = [];
	var _g = 0;
	while(_g < list.length) {
		var x = list[_g];
		++_g;
		if(test(x)) {
			results.push(map(x));
		}
	}
	return results;
};
tannus_ds_ArrayTools.zip = function(left,right) {
	var pairs = [];
	var _g1 = 0;
	var _g = left.length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = new tannus_ds_CPair(left[i],right[i]);
		pairs.push(this1);
	}
	return pairs;
};
tannus_ds_ArrayTools.zipmap = function(left,right,predicate) {
	var pairs = tannus_ds_ArrayTools.zip(left,right);
	var _g = [];
	var _g1 = 0;
	while(_g1 < pairs.length) {
		var p = pairs[_g1];
		++_g1;
		_g.push(predicate(p.left,p.right));
	}
	return _g;
};
tannus_ds_ArrayTools.gridify = function(arr) {
	return tannus_ds_Grid.fromArray2(arr);
};
tannus_ds_ArrayTools.lpad = function(list,len,value) {
	if(list.length >= len) {
		return list;
	} else {
		var res = list.slice();
		while(res.length < len) res.unshift(value);
		return res;
	}
};
tannus_ds_ArrayTools.rpad = function(list,len,value) {
	if(list.length >= len) {
		return list;
	} else {
		var res = list.slice();
		while(res.length < len) res.push(value);
		return res;
	}
};
tannus_ds_ArrayTools.every = function(list,test) {
	var x = $iterator(list)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(!test(x1)) {
			return false;
		}
	}
	return true;
};
tannus_ds_ArrayTools.chunk = function(array,size) {
	var chunks = [];
	var chunk = [];
	var _g = 0;
	while(_g < array.length) {
		var item = array[_g];
		++_g;
		if(chunk.length == size) {
			chunks.push(chunk);
			chunk = [];
		} else {
			chunk.push(item);
		}
	}
	if(chunk.length > 0) {
		chunks.push(chunk);
	}
	return chunks;
};
tannus_ds_ArrayTools.any = function(items,test) {
	var item = $iterator(items)();
	while(item.hasNext()) {
		var item1 = item.next();
		if(test(item1)) {
			return true;
		}
	}
	return false;
};
var tannus_ds__$Async_Async_$Impl_$ = {};
$hxClasses["tannus.ds._Async.Async_Impl_"] = tannus_ds__$Async_Async_$Impl_$;
tannus_ds__$Async_Async_$Impl_$.__name__ = ["tannus","ds","_Async","Async_Impl_"];
tannus_ds__$Async_Async_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
tannus_ds__$Async_Async_$Impl_$.fromTask = function(t) {
	var this1 = t.toAsync();
	return this1;
};
tannus_ds__$Async_Async_$Impl_$.toTask = function(this1) {
	return new tannus_ds__$Async_AsyncTask(this1);
};
var tannus_ds__$Async_Async1_$Impl_$ = {};
$hxClasses["tannus.ds._Async.Async1_Impl_"] = tannus_ds__$Async_Async1_$Impl_$;
tannus_ds__$Async_Async1_$Impl_$.__name__ = ["tannus","ds","_Async","Async1_Impl_"];
tannus_ds__$Async_Async1_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
var tannus_ds__$Async_AsyncTask = function(a) {
	tannus_ds_Task.call(this);
	this.f = a;
};
$hxClasses["tannus.ds._Async.AsyncTask"] = tannus_ds__$Async_AsyncTask;
tannus_ds__$Async_AsyncTask.__name__ = ["tannus","ds","_Async","AsyncTask"];
tannus_ds__$Async_AsyncTask.__super__ = tannus_ds_Task;
tannus_ds__$Async_AsyncTask.prototype = $extend(tannus_ds_Task.prototype,{
	action: function(done) {
		this.f(done);
	}
	,f: null
	,__class__: tannus_ds__$Async_AsyncTask
});
var tannus_ds_AsyncPool = function() {
	this.tasks = [];
	this.results = [];
	this._done = new tannus_io_Signal();
};
$hxClasses["tannus.ds.AsyncPool"] = tannus_ds_AsyncPool;
tannus_ds_AsyncPool.__name__ = ["tannus","ds","AsyncPool"];
tannus_ds_AsyncPool.prototype = {
	push: function(task) {
		var t = { index : 0, task : task};
		t.index = this.tasks.push(t);
	}
	,taskDone: function(task,error,result) {
		this.results.push({ task : task, error : error, value : result});
		if(this.results.length == this.tasks.length) {
			this.complete();
		}
	}
	,complete: function() {
		var reslist = [];
		haxe_ds_ArraySort.sort(this.results,function(left,right) {
			return left.task.index - right.task.index;
		});
		reslist = this.results.map(function(item) {
			return { error : item.error, value : item.value};
		});
		this._done.broadcast(reslist);
	}
	,run: function(callback) {
		this._done.listen(callback,true);
		var _g = 0;
		var _g1 = this.tasks;
		while(_g < _g1.length) {
			var task = _g1[_g];
			++_g;
			var task1 = task.index;
			var tmp = (function(a1,f) {
				return function(a2,a3) {
					f[0](a1[0],a2,a3);
				};
			})([task],[$bind(this,this.taskDone)]);
			task.task(task1,tmp);
		}
	}
	,tasks: null
	,results: null
	,_done: null
	,__class__: tannus_ds_AsyncPool
};
var tannus_ds_Stack = function(dat) {
	this.data = dat != null ? dat : [];
};
$hxClasses["tannus.ds.Stack"] = tannus_ds_Stack;
tannus_ds_Stack.__name__ = ["tannus","ds","Stack"];
tannus_ds_Stack.prototype = {
	peek: function(d) {
		if(d == null) {
			d = 0;
		}
		return this.data[d];
	}
	,pop: function() {
		return this.data.shift();
	}
	,add: function(item) {
		this.data.unshift(item);
	}
	,under: function(item) {
		this.data.push(item);
	}
	,bottom: function() {
		return this.data.pop();
	}
	,remove: function(v) {
		return HxOverrides.remove(this.data,v);
	}
	,next: function(item) {
		if(item != null) {
			this.add(item);
		} else {
			item = this.pop();
		}
		return item;
	}
	,last: function(item) {
		if(item != null) {
			this.under(item);
		} else {
			item = this.bottom();
		}
		return item;
	}
	,copy: function() {
		return new tannus_ds_Stack(this.data.slice());
	}
	,iterator: function() {
		return new tannus_ds__$Stack_StackIterator(this);
	}
	,getData: function() {
		return this.data;
	}
	,get_empty: function() {
		return this.data.length == 0;
	}
	,data: null
	,__class__: tannus_ds_Stack
	,__properties__: {get_empty:"get_empty"}
};
var tannus_ds_AsyncStack = function() {
	tannus_ds_Stack.call(this);
	this.completion = new tannus_io_VoidSignal();
};
$hxClasses["tannus.ds.AsyncStack"] = tannus_ds_AsyncStack;
tannus_ds_AsyncStack.__name__ = ["tannus","ds","AsyncStack"];
tannus_ds_AsyncStack.__super__ = tannus_ds_Stack;
tannus_ds_AsyncStack.prototype = $extend(tannus_ds_Stack.prototype,{
	callNext: function() {
		if(!this.get_empty()) {
			var action = this.pop();
			action($bind(this,this.callNext));
		} else {
			this.completion.call();
		}
	}
	,run: function(done) {
		if(this.get_empty()) {
			done();
		} else {
			this.completion.once(done);
			this.callNext();
		}
	}
	,push: function(f) {
		this.under(f);
	}
	,completion: null
	,__class__: tannus_ds_AsyncStack
});
var tannus_ds_Comparable = function() { };
$hxClasses["tannus.ds.Comparable"] = tannus_ds_Comparable;
tannus_ds_Comparable.__name__ = ["tannus","ds","Comparable"];
tannus_ds_Comparable.prototype = {
	equals: null
	,__class__: tannus_ds_Comparable
};
var tannus_ds__$DataView_DataView_$Impl_$ = {};
$hxClasses["tannus.ds._DataView.DataView_Impl_"] = tannus_ds__$DataView_DataView_$Impl_$;
tannus_ds__$DataView_DataView_$Impl_$.__name__ = ["tannus","ds","_DataView","DataView_Impl_"];
tannus_ds__$DataView_DataView_$Impl_$._new = function(size,value) {
	var this1 = new tannus_ds_data_Data(size,value);
	return this1;
};
tannus_ds__$DataView_DataView_$Impl_$.get = function(this1,index) {
	return this1.get(index);
};
tannus_ds__$DataView_DataView_$Impl_$.set = function(this1,i,v) {
	return this1.set(i,v);
};
tannus_ds__$DataView_DataView_$Impl_$.fromVector = function(vector) {
	return new tannus_ds_data_Data(0).reset(vector);
};
tannus_ds__$DataView_DataView_$Impl_$.fromArray = function(array) {
	var impl = array.slice(0);
	return new tannus_ds_data_Data(0).reset(impl);
};
var tannus_ds__$Delta_Delta_$Impl_$ = {};
$hxClasses["tannus.ds._Delta.Delta_Impl_"] = tannus_ds__$Delta_Delta_$Impl_$;
tannus_ds__$Delta_Delta_$Impl_$.__name__ = ["tannus","ds","_Delta","Delta_Impl_"];
tannus_ds__$Delta_Delta_$Impl_$.__properties__ = {get_previous:"get_previous",get_current:"get_current"}
tannus_ds__$Delta_Delta_$Impl_$._new = function(cur,prev) {
	var this1;
	var this2 = [cur,prev];
	this1 = this2;
	return this1;
};
tannus_ds__$Delta_Delta_$Impl_$.toString = function(this1) {
	var res = "Delta(";
	if(this1[1] != null) {
		res += "from " + Std.string(this1[1]) + " ";
	}
	res += "to " + Std.string(this1[0]) + ")";
	return res;
};
tannus_ds__$Delta_Delta_$Impl_$.toPair = function(this1) {
	return [this1[1],this1[0]];
};
tannus_ds__$Delta_Delta_$Impl_$.get_current = function(this1) {
	return this1[0];
};
tannus_ds__$Delta_Delta_$Impl_$.get_previous = function(this1) {
	return this1[1];
};
var tannus_ds__$Dict_Dict_$Impl_$ = {};
$hxClasses["tannus.ds._Dict.Dict_Impl_"] = tannus_ds__$Dict_Dict_$Impl_$;
tannus_ds__$Dict_Dict_$Impl_$.__name__ = ["tannus","ds","_Dict","Dict_Impl_"];
tannus_ds__$Dict_Dict_$Impl_$.get = function(this1,key) {
	return this1.get(key);
};
tannus_ds__$Dict_Dict_$Impl_$.set = function(this1,key,value) {
	return this1.set(key,value);
};
tannus_ds__$Dict_Dict_$Impl_$.toStringDict = function(v) {
	return new tannus_ds_dict_StringDict();
};
tannus_ds__$Dict_Dict_$Impl_$.toIntDict = function(v) {
	return new tannus_ds_dict_IntDict();
};
tannus_ds__$Dict_Dict_$Impl_$.toEnumValueDict = function(v) {
	return new tannus_ds_dict_EnumValueDict();
};
tannus_ds__$Dict_Dict_$Impl_$.toIComparableDict = function(v) {
	return new tannus_ds_dict_IComparableDict();
};
tannus_ds__$Dict_Dict_$Impl_$.toComparableDict = function(v) {
	return new tannus_ds_dict_ComparableDict();
};
var tannus_ds__$EitherType_EitherType_$Impl_$ = {};
$hxClasses["tannus.ds._EitherType.EitherType_Impl_"] = tannus_ds__$EitherType_EitherType_$Impl_$;
tannus_ds__$EitherType_EitherType_$Impl_$.__name__ = ["tannus","ds","_EitherType","EitherType_Impl_"];
tannus_ds__$EitherType_EitherType_$Impl_$.__properties__ = {get_type:"get_type"}
tannus_ds__$EitherType_EitherType_$Impl_$._new = function(e) {
	var this1 = e;
	return this1;
};
tannus_ds__$EitherType_EitherType_$Impl_$.get_type = function(this1) {
	return this1;
};
tannus_ds__$EitherType_EitherType_$Impl_$.toLeft = function(this1) {
	var _g = this1;
	switch(_g[1]) {
	case 0:
		var lv = _g[2];
		return lv;
	case 1:
		var rv = _g[2];
		throw new js__$Boot_HaxeError("EitherTypeError: " + Std.string(rv) + " was not the expected value!");
		break;
	}
};
tannus_ds__$EitherType_EitherType_$Impl_$.toRight = function(this1) {
	var _g = this1;
	switch(_g[1]) {
	case 0:
		var lv = _g[2];
		throw new js__$Boot_HaxeError("EitherTypeError: " + Std.string(lv) + " was not the expected value!");
		break;
	case 1:
		var rv = _g[2];
		return rv;
	}
};
tannus_ds__$EitherType_EitherType_$Impl_$.fromL = function(v) {
	var this1 = tannus_ds_Either.Left(v);
	return this1;
};
tannus_ds__$EitherType_EitherType_$Impl_$.fromR = function(v) {
	var this1 = tannus_ds_Either.Right(v);
	return this1;
};
var tannus_ds_Either = $hxClasses["tannus.ds.Either"] = { __ename__ : ["tannus","ds","Either"], __constructs__ : ["Left","Right"] };
tannus_ds_Either.Left = function(value) { var $x = ["Left",0,value]; $x.__enum__ = tannus_ds_Either; $x.toString = $estr; return $x; };
tannus_ds_Either.Right = function(value) { var $x = ["Right",1,value]; $x.__enum__ = tannus_ds_Either; $x.toString = $estr; return $x; };
var tannus_ds_IComparable = function() { };
$hxClasses["tannus.ds.IComparable"] = tannus_ds_IComparable;
tannus_ds_IComparable.__name__ = ["tannus","ds","IComparable"];
tannus_ds_IComparable.prototype = {
	compareTo: null
	,__class__: tannus_ds_IComparable
};
var tannus_ds_Range = function(mi,ma) {
	this.min = mi;
	this.max = ma;
};
$hxClasses["tannus.ds.Range"] = tannus_ds_Range;
tannus_ds_Range.__name__ = ["tannus","ds","Range"];
tannus_ds_Range.__interfaces__ = [tannus_ds_IComparable];
tannus_ds_Range.prototype = {
	contains: function(v) {
		if(v > this.min) {
			return v < this.max;
		} else {
			return false;
		}
	}
	,clamp: function(v) {
		if(v < this.min) {
			return this.min;
		} else if(v > this.max) {
			return this.max;
		} else {
			return v;
		}
	}
	,toString: function() {
		return "Range(" + Std.string(this.min) + " => " + Std.string(this.max) + ")";
	}
	,compareTo: function(other) {
		return tannus_math_TMath.compareChain([Reflect.compare(this.min,other.min),Reflect.compare(this.max,other.max)]);
	}
	,get_size: function() {
		return this.max - this.min;
	}
	,min: null
	,max: null
	,__class__: tannus_ds_Range
	,__properties__: {get_size:"get_size"}
};
var tannus_ds_FloatRange = function(mi,ma) {
	tannus_ds_Range.call(this,mi,ma);
};
$hxClasses["tannus.ds.FloatRange"] = tannus_ds_FloatRange;
tannus_ds_FloatRange.__name__ = ["tannus","ds","FloatRange"];
tannus_ds_FloatRange.__super__ = tannus_ds_Range;
tannus_ds_FloatRange.prototype = $extend(tannus_ds_Range.prototype,{
	__class__: tannus_ds_FloatRange
});
var tannus_ds_FunctionTools = function() { };
$hxClasses["tannus.ds.FunctionTools"] = tannus_ds_FunctionTools;
tannus_ds_FunctionTools.__name__ = ["tannus","ds","FunctionTools"];
tannus_ds_FunctionTools.memoize = function(f,str) {
	if(str == null) {
		str = Std.string;
	}
	var cache = new haxe_ds_StringMap();
	return Reflect.makeVarArgs(function(args) {
		var key = str(args);
		if(__map_reserved[key] != null ? cache.existsReserved(key) : cache.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? cache.getReserved(key) : cache.h[key];
		} else {
			var result = f.apply(null,args);
			var value = result;
			if(__map_reserved[key] != null) {
				cache.setReserved(key,value);
			} else {
				cache.h[key] = value;
			}
			return result;
		}
	});
};
var tannus_ds_Grid = function(w,h) {
	this.w = w;
	this.h = h;
	var this1 = new Array(w * h);
	this.data = this1;
};
$hxClasses["tannus.ds.Grid"] = tannus_ds_Grid;
tannus_ds_Grid.__name__ = ["tannus","ds","Grid"];
tannus_ds_Grid.fromArray = function(dat,w,h) {
	var grid = new tannus_ds_Grid(w,h);
	grid.data = dat.slice(0);
	return grid;
};
tannus_ds_Grid.fromArray2 = function(dat) {
	var h = dat.length;
	if(h > 0) {
		var w = dat[0].length;
		if(w <= 0) {
			throw new js__$Boot_HaxeError("GridError: Grid width must be >= 0");
		}
		return tannus_ds_Grid.fromArray(tannus_ds_ArrayTools.flatten(dat),w,h);
	} else {
		throw new js__$Boot_HaxeError("GridError: Grid height must be >= 0");
	}
};
tannus_ds_Grid.prototype = {
	set: function(x,y,value) {
		if(!(x >= this.w || x < 0 || (y >= this.h || y < 0))) {
			return this.data[x + y * this.w] = value;
		} else {
			return value;
		}
	}
	,setAt: function(pos,value) {
		return this.set(pos._x,pos._y,value);
	}
	,get: function(x,y) {
		if(x >= this.w || x < 0 || (y >= this.h || y < 0)) {
			return null;
		}
		return this.data[x + y * this.w];
	}
	,at: function(pos) {
		var _gthis = this;
		var f = $bind(this,this.get);
		var x = pos._x;
		var y = pos._y;
		var g = function() {
			return f(x,y);
		};
		var f1 = $bind(this,this.set);
		var x1 = pos._x;
		var y1 = pos._y;
		var this1 = new tannus_io__$Pointer_Ref(g,function(a1) {
			return f1(x1,y1,a1);
		});
		var ref = this1;
		ref.deleter = function() {
			_gthis.remove(pos._x,pos._y);
		};
		return ref;
	}
	,pos: function(x,y) {
		return new tannus_ds_GridPos(x,y);
	}
	,posOf: function(value) {
		var _g1 = 0;
		var _g = this.data.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.data[i] == value) {
				return this.pos(i % this.w,i / this.w | 0);
			}
		}
		return null;
	}
	,valueAt: function(pos) {
		return this.get(pos._x,pos._y);
	}
	,remove: function(x,y) {
		var v = this.get(x,y);
		this.data[x + y * this.w] = null;
		return v != null;
	}
	,iterator: function() {
		return new tannus_ds__$Grid_GridValueIterator(this);
	}
	,positions: function() {
		return new tannus_ds__$Grid_GridPosIterator(this);
	}
	,index: function(x,y) {
		return x + y * this.w;
	}
	,position: function(index) {
		return new tannus_ds_GridPos(index % this.w,index / this.w | 0);
	}
	,get_length: function() {
		return this.data.length;
	}
	,w: null
	,h: null
	,data: null
	,__class__: tannus_ds_Grid
	,__properties__: {get_length:"get_length"}
};
var tannus_ds__$Grid_GridValueIterator = function(g) {
	this.grid = g;
	this.it = this.grid.positions();
};
$hxClasses["tannus.ds._Grid.GridValueIterator"] = tannus_ds__$Grid_GridValueIterator;
tannus_ds__$Grid_GridValueIterator.__name__ = ["tannus","ds","_Grid","GridValueIterator"];
tannus_ds__$Grid_GridValueIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		var p = this.it.next();
		return this.grid.get(p._x,p._y);
	}
	,grid: null
	,it: null
	,__class__: tannus_ds__$Grid_GridValueIterator
};
var tannus_ds__$Grid_GridPosIterator = function(g) {
	this.grid = g;
	this.it = new IntIterator(0,g.data.length);
};
$hxClasses["tannus.ds._Grid.GridPosIterator"] = tannus_ds__$Grid_GridPosIterator;
tannus_ds__$Grid_GridPosIterator.__name__ = ["tannus","ds","_Grid","GridPosIterator"];
tannus_ds__$Grid_GridPosIterator.prototype = {
	hasNext: function() {
		var _this = this.it;
		return _this.min < _this.max;
	}
	,next: function() {
		var _this = this.grid;
		var index = this.it.min++;
		return new tannus_ds_GridPos(index % _this.w,index / _this.w | 0);
	}
	,grid: null
	,it: null
	,__class__: tannus_ds__$Grid_GridPosIterator
};
var tannus_ds_GridPos = function(x,y) {
	this._x = x;
	this._y = y;
};
$hxClasses["tannus.ds.GridPos"] = tannus_ds_GridPos;
tannus_ds_GridPos.__name__ = ["tannus","ds","GridPos"];
tannus_ds_GridPos.prototype = {
	left: function() {
		return new tannus_ds_GridPos(this._x - 1,this._y);
	}
	,right: function() {
		return new tannus_ds_GridPos(this._x + 1,this._y);
	}
	,top: function() {
		return new tannus_ds_GridPos(this._x,this._y - 1);
	}
	,bottom: function() {
		return new tannus_ds_GridPos(this._x,this._y + 1);
	}
	,toString: function() {
		return "(" + this._x + ", " + this._y + ")";
	}
	,_x: null
	,get_x: function() {
		return this._x;
	}
	,_y: null
	,get_y: function() {
		return this._y;
	}
	,__class__: tannus_ds_GridPos
	,__properties__: {get_y:"get_y",get_x:"get_x"}
};
var tannus_ds_IntRange = function(mi,ma) {
	tannus_ds_Range.call(this,mi,ma);
};
$hxClasses["tannus.ds.IntRange"] = tannus_ds_IntRange;
tannus_ds_IntRange.__name__ = ["tannus","ds","IntRange"];
tannus_ds_IntRange.__interfaces__ = [tannus_ds_IComparable];
tannus_ds_IntRange.__super__ = tannus_ds_Range;
tannus_ds_IntRange.prototype = $extend(tannus_ds_Range.prototype,{
	iterator: function() {
		return new IntIterator(this.min,this.max);
	}
	,__class__: tannus_ds_IntRange
});
var tannus_ds_IteratorTools = function() { };
$hxClasses["tannus.ds.IteratorTools"] = tannus_ds_IteratorTools;
tannus_ds_IteratorTools.__name__ = ["tannus","ds","IteratorTools"];
tannus_ds_IteratorTools.map = function(iterator,mapper) {
	return new tannus_ds__$IteratorTools_FunctionalIterator(iterator,mapper);
};
var tannus_ds__$IteratorTools_FunctionalIterator = function(iterator,mapper) {
	this.i = iterator;
	this.f = mapper;
};
$hxClasses["tannus.ds._IteratorTools.FunctionalIterator"] = tannus_ds__$IteratorTools_FunctionalIterator;
tannus_ds__$IteratorTools_FunctionalIterator.__name__ = ["tannus","ds","_IteratorTools","FunctionalIterator"];
tannus_ds__$IteratorTools_FunctionalIterator.prototype = {
	hasNext: function() {
		return this.i.hasNext();
	}
	,next: function() {
		return this.f(this.i.next());
	}
	,i: null
	,f: null
	,__class__: tannus_ds__$IteratorTools_FunctionalIterator
};
var tannus_ds_MapTools = function() { };
$hxClasses["tannus.ds.MapTools"] = tannus_ds_MapTools;
tannus_ds_MapTools.__name__ = ["tannus","ds","MapTools"];
tannus_ds_MapTools.keyArray = function(self) {
	var _g = [];
	var k = self.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		_g.push(k1);
	}
	return _g;
};
tannus_ds_MapTools.pull = function(o,source) {
	var key = source.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		var v = source.get(key1);
		o.set(key1,v);
	}
};
tannus_ds_MapTools.toObject = function(self) {
	var o = { };
	var key = self.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		var value = __map_reserved[key1] != null ? self.getReserved(key1) : self.h[key1];
		var tmp;
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["set_" + key1];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			o[tmp](value);
		} else {
			o[key1] = value;
		}
		var tmp2;
		if(o == null) {
			null;
		} else {
			var tmp3;
			if(o.__properties__) {
				tmp2 = o.__properties__["get_" + key1];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				o[tmp2]();
			}
		}
	}
	return o;
};
var tannus_ds__$Maybe_Maybe_$Impl_$ = {};
$hxClasses["tannus.ds._Maybe.Maybe_Impl_"] = tannus_ds__$Maybe_Maybe_$Impl_$;
tannus_ds__$Maybe_Maybe_$Impl_$.__name__ = ["tannus","ds","_Maybe","Maybe_Impl_"];
tannus_ds__$Maybe_Maybe_$Impl_$.__properties__ = {get_value:"get_value",get_exists:"get_exists"}
tannus_ds__$Maybe_Maybe_$Impl_$._new = function(x) {
	var this1 = x;
	return this1;
};
tannus_ds__$Maybe_Maybe_$Impl_$.or = function(this1,alt) {
	if(this1 != null) {
		return this1;
	} else {
		return alt;
	}
};
tannus_ds__$Maybe_Maybe_$Impl_$.orGetter = function(this1,gettr) {
	if(this1 != null) {
		return this1;
	} else {
		return gettr();
	}
};
tannus_ds__$Maybe_Maybe_$Impl_$.runIf = function(this1,f) {
	if(this1 != null) {
		return f(this1 != null ? this1 : this1);
	} else {
		return null;
	}
};
tannus_ds__$Maybe_Maybe_$Impl_$.get_exists = function(this1) {
	return this1 != null;
};
tannus_ds__$Maybe_Maybe_$Impl_$.get_value = function(this1) {
	return this1 != null ? this1 : this1;
};
tannus_ds__$Maybe_Maybe_$Impl_$.orDie = function(this1,error) {
	if(this1 == null) {
		throw js__$Boot_HaxeError.wrap(error);
	}
	return this1 != null ? this1 : this1;
};
tannus_ds__$Maybe_Maybe_$Impl_$.toNonNullable = function(this1) {
	if(this1 != null) {
		return this1;
	} else {
		return this1;
	}
};
tannus_ds__$Maybe_Maybe_$Impl_$.toBoolean = function(this1) {
	return this1 != null;
};
var tannus_ds_Memory = function() { };
$hxClasses["tannus.ds.Memory"] = tannus_ds_Memory;
tannus_ds_Memory.__name__ = ["tannus","ds","Memory"];
tannus_ds_Memory.uniqueIdInt = function() {
	var id = tannus_ds_Memory.state;
	tannus_ds_Memory.state++;
	return id;
};
tannus_ds_Memory.uniqueIdString = function(prefix) {
	if(prefix == null) {
		prefix = "";
	}
	return prefix + tannus_ds_Memory.uniqueIdInt();
};
tannus_ds_Memory.allocRandomId = function(digits) {
	var id = "";
	var r = new tannus_math_Random();
	var _g1 = 0;
	var _g = digits;
	while(_g1 < _g) {
		var i = _g1++;
		var range = [0,0];
		var letter = Math.floor(r.nextInt() / 2147483647 * 2) == 1;
		if(letter) {
			var upper = Math.floor(r.nextInt() / 2147483647 * 2) == 1;
			if(upper) {
				range = [65,90];
			} else {
				range = [97,122];
			}
		} else {
			range = [48,57];
		}
		var min = range[0];
		var n = Math.floor(r.nextInt() / 2147483647 * (range[1] - min + 1) + min);
		var this1;
		if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
			throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
		}
		this1 = n;
		var c = this1;
		id += String.fromCharCode(c);
	}
	if(Lambda.has(tannus_ds_Memory.used,id)) {
		return tannus_ds_Memory.allocRandomId(digits);
	} else {
		tannus_ds_Memory.used.push(id);
		return id;
	}
};
tannus_ds_Memory.freeRandomId = function(id) {
	return HxOverrides.remove(tannus_ds_Memory.used,id);
};
var tannus_ds__$Method_Method_$Impl_$ = {};
$hxClasses["tannus.ds._Method.Method_Impl_"] = tannus_ds__$Method_Method_$Impl_$;
tannus_ds__$Method_Method_$Impl_$.__name__ = ["tannus","ds","_Method","Method_Impl_"];
tannus_ds__$Method_Method_$Impl_$.__properties__ = {get_call:"get_call"}
tannus_ds__$Method_Method_$Impl_$._new = function(func,ctx) {
	var this1;
	var o = ctx;
	var a1 = func;
	this1 = function(a2) {
		return Reflect.callMethod(o,a1,a2);
	};
	return this1;
};
tannus_ds__$Method_Method_$Impl_$.get_call = function(this1) {
	return Reflect.makeVarArgs(this1);
};
tannus_ds__$Method_Method_$Impl_$.fromFunction = function(f) {
	var this1;
	var a1 = f;
	this1 = function(a2) {
		return Reflect.callMethod(null,a1,a2);
	};
	return this1;
};
var tannus_ds__$Obj_Obj_$Impl_$ = {};
$hxClasses["tannus.ds._Obj.Obj_Impl_"] = tannus_ds__$Obj_Obj_$Impl_$;
tannus_ds__$Obj_Obj_$Impl_$.__name__ = ["tannus","ds","_Obj","Obj_Impl_"];
tannus_ds__$Obj_Obj_$Impl_$._new = function(o) {
	var this1 = tannus_ds_CObj.create(o);
	return this1;
};
tannus_ds__$Obj_Obj_$Impl_$.toDyn = function(this1) {
	return this1.o;
};
tannus_ds__$Obj_Obj_$Impl_$.get = function(this1,key) {
	var o = this1.o;
	var tmp;
	var tmp1;
	if(o == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + key];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = o[tmp]();
		} else {
			tmp1 = o[key];
		}
	}
	return tmp1;
};
tannus_ds__$Obj_Obj_$Impl_$.mget = function(this1,key) {
	var o = this1.o;
	var tmp;
	var tmp1;
	if(o == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + key];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = o[tmp]();
		} else {
			tmp1 = o[key];
		}
	}
	return tmp1;
};
tannus_ds__$Obj_Obj_$Impl_$.set = function(this1,key,val) {
	return this1.set(key,val);
};
tannus_ds__$Obj_Obj_$Impl_$.fromDynamic = function(d) {
	return tannus_ds_CObj.create(d);
};
var tannus_ds_CObj = $hx_exports["tannus"]["ds"]["Obj"] = function(obj) {
	this.o = obj;
	this.refCache = new haxe_ds_StringMap();
};
$hxClasses["tannus.ds.CObj"] = tannus_ds_CObj;
tannus_ds_CObj.__name__ = ["tannus","ds","CObj"];
tannus_ds_CObj.create = function(o) {
	if(js_Boot.__instanceof(o,tannus_ds_CObj)) {
		return o;
	} else {
		return new tannus_ds_CObj(o);
	}
};
tannus_ds_CObj.prototype = {
	keys: function() {
		return Reflect.fields(this.o);
	}
	,exists: function(key) {
		return Object.prototype.hasOwnProperty.call(this.o,key);
	}
	,get: function(key) {
		var o = this.o;
		var tmp;
		if(o == null) {
			return null;
		} else {
			var tmp1;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + key];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				return o[tmp]();
			} else {
				return o[key];
			}
		}
	}
	,set: function(key,val) {
		var o = this.o;
		var tmp;
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["set_" + key];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			o[tmp](val);
		} else {
			o[key] = val;
		}
		var o1 = this.o;
		var tmp2;
		var tmp3;
		if(o1 == null) {
			tmp3 = null;
		} else {
			var tmp4;
			if(o1.__properties__) {
				tmp2 = o1.__properties__["get_" + key];
				tmp4 = tmp2;
			} else {
				tmp4 = false;
			}
			if(tmp4) {
				tmp3 = o1[tmp2]();
			} else {
				tmp3 = o1[key];
			}
		}
		return tmp3;
	}
	,method: function(name) {
		var _e = this.o;
		var f = function(func,args) {
			return func.apply(_e,args);
		};
		var o = this.o;
		var tmp;
		var a1;
		if(o == null) {
			a1 = null;
		} else {
			var a11;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + name];
				a11 = tmp;
			} else {
				a11 = false;
			}
			if(a11) {
				a1 = o[tmp]();
			} else {
				a1 = o[name];
			}
		}
		var a12 = a1;
		return Reflect.makeVarArgs(function(a2) {
			return f(a12,a2);
		});
	}
	,call: function(name,args) {
		var o = this.o;
		var o1 = this.o;
		var tmp;
		var func;
		if(o1 == null) {
			func = null;
		} else {
			var func1;
			if(o1.__properties__) {
				tmp = o1.__properties__["get_" + name];
				func1 = tmp;
			} else {
				func1 = false;
			}
			if(func1) {
				func = o1[tmp]();
			} else {
				func = o1[name];
			}
		}
		return func.apply(o,args);
	}
	,field: function(key) {
		var _gthis = this;
		var _this = this.refCache;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.refCache;
			if(__map_reserved[key] != null) {
				return _this1.getReserved(key);
			} else {
				return _this1.h[key];
			}
		} else {
			var this1;
			var f = $bind(this,this.get);
			var a1 = key;
			var f1 = $bind(this,this.set);
			var a11 = key;
			this1 = new tannus_io__$Pointer_Ref(function() {
				return f(a1);
			},function(a2) {
				return f1(a11,a2);
			});
			var ref = this1;
			var _this2 = this.refCache;
			if(__map_reserved[key] != null) {
				_this2.setReserved(key,ref);
			} else {
				_this2.h[key] = ref;
			}
			return ref;
		}
	}
	,remove: function(key) {
		return Reflect.deleteField(this.o,key);
	}
	,pluck: function(keys) {
		var o = { };
		var copy = tannus_ds_CObj.create(o);
		var _g = 0;
		var _g1 = this.keys();
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			if(Lambda.has(keys,k)) {
				var o1 = this.o;
				var tmp;
				var val;
				if(o1 == null) {
					val = null;
				} else {
					var val1;
					if(o1.__properties__) {
						tmp = o1.__properties__["get_" + k];
						val1 = tmp;
					} else {
						val1 = false;
					}
					if(val1) {
						val = o1[tmp]();
					} else {
						val = o1[k];
					}
				}
				copy.set(k,val);
			}
		}
		return copy;
	}
	,rawclone: function() {
		var o = { };
		var copy = tannus_ds_CObj.create(o);
		var _g = 0;
		var _g1 = this.keys();
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			var o1 = this.o;
			var tmp;
			var val;
			if(o1 == null) {
				val = null;
			} else {
				var val1;
				if(o1.__properties__) {
					tmp = o1.__properties__["get_" + k];
					val1 = tmp;
				} else {
					val1 = false;
				}
				if(val1) {
					val = o1[tmp]();
				} else {
					val = o1[k];
				}
			}
			copy.set(k,val);
		}
		return copy;
	}
	,clone: function() {
		var o = this.o;
		var klass = o == null ? null : js_Boot.getClass(o);
		if(klass != null) {
			var copi = Type.createEmptyInstance(klass);
			var ocopy = tannus_ds_CObj.create(copi);
			var _g = 0;
			var _g1 = this.keys();
			while(_g < _g1.length) {
				var k = _g1[_g];
				++_g;
				var o1 = this.o;
				var tmp;
				var val;
				if(o1 == null) {
					val = null;
				} else {
					var val1;
					if(o1.__properties__) {
						tmp = o1.__properties__["get_" + k];
						val1 = tmp;
					} else {
						val1 = false;
					}
					if(val1) {
						val = o1[tmp]();
					} else {
						val = o1[k];
					}
				}
				ocopy.set(k,val);
			}
			return ocopy;
		} else {
			return Reflect.copy(this.o);
		}
	}
	,defineGetter: function(key,getter) {
		var o = this.o;
		var o1 = this.o;
		var tmp;
		var func;
		if(o1 == null) {
			func = null;
		} else {
			var func1;
			if(o1.__properties__) {
				tmp = o1.__properties__["get_" + "__defineGetter__"];
				func1 = tmp;
			} else {
				func1 = false;
			}
			if(func1) {
				func = o1[tmp]();
			} else {
				func = o1["__defineGetter__"];
			}
		}
		func.apply(o,[key,getter]);
	}
	,defineSetter: function(key,setter) {
		var o = this.o;
		var o1 = this.o;
		var tmp;
		var func;
		if(o1 == null) {
			func = null;
		} else {
			var func1;
			if(o1.__properties__) {
				tmp = o1.__properties__["get_" + "__defineSetter__"];
				func1 = tmp;
			} else {
				func1 = false;
			}
			if(func1) {
				func = o1[tmp]();
			} else {
				func = o1["__defineSetter__"];
			}
		}
		func.apply(o,[key,setter]);
	}
	,defineProperty: function(name,pointer) {
		var getter = pointer.getter;
		var o = this.o;
		var o1 = this.o;
		var tmp;
		var func;
		if(o1 == null) {
			func = null;
		} else {
			var func1;
			if(o1.__properties__) {
				tmp = o1.__properties__["get_" + "__defineGetter__"];
				func1 = tmp;
			} else {
				func1 = false;
			}
			if(func1) {
				func = o1[tmp]();
			} else {
				func = o1["__defineGetter__"];
			}
		}
		func.apply(o,[name,getter]);
		var setter = pointer.setter;
		var o2 = this.o;
		var o3 = this.o;
		var tmp1;
		var func2;
		if(o3 == null) {
			func2 = null;
		} else {
			var func3;
			if(o3.__properties__) {
				tmp1 = o3.__properties__["get_" + "__defineSetter__"];
				func3 = tmp1;
			} else {
				func3 = false;
			}
			if(func3) {
				func2 = o3[tmp1]();
			} else {
				func2 = o3["__defineSetter__"];
			}
		}
		func2.apply(o2,[name,setter]);
	}
	,o: null
	,refCache: null
	,__class__: tannus_ds_CObj
};
var tannus_ds__$Object_Object_$Impl_$ = {};
$hxClasses["tannus.ds._Object.Object_Impl_"] = tannus_ds__$Object_Object_$Impl_$;
tannus_ds__$Object_Object_$Impl_$.__name__ = ["tannus","ds","_Object","Object_Impl_"];
tannus_ds__$Object_Object_$Impl_$.__properties__ = {get_keys:"get_keys"}
tannus_ds__$Object_Object_$Impl_$._new = function(o) {
	var this1 = o;
	return this1;
};
tannus_ds__$Object_Object_$Impl_$.get_keys = function(this1) {
	return Reflect.fields(this1);
};
tannus_ds__$Object_Object_$Impl_$.get = function(this1,key) {
	var tmp;
	var tmp1;
	if(this1 == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(this1.__properties__) {
			tmp = this1.__properties__["get_" + key];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = this1[tmp]();
		} else {
			tmp1 = this1[key];
		}
	}
	return tmp1;
};
tannus_ds__$Object_Object_$Impl_$.rawget = function(this1,key) {
	var tmp;
	var tmp1;
	if(this1 == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(this1.__properties__) {
			tmp = this1.__properties__["get_" + key];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = this1[tmp]();
		} else {
			tmp1 = this1[key];
		}
	}
	return tmp1;
};
tannus_ds__$Object_Object_$Impl_$.set = function(this1,key,value) {
	var tmp;
	var tmp1;
	if(this1.__properties__) {
		tmp = this1.__properties__["set_" + key];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		this1[tmp](value);
	} else {
		this1[key] = value;
	}
	var tmp2;
	var tmp3;
	if(this1 == null) {
		tmp3 = null;
	} else {
		var tmp4;
		if(this1.__properties__) {
			tmp2 = this1.__properties__["get_" + key];
			tmp4 = tmp2;
		} else {
			tmp4 = false;
		}
		if(tmp4) {
			tmp3 = this1[tmp2]();
		} else {
			tmp3 = this1[key];
		}
	}
	return tmp3;
};
tannus_ds__$Object_Object_$Impl_$.exists = function(this1,key) {
	return Object.prototype.hasOwnProperty.call(this1,key);
};
tannus_ds__$Object_Object_$Impl_$.remove = function(this1,key) {
	Reflect.deleteField(this1,key);
};
tannus_ds__$Object_Object_$Impl_$.clone = function(this1) {
	var c = { };
	var _g = 0;
	var _g1 = Reflect.fields(this1);
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		var tmp;
		var value;
		if(this1 == null) {
			value = null;
		} else {
			var value1;
			if(this1.__properties__) {
				tmp = this1.__properties__["get_" + k];
				value1 = tmp;
			} else {
				value1 = false;
			}
			if(value1) {
				value = this1[tmp]();
			} else {
				value = this1[k];
			}
		}
		var value2 = value;
		var tmp1;
		var tmp2;
		if(c.__properties__) {
			tmp1 = c.__properties__["set_" + k];
			tmp2 = tmp1;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			c[tmp1](value2);
		} else {
			c[k] = value2;
		}
		var tmp3;
		if(c == null) {
			null;
		} else {
			var tmp4;
			if(c.__properties__) {
				tmp3 = c.__properties__["get_" + k];
				tmp4 = tmp3;
			} else {
				tmp4 = false;
			}
			if(tmp4) {
				c[tmp3]();
			}
		}
	}
	return c;
};
tannus_ds__$Object_Object_$Impl_$.pairs = function(this1) {
	return Reflect.fields(this1).map(function(k) {
		var tmp;
		var tmp1;
		if(this1 == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(this1.__properties__) {
				tmp = this1.__properties__["get_" + k];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = this1[tmp]();
			} else {
				tmp1 = this1[k];
			}
		}
		return { "name" : k, "value" : tmp1};
	});
};
tannus_ds__$Object_Object_$Impl_$.iterator = function(this1) {
	var this2 = this1;
	return HxOverrides.iter(Reflect.fields(this2).map(function(k) {
		var tmp;
		var _this;
		if(this2 == null) {
			_this = null;
		} else {
			var _this1;
			if(this2.__properties__) {
				tmp = this2.__properties__["get_" + k];
				_this1 = tmp;
			} else {
				_this1 = false;
			}
			if(_this1) {
				_this = this2[tmp]();
			} else {
				_this = this2[k];
			}
		}
		return { "name" : k, "value" : _this};
	}));
};
tannus_ds__$Object_Object_$Impl_$.increment = function(this1,other) {
	var _g = 0;
	var _g1 = Reflect.fields(other);
	while(_g < _g1.length) {
		var key = _g1[_g];
		++_g;
		if(!Object.prototype.hasOwnProperty.call(this1,key)) {
			var tmp;
			var value;
			if(other == null) {
				value = null;
			} else {
				var value1;
				if(other.__properties__) {
					tmp = other.__properties__["get_" + key];
					value1 = tmp;
				} else {
					value1 = false;
				}
				if(value1) {
					value = other[tmp]();
				} else {
					value = other[key];
				}
			}
			var value2 = value;
			var tmp1;
			var tmp2;
			if(this1.__properties__) {
				tmp1 = this1.__properties__["set_" + key];
				tmp2 = tmp1;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				this1[tmp1](value2);
			} else {
				this1[key] = value2;
			}
			var tmp3;
			if(this1 == null) {
				null;
			} else {
				var tmp4;
				if(this1.__properties__) {
					tmp3 = this1.__properties__["get_" + key];
					tmp4 = tmp3;
				} else {
					tmp4 = false;
				}
				if(tmp4) {
					this1[tmp3]();
				}
			}
		}
	}
	var this2 = this1;
	return this2;
};
tannus_ds__$Object_Object_$Impl_$.plus = function(this1,other) {
	var res = tannus_ds__$Object_Object_$Impl_$.clone(this1);
	var _g = 0;
	var _g1 = Reflect.fields(other);
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		if(!Object.prototype.hasOwnProperty.call(res,k)) {
			var tmp;
			var value;
			if(other == null) {
				value = null;
			} else {
				var value1;
				if(other.__properties__) {
					tmp = other.__properties__["get_" + k];
					value1 = tmp;
				} else {
					value1 = false;
				}
				if(value1) {
					value = other[tmp]();
				} else {
					value = other[k];
				}
			}
			var value2 = value;
			var tmp1;
			var tmp2;
			if(res.__properties__) {
				tmp1 = res.__properties__["set_" + k];
				tmp2 = tmp1;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				res[tmp1](value2);
			} else {
				res[k] = value2;
			}
			var tmp3;
			if(res == null) {
				null;
			} else {
				var tmp4;
				if(res.__properties__) {
					tmp3 = res.__properties__["get_" + k];
					tmp4 = tmp3;
				} else {
					tmp4 = false;
				}
				if(tmp4) {
					res[tmp3]();
				}
			}
		}
	}
	return res;
};
tannus_ds__$Object_Object_$Impl_$.write = function(this1,o) {
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		var tmp;
		var value;
		if(o == null) {
			value = null;
		} else {
			var value1;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + k];
				value1 = tmp;
			} else {
				value1 = false;
			}
			if(value1) {
				value = o[tmp]();
			} else {
				value = o[k];
			}
		}
		var value2 = value;
		var tmp1;
		var tmp2;
		if(this1.__properties__) {
			tmp1 = this1.__properties__["set_" + k];
			tmp2 = tmp1;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			this1[tmp1](value2);
		} else {
			this1[k] = value2;
		}
		var tmp3;
		if(this1 == null) {
			null;
		} else {
			var tmp4;
			if(this1.__properties__) {
				tmp3 = this1.__properties__["get_" + k];
				tmp4 = tmp3;
			} else {
				tmp4 = false;
			}
			if(tmp4) {
				this1[tmp3]();
			}
		}
	}
};
tannus_ds__$Object_Object_$Impl_$.method = function(this1,mname) {
	var func;
	var tmp;
	var this2;
	if(this1 == null) {
		this2 = null;
	} else {
		var this3;
		if(this1.__properties__) {
			tmp = this1.__properties__["get_" + mname];
			this3 = tmp;
		} else {
			this3 = false;
		}
		if(this3) {
			this2 = this1[tmp]();
		} else {
			this2 = this1[mname];
		}
	}
	var this4 = this2;
	if(this4 != null) {
		func = this4;
	} else {
		func = this4;
	}
	var this5;
	var o = this1;
	var a1 = func;
	this5 = function(a2) {
		return Reflect.callMethod(o,a1,a2);
	};
	return this5;
};
tannus_ds__$Object_Object_$Impl_$.plucka = function(this1,keys) {
	return tannus_ds__$Object_Object_$Impl_$._plk(this1,keys);
};
tannus_ds__$Object_Object_$Impl_$._plk = function(this1,keys,mtarget) {
	var target = mtarget != null ? mtarget : { };
	var _g = 0;
	while(_g < keys.length) {
		var k = keys[_g];
		++_g;
		var tmp;
		var value;
		if(this1 == null) {
			value = null;
		} else {
			var value1;
			if(this1.__properties__) {
				tmp = this1.__properties__["get_" + k];
				value1 = tmp;
			} else {
				value1 = false;
			}
			if(value1) {
				value = this1[tmp]();
			} else {
				value = this1[k];
			}
		}
		var value2 = value;
		var tmp1;
		var tmp2;
		if(target.__properties__) {
			tmp1 = target.__properties__["set_" + k];
			tmp2 = tmp1;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			target[tmp1](value2);
		} else {
			target[k] = value2;
		}
		var tmp3;
		if(target == null) {
			null;
		} else {
			var tmp4;
			if(target.__properties__) {
				tmp3 = target.__properties__["get_" + k];
				tmp4 = tmp3;
			} else {
				tmp4 = false;
			}
			if(tmp4) {
				target[tmp3]();
			}
		}
	}
	return target;
};
tannus_ds__$Object_Object_$Impl_$["is"] = function(this1,oreg) {
	var this2 = new tannus_nore_CSelector(oreg);
	var sel = this2;
	return sel.test(this1);
};
tannus_ds__$Object_Object_$Impl_$.toMap = function(this1) {
	var m = new haxe_ds_StringMap();
	var this2 = this1;
	var p = HxOverrides.iter(Reflect.fields(this2).map(function(k) {
		var tmp;
		var _this;
		if(this2 == null) {
			_this = null;
		} else {
			var _this1;
			if(this2.__properties__) {
				tmp = this2.__properties__["get_" + k];
				_this1 = tmp;
			} else {
				_this1 = false;
			}
			if(_this1) {
				_this = this2[tmp]();
			} else {
				_this = this2[k];
			}
		}
		return { "name" : k, "value" : _this};
	}));
	while(p.hasNext()) {
		var p1 = p.next();
		var key = p1.name;
		var value = p1.value;
		if(__map_reserved[key] != null) {
			m.setReserved(key,value);
		} else {
			m.h[key] = value;
		}
	}
	return m;
};
tannus_ds__$Object_Object_$Impl_$.fromMap = function(map) {
	var this1 = { };
	var o = this1;
	var key = map.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		var value = __map_reserved[key1] != null ? map.getReserved(key1) : map.h[key1];
		var tmp;
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["set_" + key1];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			o[tmp](value);
		} else {
			o[key1] = value;
		}
		var tmp2;
		if(o == null) {
			null;
		} else {
			var tmp3;
			if(o.__properties__) {
				tmp2 = o.__properties__["get_" + key1];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				o[tmp2]();
			}
		}
	}
	return o;
};
var tannus_ds__$Pair_Pair_$Impl_$ = {};
$hxClasses["tannus.ds._Pair.Pair_Impl_"] = tannus_ds__$Pair_Pair_$Impl_$;
tannus_ds__$Pair_Pair_$Impl_$.__name__ = ["tannus","ds","_Pair","Pair_Impl_"];
tannus_ds__$Pair_Pair_$Impl_$._new = function(l,r) {
	var this1 = new tannus_ds_CPair(l,r);
	return this1;
};
tannus_ds__$Pair_Pair_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_ds__$Pair_Pair_$Impl_$.swap = function(this1) {
	var this2 = new tannus_ds_CPair(this1.right,this1.left);
	return this2;
};
tannus_ds__$Pair_Pair_$Impl_$.eq = function(this1,other) {
	if(this1.left == other.left) {
		return this1.right == other.right;
	} else {
		return false;
	}
};
var tannus_ds_CPair = function(l,r) {
	this.left = l;
	this.right = r;
};
$hxClasses["tannus.ds.CPair"] = tannus_ds_CPair;
tannus_ds_CPair.__name__ = ["tannus","ds","CPair"];
tannus_ds_CPair.prototype = {
	equals: function(other) {
		if(this.left == other.left) {
			return this.right == other.right;
		} else {
			return false;
		}
	}
	,toString: function() {
		return "Pair(" + Std.string(this.left) + ", " + Std.string(this.right) + ")";
	}
	,swap: function() {
		var this1 = new tannus_ds_CPair(this.right,this.left);
		return this1;
	}
	,left: null
	,right: null
	,__class__: tannus_ds_CPair
};
var tannus_ds_Promise = function(exec,nocall) {
	if(nocall == null) {
		nocall = false;
	}
	this.back = null;
	this.in_progress = false;
	this.executor = exec;
	this.fulfillment = new tannus_io_Signal();
	this.rejection = new tannus_io_Signal();
	this.derived = [];
	if(!nocall) {
		this.make();
	}
};
$hxClasses["tannus.ds.Promise"] = tannus_ds_Promise;
tannus_ds_Promise.__name__ = ["tannus","ds","Promise"];
tannus_ds_Promise.prototype = {
	fulfill: function(v) {
		this.in_progress = false;
		this.fulfillment.broadcast(v);
	}
	,reject: function(err) {
		this.in_progress = false;
		this.rejection.broadcast(err);
	}
	,derive: function(der) {
		this.derived.push(der);
	}
	,then: function(callback) {
		this.fulfillment.listen(callback,false);
		return this;
	}
	,unless: function(callback) {
		this.rejection.listen(callback,false);
		return this;
	}
	,always: function(cb) {
		var called = false;
		this.then(function(x) {
			if(!called) {
				cb();
				called = true;
			}
		});
		this.unless(function(e) {
			if(!called) {
				cb();
				called = true;
			}
		});
	}
	,transform: function(change) {
		var _gthis = this;
		var res = new tannus_ds_Promise(function(res1,err) {
			_gthis.then(function(val) {
				var res2 = change(val);
				res1(res2);
			});
			_gthis.unless(function(error) {
				err(error);
			});
		});
		this.attach(res);
		return res;
	}
	,parent: function() {
		if(this.back != null) {
			return this.back;
		} else {
			throw new js__$Boot_HaxeError("PromiseError: Cannot read field 'back' from the given Promise, as it has not yet been assigned");
		}
	}
	,attach: function(child) {
		this.derive(child);
		child.back = this;
		return this;
	}
	,make: function(cb) {
		var _gthis = this;
		if(cb == null) {
			cb = function() {
			};
		}
		if(!this.in_progress) {
			this.in_progress = true;
			var stack = new tannus_ds_AsyncStack();
			var _g = 0;
			var _g1 = this.derived;
			while(_g < _g1.length) {
				var child = [_g1[_g]];
				++_g;
				stack.under((function(child1) {
					return function(nxt) {
						child1[0].make(nxt);
					};
				})(child));
			}
			stack.run(function() {
				var ff = function(x) {
					_gthis.fulfill(x);
					cb();
				};
				var rj = function(e) {
					_gthis.reject(e);
					cb();
				};
				_gthis.executor(ff,rj);
			});
		} else {
			var run = 0;
			var rm = function() {
				if(run < 1) {
					_gthis.make();
					run += 1;
				}
			};
			var remake = rm;
			this.fulfillment.listen(function(x1) {
				remake();
			},true);
			this.rejection.listen(function(x2) {
				remake();
			},true);
		}
	}
	,print: function() {
		this.then(function(x) {
			console.log(x);
		});
		return this;
	}
	,typeError: function(msg) {
		return "TypeError: " + msg;
	}
	,bool: function() {
		var _gthis = this;
		var res = new tannus_ds_promises_BoolPromise(function(yep,nope) {
			_gthis.then(function(data) {
				if(typeof(data) == "boolean") {
					yep(data);
				} else {
					nope("TypeError: " + ("Cannot cast " + Std.string(data) + " to Boolean!"));
				}
			});
			_gthis.unless(nope);
		});
		this.attach(res);
		return res;
	}
	,string: function() {
		var _gthis = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_gthis.then(function(data) {
				if(typeof(data) == "string") {
					accept(Std.string(data) + "");
				} else {
					reject("TypeError: " + ("Cannot cast " + Std.string(data) + " to String"));
				}
			});
		});
		this.attach(res);
		return res;
	}
	,array: function() {
		var _gthis = this;
		var res = new tannus_ds_promises_ArrayPromise(function(yep,nope) {
			_gthis.then(function(data) {
				try {
					data = Array.prototype.slice.call(data,0);
					yep(data);
				} catch( error ) {
					if (error instanceof js__$Boot_HaxeError) error = error.val;
					nope(error);
				}
			});
			_gthis.unless(nope);
		});
		this.attach(res);
		return res;
	}
	,object: function() {
		var _gthis = this;
		var res = new tannus_ds_promises_ObjectPromise(function(reply,reject) {
			_gthis.then(function(data) {
				var stype = tannus_internal_TypeTools.typename(data);
				if(typeof(data) != "boolean" && typeof(data) != "number" && !((data instanceof Array) && data.__enum__ == null) && typeof(data) != "string") {
					var _g = Type["typeof"](data);
					switch(_g[1]) {
					case 4:case 6:
						reply(data);
						break;
					default:
						reject("TypeError: " + ("Cannot cast " + stype + " to Object"));
					}
				} else {
					reject("TypeError: " + ("Cannot cast " + stype + " to Object"));
				}
			});
		});
		this.attach(res);
		return res;
	}
	,eq: function(other) {
		var _gthis = this;
		return new tannus_ds_promises_BoolPromise(function(done,fail) {
			_gthis.then(function(data) {
				var _g = other;
				switch(_g[1]) {
				case 0:
					var val = _g[2];
					done(val == data);
					break;
				case 1:
					var prom = _g[2];
					prom.then(function(val1) {
						done(val1 == data);
					});
					prom.unless(fail);
					break;
				}
			});
			_gthis.unless(fail);
		});
	}
	,executor: null
	,fulfillment: null
	,rejection: null
	,in_progress: null
	,derived: null
	,back: null
	,__class__: tannus_ds_Promise
};
var tannus_ds_QueryString = function() { };
$hxClasses["tannus.ds.QueryString"] = tannus_ds_QueryString;
tannus_ds_QueryString.__name__ = ["tannus","ds","QueryString"];
tannus_ds_QueryString.stringify = function(data) {
	var pairs = [];
	var _g = 0;
	var _g1 = Reflect.fields(data);
	while(_g < _g1.length) {
		var key = _g1[_g];
		++_g;
		var tmp;
		var this1;
		if(data == null) {
			this1 = null;
		} else {
			var this2;
			if(data.__properties__) {
				tmp = data.__properties__["get_" + key];
				this2 = tmp;
			} else {
				this2 = false;
			}
			if(this2) {
				this1 = data[tmp]();
			} else {
				this1 = data[key];
			}
		}
		var this3 = this1;
		var val = this3 != null ? this3 : this3;
		var t = tannus_internal_TypeTools.typename(val);
		switch(t) {
		case "Array":
			var arr = val;
			var _g2 = 0;
			while(_g2 < arr.length) {
				var item = arr[_g2];
				++_g2;
				if(!Lambda.has(["Number","String","Boolean"],tannus_internal_TypeTools.typename(item))) {
					throw new js__$Boot_HaxeError("TypeError: Cannot urlify non-primitive values!");
				}
			}
			var _g21 = 0;
			while(_g21 < arr.length) {
				var x = arr[_g21];
				++_g21;
				pairs.push("" + key + "[]=" + tannus_ds_QueryString.enc(x));
			}
			break;
		case "Boolean":case "Number":case "String":
			pairs.push(key + "=" + tannus_ds_QueryString.enc(val));
			break;
		default:
			var this4 = val;
			var o = this4;
			var _g22 = 0;
			var _g3 = Reflect.fields(o);
			while(_g22 < _g3.length) {
				var ok = _g3[_g22];
				++_g22;
				var tmp1;
				var tmp2;
				if(o == null) {
					tmp2 = null;
				} else {
					var tmp3;
					if(o.__properties__) {
						tmp1 = o.__properties__["get_" + ok];
						tmp3 = tmp1;
					} else {
						tmp3 = false;
					}
					if(tmp3) {
						tmp2 = o[tmp1]();
					} else {
						tmp2 = o[ok];
					}
				}
				pairs.push("" + key + "[" + ok + "]=" + tannus_ds_QueryString.enc(tmp2));
			}
		}
	}
	var qs = pairs.join("&");
	return qs;
};
tannus_ds_QueryString.enc = function(value) {
	var s = Std.string(value);
	var s1 = encodeURIComponent(s);
	s1 = StringTools.replace(s1,"%2B","+");
	s1 = StringTools.replace(s1,"%0D","");
	return s1;
};
tannus_ds_QueryString.parse = function(qs) {
	var ekey = new EReg("([A-Z]+[A-Z0-9_\\-]*)\\[([A-Z]+[A-Z0-9]*)\\]","i");
	var earr = new EReg("([A-Z]+[A-Z0-9_\\-]*)\\[([0-9]*)\\]","i");
	var res = { };
	var pairs = qs.split("&").map(function(s) {
		return s.split("=");
	});
	var _g = 0;
	while(_g < pairs.length) {
		var p = pairs[_g];
		++_g;
		if(p.length == 2) {
			var _hx_tmp;
			var _hx_tmp1;
			var _hx_tmp2;
			var _hx_tmp3;
			var _hx_tmp4;
			var _hx_tmp5;
			_hx_tmp3 = decodeURIComponent(p[1].split("+").join(" "));
			var val = _hx_tmp3;
			_hx_tmp = decodeURIComponent(p[0].split("+").join(" "));
			var key = _hx_tmp;
			if(ekey.match(key)) {
				var md = tannus_io__$RegEx_RegEx_$Impl_$.matches(ekey,key)[0].slice(1);
				key = md[0];
				var okey = md[1];
				if(!Object.prototype.hasOwnProperty.call(res,key)) {
					var value = { };
					var tmp;
					var tmp1;
					if(res.__properties__) {
						tmp = res.__properties__["set_" + key];
						tmp1 = tmp;
					} else {
						tmp1 = false;
					}
					if(tmp1) {
						res[tmp](value);
					} else {
						res[key] = value;
					}
					var tmp2;
					if(res == null) {
						null;
					} else {
						var tmp3;
						if(res.__properties__) {
							tmp2 = res.__properties__["get_" + key];
							tmp3 = tmp2;
						} else {
							tmp3 = false;
						}
						if(tmp3) {
							res[tmp2]();
						}
					}
				}
				var tmp4;
				var o;
				if(res == null) {
					o = null;
				} else {
					var o1;
					if(res.__properties__) {
						tmp4 = res.__properties__["get_" + key];
						o1 = tmp4;
					} else {
						o1 = false;
					}
					if(o1) {
						o = res[tmp4]();
					} else {
						o = res[key];
					}
				}
				var this1 = o;
				var this2 = this1;
				var tmp5;
				var tmp6;
				if(this2.__properties__) {
					tmp5 = this2.__properties__["set_" + okey];
					tmp6 = tmp5;
				} else {
					tmp6 = false;
				}
				if(tmp6) {
					this2[tmp5](val);
				} else {
					this2[okey] = val;
				}
				var tmp7;
				if(this2 == null) {
					null;
				} else {
					var tmp8;
					if(this2.__properties__) {
						tmp7 = this2.__properties__["get_" + okey];
						tmp8 = tmp7;
					} else {
						tmp8 = false;
					}
					if(tmp8) {
						this2[tmp7]();
					}
				}
			} else {
				_hx_tmp4 = decodeURIComponent(p[1].split("+").join(" "));
				var val1 = _hx_tmp4;
				_hx_tmp1 = decodeURIComponent(p[0].split("+").join(" "));
				var key1 = _hx_tmp1;
				if(earr.match(key1)) {
					var md1 = tannus_io__$RegEx_RegEx_$Impl_$.matches(earr,key1)[0].slice(1);
					key1 = md1[0];
					var index = Std.parseInt(md1[1]);
					if(!Object.prototype.hasOwnProperty.call(res,key1)) {
						var value1 = [];
						var tmp9;
						var tmp10;
						if(res.__properties__) {
							tmp9 = res.__properties__["set_" + key1];
							tmp10 = tmp9;
						} else {
							tmp10 = false;
						}
						if(tmp10) {
							res[tmp9](value1);
						} else {
							res[key1] = value1;
						}
						var tmp11;
						if(res == null) {
							null;
						} else {
							var tmp12;
							if(res.__properties__) {
								tmp11 = res.__properties__["get_" + key1];
								tmp12 = tmp11;
							} else {
								tmp12 = false;
							}
							if(tmp12) {
								res[tmp11]();
							}
						}
					}
					var tmp13;
					var this3;
					if(res == null) {
						this3 = null;
					} else {
						var this4;
						if(res.__properties__) {
							tmp13 = res.__properties__["get_" + key1];
							this4 = tmp13;
						} else {
							this4 = false;
						}
						if(this4) {
							this3 = res[tmp13]();
						} else {
							this3 = res[key1];
						}
					}
					var this5 = this3;
					var list = js_Boot.__cast(this5 != null ? this5 : this5 , Array);
					if(index != null) {
						list[index] = val1;
					} else {
						list.push(val1);
					}
				} else {
					_hx_tmp5 = decodeURIComponent(p[1].split("+").join(" "));
					var val2 = _hx_tmp5;
					_hx_tmp2 = decodeURIComponent(p[0].split("+").join(" "));
					var key2 = _hx_tmp2;
					var tmp14;
					var tmp15;
					if(res.__properties__) {
						tmp14 = res.__properties__["set_" + key2];
						tmp15 = tmp14;
					} else {
						tmp15 = false;
					}
					if(tmp15) {
						res[tmp14](val2);
					} else {
						res[key2] = val2;
					}
					var tmp16;
					if(res == null) {
						null;
					} else {
						var tmp17;
						if(res.__properties__) {
							tmp16 = res.__properties__["get_" + key2];
							tmp17 = tmp16;
						} else {
							tmp17 = false;
						}
						if(tmp17) {
							res[tmp16]();
						}
					}
				}
			}
		}
	}
	return res;
};
var tannus_ds__$Ref_Ref_$Impl_$ = {};
$hxClasses["tannus.ds._Ref.Ref_Impl_"] = tannus_ds__$Ref_Ref_$Impl_$;
tannus_ds__$Ref_Ref_$Impl_$.__name__ = ["tannus","ds","_Ref","Ref_Impl_"];
tannus_ds__$Ref_Ref_$Impl_$._new = function(r) {
	var this1 = new tannus_ds_CRef(r);
	return this1;
};
tannus_ds__$Ref_Ref_$Impl_$.get = function(this1) {
	return this1.get();
};
tannus_ds__$Ref_Ref_$Impl_$.toString = function(this1) {
	return Std.string(this1.get());
};
var tannus_ds_CRef = function(g) {
	this.getter = g;
	this._value = null;
};
$hxClasses["tannus.ds.CRef"] = tannus_ds_CRef;
tannus_ds_CRef.__name__ = ["tannus","ds","CRef"];
tannus_ds_CRef.prototype = {
	get: function() {
		if(this._value == null) {
			return this._value = this.getter();
		} else {
			return this._value;
		}
	}
	,reset: function() {
		this._value = null;
	}
	,getter: null
	,_value: null
	,__class__: tannus_ds_CRef
};
var tannus_ds__$Stack_StackIterator = function(s) {
	this.stack = s;
};
$hxClasses["tannus.ds._Stack.StackIterator"] = tannus_ds__$Stack_StackIterator;
tannus_ds__$Stack_StackIterator.__name__ = ["tannus","ds","_Stack","StackIterator"];
tannus_ds__$Stack_StackIterator.prototype = {
	hasNext: function() {
		return !this.stack.get_empty();
	}
	,next: function() {
		return this.stack.pop();
	}
	,stack: null
	,__class__: tannus_ds__$Stack_StackIterator
};
var tannus_ds_StringUtils = $hx_exports["StringTools"] = function() { };
$hxClasses["tannus.ds.StringUtils"] = tannus_ds_StringUtils;
tannus_ds_StringUtils.__name__ = ["tannus","ds","StringUtils"];
tannus_ds_StringUtils.byteAt = function(s,i) {
	if(i <= s.length - 1) {
		var n = HxOverrides.cca(s,i);
		var this1;
		if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
			throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
		}
		this1 = n;
		return this1;
	} else {
		throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (s.length - 1) + ")");
	}
};
tannus_ds_StringUtils.byteMap = function(s,f) {
	var res = "";
	var _g1 = 0;
	var _g = s.length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1;
		if(i <= s.length - 1) {
			var n = HxOverrides.cca(s,i);
			var this2;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			}
			this2 = n;
			this1 = this2;
		} else {
			throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (s.length - 1) + ")");
		}
		res += String.fromCharCode(f(this1));
	}
	return res;
};
tannus_ds_StringUtils.toCamelCase = function(s,sep) {
	if(sep == null) {
		sep = "-";
	}
	var parts = s.split(sep);
	if(parts.length <= 1) {
		return parts.join("");
	}
	var result = "";
	result += parts.shift().toLowerCase();
	var _g = 0;
	while(_g < parts.length) {
		var x = parts[_g];
		++_g;
		result += tannus_ds_StringUtils.capitalize(x);
	}
	return result;
};
tannus_ds_StringUtils.toDashed = function(s) {
	return tannus_ds_StringUtils.camelWords(s).join("-");
};
tannus_ds_StringUtils.camelWords = function(s) {
	var words = [];
	var word = "";
	var _g1 = 0;
	var _g = s.length;
	while(_g1 < _g) {
		var i = _g1++;
		var c;
		if(i <= s.length - 1) {
			var n = HxOverrides.cca(s,i);
			var this1;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			}
			this1 = n;
			c = this1;
		} else {
			throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (s.length - 1) + ")");
		}
		if(c >= 65 && c <= 90) {
			words.push(word);
			word = String.fromCharCode(c).toLowerCase();
		} else {
			word += String.fromCharCode(c);
		}
	}
	if(word.length != 0) {
		words.push(word);
	}
	return words;
};
tannus_ds_StringUtils.count = function(str,pattern) {
	var _g = pattern;
	switch(_g[1]) {
	case 0:
		var sub = _g[2];
		var pos = 0;
		var n = 0;
		var step = sub.length;
		while(true) {
			pos = str.indexOf(sub,pos);
			if(pos >= 0) {
				++n;
				pos += step;
			} else {
				break;
			}
		}
		return n;
	case 1:
		var pat = _g[2];
		var e = pat;
		return tannus_io__$RegEx_RegEx_$Impl_$.matches(e,str).length;
	}
};
tannus_ds_StringUtils.strip = function(str,pat) {
	var _g = pat;
	switch(_g[1]) {
	case 0:
		var repl = _g[2];
		return StringTools.replace(str,repl,"");
	case 1:
		var patt = _g[2];
		var res = str;
		var reg = patt;
		var bits = tannus_io__$RegEx_RegEx_$Impl_$.matches(reg,res);
		var _g1 = 0;
		while(_g1 < bits.length) {
			var bit = bits[_g1];
			++_g1;
			res = StringTools.replace(res,bit[0],"");
		}
		return res;
	}
};
tannus_ds_StringUtils.remove = function(str,sub) {
	var i = str.indexOf(sub);
	if(i == -1) {
		return str;
	} else if(i == 0) {
		return str.substring(i + sub.length);
	} else {
		return str.substring(0,i) + str.substring(i + 1);
	}
};
tannus_ds_StringUtils.wrap = function(str,wrapper,end) {
	if(end == null) {
		end = wrapper;
	}
	return wrapper + str + end;
};
tannus_ds_StringUtils.capitalize = function(s,fancy) {
	if(fancy == null) {
		fancy = false;
	}
	if(!fancy) {
		return s.substring(0,1).toUpperCase() + s.substring(1).toLowerCase();
	} else {
		var res = "";
		var lwan = false;
		var _g1 = 0;
		var _g = s.length;
		while(_g1 < _g) {
			var i = _g1++;
			var c;
			if(i <= s.length - 1) {
				var n = HxOverrides.cca(s,i);
				var this1;
				if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
					throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
				}
				this1 = n;
				c = this1;
			} else {
				throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (s.length - 1) + ")");
			}
			if(c >= 48 && c <= 57 || (c >= 65 && c <= 90 || c >= 97 && c <= 122)) {
				if(c >= 65 && c <= 90 || c >= 97 && c <= 122) {
					var l = String.fromCharCode(c);
					res += lwan ? l.toLowerCase() : l.toUpperCase();
				} else {
					res += String.fromCharCode(c);
				}
				lwan = true;
			} else {
				res += String.fromCharCode(c);
				lwan = false;
			}
		}
		return res;
	}
};
tannus_ds_StringUtils.has = function(str,sub) {
	var i;
	try {
		i = str.indexOf(sub);
	} catch( err ) {
		i = -1;
	}
	return i != -1;
};
tannus_ds_StringUtils.slice = function(str,pos,len) {
	if(len != null) {
		return HxOverrides.substr(str,pos,len);
	} else {
		return str.substring(pos);
	}
};
tannus_ds_StringUtils.before = function(s,del) {
	if(del != "" && tannus_ds_StringUtils.has(s,del)) {
		return s.substring(0,s.indexOf(del));
	} else {
		return s;
	}
};
tannus_ds_StringUtils.beforeLast = function(s,del) {
	if(del != "" && tannus_ds_StringUtils.has(s,del)) {
		return s.substring(0,s.lastIndexOf(del));
	} else {
		return s;
	}
};
tannus_ds_StringUtils.after = function(s,del) {
	if(del != "" && tannus_ds_StringUtils.has(s,del)) {
		return s.substring(s.indexOf(del) + del.length);
	} else {
		return s;
	}
};
tannus_ds_StringUtils.afterLast = function(s,del) {
	if(del != "" && tannus_ds_StringUtils.has(s,del)) {
		return s.substring(s.lastIndexOf(del) + del.length);
	} else {
		return "";
	}
};
tannus_ds_StringUtils.separate = function(s,sep,last) {
	if(last == null) {
		last = false;
	}
	var this1;
	var this2 = [(last ? tannus_ds_StringUtils.beforeLast : tannus_ds_StringUtils.before)(s,sep),(last ? tannus_ds_StringUtils.afterLast : tannus_ds_StringUtils.after)(s,sep)];
	this1 = this2;
	return this1;
};
tannus_ds_StringUtils.lastByte = function(s) {
	var n = HxOverrides.cca(s,s.length - 1);
	var this1;
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
		throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
	}
	this1 = n;
	return this1;
};
tannus_ds_StringUtils.empty = function(s) {
	return s.length == 0;
};
tannus_ds_StringUtils.times = function(s,count) {
	if(count == 0) {
		return "";
	} else {
		var res = s;
		var _g1 = 0;
		var _g = --count;
		while(_g1 < _g) {
			var i = _g1++;
			res += s;
		}
		return res;
	}
};
tannus_ds_StringUtils.isNumeric = function(s) {
	var _g1 = 0;
	var _g = s.length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1;
		if(i <= s.length - 1) {
			var n = HxOverrides.cca(s,i);
			var this2;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			}
			this2 = n;
			this1 = this2;
		} else {
			throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (s.length - 1) + ")");
		}
		if(!(this1 >= 48 && this1 <= 57)) {
			return false;
		}
	}
	return true;
};
var tannus_ds__$StringUtils_Sep_$Impl_$ = {};
$hxClasses["tannus.ds._StringUtils.Sep_Impl_"] = tannus_ds__$StringUtils_Sep_$Impl_$;
tannus_ds__$StringUtils_Sep_$Impl_$.__name__ = ["tannus","ds","_StringUtils","Sep_Impl_"];
tannus_ds__$StringUtils_Sep_$Impl_$.__properties__ = {get_after:"get_after",get_before:"get_before"}
tannus_ds__$StringUtils_Sep_$Impl_$._new = function(a,b) {
	var this1;
	var this2 = [a,b];
	this1 = this2;
	return this1;
};
tannus_ds__$StringUtils_Sep_$Impl_$.get_before = function(this1) {
	return this1[0];
};
tannus_ds__$StringUtils_Sep_$Impl_$.get_after = function(this1) {
	return this1[1];
};
var tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$ = {};
$hxClasses["tannus.ds._ThreeTuple.ThreeTuple_Impl_"] = tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$;
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.__name__ = ["tannus","ds","_ThreeTuple","ThreeTuple_Impl_"];
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.__properties__ = {set_three:"set_three",get_three:"get_three",set_two:"set_two",get_two:"get_two",set_one:"set_one",get_one:"get_one"}
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$._new = function(a,b,c) {
	var this1 = [a,b,c];
	return this1;
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.get_one = function(this1) {
	return this1[0];
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.set_one = function(this1,v) {
	return this1[0] = v;
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.get_two = function(this1) {
	return this1[1];
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.set_two = function(this1,v) {
	return this1[1] = v;
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.get_three = function(this1) {
	return this1[2];
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.set_three = function(this1,v) {
	return this1[2] = v;
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.toString = function(this1) {
	return "(" + Std.string(this1[0]) + ", " + Std.string(this1[1]) + ", " + Std.string(this1[2]) + ")";
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.toArray = function(this1) {
	return this1;
};
var tannus_ds__$TwoTuple_TwoTuple_$Impl_$ = {};
$hxClasses["tannus.ds._TwoTuple.TwoTuple_Impl_"] = tannus_ds__$TwoTuple_TwoTuple_$Impl_$;
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.__name__ = ["tannus","ds","_TwoTuple","TwoTuple_Impl_"];
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.__properties__ = {set_two:"set_two",get_two:"get_two",set_one:"set_one",get_one:"get_one"}
tannus_ds__$TwoTuple_TwoTuple_$Impl_$._new = function(a,b) {
	var this1 = [a,b];
	return this1;
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.get_one = function(this1) {
	return this1[0];
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.set_one = function(this1,v) {
	return this1[0] = v;
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.get_two = function(this1) {
	return this1[1];
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.set_two = function(this1,v) {
	return this1[1] = v;
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.toString = function(this1) {
	return "(" + Std.string(this1[0]) + ", " + Std.string(this1[1]) + ")";
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.toArray = function(this1) {
	return this1;
};
var tannus_ds_data_IData = function() { };
$hxClasses["tannus.ds.data.IData"] = tannus_ds_data_IData;
tannus_ds_data_IData.__name__ = ["tannus","ds","data","IData"];
tannus_ds_data_IData.prototype = {
	get_capacity: null
	,get_length: null
	,get_full: null
	,get: null
	,set: null
	,has: null
	,add: null
	,fill: null
	,sets: null
	,__class__: tannus_ds_data_IData
	,__properties__: {get_full:"get_full",get_length:"get_length",get_capacity:"get_capacity"}
};
var tannus_ds_data_BoundData = function(refs) {
	this.d = refs.slice(0);
	this.size = [this.d.length,this.d.length];
};
$hxClasses["tannus.ds.data.BoundData"] = tannus_ds_data_BoundData;
tannus_ds_data_BoundData.__name__ = ["tannus","ds","data","BoundData"];
tannus_ds_data_BoundData.__interfaces__ = [tannus_ds_data_IData];
tannus_ds_data_BoundData.prototype = {
	get: function(index) {
		return ($_=this.d[index],$bind($_,$_.get))();
	}
	,set: function(index,value) {
		return ($_=this.d[index],$bind($_,$_.set))(value);
	}
	,has: function(index) {
		return ($_=this.d[index],$bind($_,$_.get))() != null;
	}
	,add: function(value) {
		var _g1 = 0;
		var _g = this.size[0];
		while(_g1 < _g) {
			var i = _g1++;
			if(($_=this.d[i],$bind($_,$_.get))() == null) {
				($_=this.d[i],$bind($_,$_.set))(value);
				return i;
			}
		}
		return -1;
	}
	,fill: function(value) {
		var _g1 = 0;
		var _g = this.size[0];
		while(_g1 < _g) {
			var i = _g1++;
			($_=this.d[i],$bind($_,$_.set))(value);
		}
	}
	,sets: function(values) {
		var _g1 = 0;
		var _g = values.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.d[i].set(values[i]);
		}
	}
	,get_capacity: function() {
		return this.size[0];
	}
	,get_length: function() {
		return this.size[1];
	}
	,get_full: function() {
		return this.size[1] == this.size[0];
	}
	,size: null
	,d: null
	,__class__: tannus_ds_data_BoundData
	,__properties__: {get_full:"get_full",get_length:"get_length",get_capacity:"get_capacity"}
};
var tannus_ds_data_Data = function(len,value) {
	this.size = [len,0];
	var length = this.size[0];
	var this1 = new Array(length);
	this.d = this1;
	var _g1 = 0;
	var _g = this.size[0];
	while(_g1 < _g) {
		var i = _g1++;
		this.set(i,value);
	}
};
$hxClasses["tannus.ds.data.Data"] = tannus_ds_data_Data;
tannus_ds_data_Data.__name__ = ["tannus","ds","data","Data"];
tannus_ds_data_Data.__interfaces__ = [tannus_ds_data_IData];
tannus_ds_data_Data.fromDataImpl = function(impl) {
	return new tannus_ds_data_Data(0).reset(impl);
};
tannus_ds_data_Data.fromArray = function(array) {
	var impl = array.slice(0);
	return new tannus_ds_data_Data(0).reset(impl);
};
tannus_ds_data_Data.prototype = {
	get: function(index) {
		return this.d[index];
	}
	,set: function(index,value) {
		var delta = 0;
		if(value != null && this.d[index] == null) {
			delta = 1;
		} else if(value == null && this.d[index] != null) {
			delta = -1;
		}
		this.d[index] = value;
		this.size[1] += delta;
		return this.d[index];
	}
	,has: function(index) {
		return this.d[index] != null;
	}
	,add: function(value) {
		var index = 0;
		while(index < this.size[0]) {
			if(this.d[index] == null) {
				this.set(index,value);
				return index;
			}
			++index;
		}
		return -1;
	}
	,fill: function(value) {
		var _g1 = 0;
		var _g = this.size[0];
		while(_g1 < _g) {
			var i = _g1++;
			this.set(i,value);
		}
	}
	,sets: function(values) {
		var _g1 = 0;
		var _g = values.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.set(i,values[i]);
		}
	}
	,reset: function(impl) {
		this.d = impl;
		this.size = [this.d.length,0];
		var _g1 = 0;
		var _g = this.d.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.d[i] != null) {
				this.size[1]++;
			}
		}
		return this;
	}
	,get_capacity: function() {
		return this.size[0];
	}
	,get_length: function() {
		return this.size[1];
	}
	,get_full: function() {
		return this.size[1] == this.size[0];
	}
	,size: null
	,d: null
	,__class__: tannus_ds_data_Data
	,__properties__: {get_full:"get_full",get_length:"get_length",get_capacity:"get_capacity"}
};
var tannus_ds_dict_IDict = function() { };
$hxClasses["tannus.ds.dict.IDict"] = tannus_ds_dict_IDict;
tannus_ds_dict_IDict.__name__ = ["tannus","ds","dict","IDict"];
tannus_ds_dict_IDict.prototype = {
	get: null
	,set: null
	,reference: null
	,exists: null
	,remove: null
	,iterator: null
	,keys: null
	,pairs: null
	,hxSerialize: null
	,hxUnserialize: null
	,__class__: tannus_ds_dict_IDict
};
var tannus_ds_dict_ComparableDict = function() {
	this._pairs = new List();
};
$hxClasses["tannus.ds.dict.ComparableDict"] = tannus_ds_dict_ComparableDict;
tannus_ds_dict_ComparableDict.__name__ = ["tannus","ds","dict","ComparableDict"];
tannus_ds_dict_ComparableDict.__interfaces__ = [tannus_ds_dict_IDict];
tannus_ds_dict_ComparableDict.prototype = {
	pair: function(key,value) {
		var _g_head = this._pairs.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var p = val;
			if(p[0].equals(key)) {
				return p;
			}
		}
		if(value != null) {
			var this1;
			var this2 = [key,value];
			this1 = this2;
			var pair = this1;
			this._pairs.add(pair);
			return pair;
		} else {
			return null;
		}
	}
	,get: function(key) {
		var p = this.pair(key);
		if(p != null) {
			return p[1];
		} else {
			return null;
		}
	}
	,set: function(key,value) {
		var p = this.pair(key,value);
		return p[1] = value;
	}
	,reference: function(key) {
		var this1;
		var f = $bind(this,this.get);
		var a1 = key;
		var f1 = $bind(this,this.set);
		var a11 = key;
		this1 = new tannus_io__$Pointer_Ref(function() {
			return f(a1);
		},function(a2) {
			return f1(a11,a2);
		});
		return this1;
	}
	,exists: function(key) {
		return this.pair(key) != null;
	}
	,remove: function(key) {
		var p = this.pair(key);
		if(p != null) {
			return this._pairs.remove(p);
		} else {
			return false;
		}
	}
	,iterator: function() {
		return new tannus_ds_dict_ComparableDictIterator(this);
	}
	,keys: function() {
		return new tannus_ds_dict_ComparableDictKeyIterator(this);
	}
	,pairs: function() {
		return new _$List_ListIterator(this._pairs.h);
	}
	,hxSerialize: function(s) {
		var f = $bind(s,s.serialize);
		var w = function(v) {
			f(v);
		};
		var _g = [];
		var pair = this.pairs();
		while(pair.hasNext()) {
			var pair1 = pair.next();
			_g.push(pair1);
		}
		var pl = _g;
		w(pl.length);
		var _g1 = 0;
		while(_g1 < pl.length) {
			var p = pl[_g1];
			++_g1;
			w(p[0]);
			w(p[1]);
		}
	}
	,hxUnserialize: function(u) {
		this._pairs = new List();
		var count = u.unserialize();
		var _g1 = 0;
		var _g = count;
		while(_g1 < _g) {
			var i = _g1++;
			this.set(u.unserialize(),u.unserialize());
		}
	}
	,_pairs: null
	,__class__: tannus_ds_dict_ComparableDict
};
var tannus_ds_dict_ComparableDictIterator = function(cd) {
	this.it = new _$List_ListIterator(cd._pairs.h);
};
$hxClasses["tannus.ds.dict.ComparableDictIterator"] = tannus_ds_dict_ComparableDictIterator;
tannus_ds_dict_ComparableDictIterator.__name__ = ["tannus","ds","dict","ComparableDictIterator"];
tannus_ds_dict_ComparableDictIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		return this.it.next()[1];
	}
	,it: null
	,__class__: tannus_ds_dict_ComparableDictIterator
};
var tannus_ds_dict_ComparableDictKeyIterator = function(cd) {
	this.it = new _$List_ListIterator(cd._pairs.h);
};
$hxClasses["tannus.ds.dict.ComparableDictKeyIterator"] = tannus_ds_dict_ComparableDictKeyIterator;
tannus_ds_dict_ComparableDictKeyIterator.__name__ = ["tannus","ds","dict","ComparableDictKeyIterator"];
tannus_ds_dict_ComparableDictKeyIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		return this.it.next()[0];
	}
	,it: null
	,__class__: tannus_ds_dict_ComparableDictKeyIterator
};
var tannus_ds_dict_EnumValueDict = function() {
	this.m = new haxe_ds_EnumValueMap();
};
$hxClasses["tannus.ds.dict.EnumValueDict"] = tannus_ds_dict_EnumValueDict;
tannus_ds_dict_EnumValueDict.__name__ = ["tannus","ds","dict","EnumValueDict"];
tannus_ds_dict_EnumValueDict.__interfaces__ = [tannus_ds_dict_IDict];
tannus_ds_dict_EnumValueDict.prototype = {
	get: function(key) {
		return this.m.get(key);
	}
	,set: function(k,v) {
		this.m.set(k,v);
		return this.m.get(k);
	}
	,reference: function(key) {
		var f = ($_=this.m,$bind($_,$_.get));
		var a1 = key;
		var this1;
		var f1 = $bind(this,this.set);
		var k = key;
		this1 = new tannus_io__$Pointer_Ref(function() {
			return f(a1);
		},function(v) {
			return f1(k,v);
		});
		return this1;
	}
	,exists: function(k) {
		return this.m.exists(k);
	}
	,remove: function(k) {
		return this.m.remove(k);
	}
	,iterator: function() {
		return this.m.iterator();
	}
	,keys: function() {
		return this.m.keys();
	}
	,pairs: function() {
		return new tannus_ds_dict_EVDPairIterator(this);
	}
	,hxSerialize: function(s) {
		var f = $bind(s,s.serialize);
		var w = function(v) {
			f(v);
		};
		var _g = [];
		var pair = new tannus_ds_dict_EVDPairIterator(this);
		while(pair.hasNext()) {
			var pair1 = pair.next();
			_g.push(pair1);
		}
		var pl = _g;
		w(pl.length);
		var _g1 = 0;
		while(_g1 < pl.length) {
			var p = pl[_g1];
			++_g1;
			w(p[0]);
			w(p[1]);
		}
	}
	,hxUnserialize: function(u) {
		var count = u.unserialize();
		this.m = new haxe_ds_EnumValueMap();
		var _g1 = 0;
		var _g = count;
		while(_g1 < _g) {
			var i = _g1++;
			this.set(u.unserialize(),u.unserialize());
		}
	}
	,m: null
	,__class__: tannus_ds_dict_EnumValueDict
};
var tannus_ds_dict_EVDPairIterator = function(d) {
	this.dict = d;
	this.it = this.dict.m.keys();
};
$hxClasses["tannus.ds.dict.EVDPairIterator"] = tannus_ds_dict_EVDPairIterator;
tannus_ds_dict_EVDPairIterator.__name__ = ["tannus","ds","dict","EVDPairIterator"];
tannus_ds_dict_EVDPairIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		var k = this.it.next();
		var this1;
		var this2 = [k,this.dict.m.get(k)];
		this1 = this2;
		return this1;
	}
	,dict: null
	,it: null
	,__class__: tannus_ds_dict_EVDPairIterator
};
var tannus_ds_dict_IComparableDict = function() {
	this.t = new tannus_ds_dict_IComparableTree();
};
$hxClasses["tannus.ds.dict.IComparableDict"] = tannus_ds_dict_IComparableDict;
tannus_ds_dict_IComparableDict.__name__ = ["tannus","ds","dict","IComparableDict"];
tannus_ds_dict_IComparableDict.__interfaces__ = [tannus_ds_dict_IDict];
tannus_ds_dict_IComparableDict.prototype = {
	get: function(key) {
		return this.t.get(key);
	}
	,set: function(key,value) {
		this.t.set(key,value);
		return this.t.get(key);
	}
	,reference: function(key) {
		var f = ($_=this.t,$bind($_,$_.get));
		var a1 = key;
		var this1;
		var f1 = $bind(this,this.set);
		var a11 = key;
		this1 = new tannus_io__$Pointer_Ref(function() {
			return f(a1);
		},function(a2) {
			return f1(a11,a2);
		});
		return this1;
	}
	,exists: function(key) {
		return this.t.exists(key);
	}
	,remove: function(key) {
		return this.t.remove(key);
	}
	,iterator: function() {
		return this.t.iterator();
	}
	,keys: function() {
		return this.t.keys();
	}
	,pairs: function() {
		return new tannus_ds_dict_ICDPairIterator(this);
	}
	,hxSerialize: function(s) {
		var f = $bind(s,s.serialize);
		var w = function(v) {
			f(v);
		};
		var _g = [];
		var pair = new tannus_ds_dict_ICDPairIterator(this);
		while(pair.hasNext()) {
			var pair1 = pair.next();
			_g.push(pair1);
		}
		var pl = _g;
		w(pl.length);
		var _g1 = 0;
		while(_g1 < pl.length) {
			var p = pl[_g1];
			++_g1;
			w(p[0]);
			w(p[1]);
		}
	}
	,hxUnserialize: function(u) {
		var count = u.unserialize();
		this.t = new tannus_ds_dict_IComparableTree();
		var _g1 = 0;
		var _g = count;
		while(_g1 < _g) {
			var i = _g1++;
			this.set(u.unserialize(),u.unserialize());
		}
	}
	,t: null
	,__class__: tannus_ds_dict_IComparableDict
};
var tannus_ds_dict_IComparableTree = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["tannus.ds.dict.IComparableTree"] = tannus_ds_dict_IComparableTree;
tannus_ds_dict_IComparableTree.__name__ = ["tannus","ds","dict","IComparableTree"];
tannus_ds_dict_IComparableTree.__super__ = haxe_ds_BalancedTree;
tannus_ds_dict_IComparableTree.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(x,y) {
		return x.compareTo(y);
	}
	,__class__: tannus_ds_dict_IComparableTree
});
var tannus_ds_dict_ICDPairIterator = function(dict) {
	this.d = dict;
	this.i = this.d.t.keys();
};
$hxClasses["tannus.ds.dict.ICDPairIterator"] = tannus_ds_dict_ICDPairIterator;
tannus_ds_dict_ICDPairIterator.__name__ = ["tannus","ds","dict","ICDPairIterator"];
tannus_ds_dict_ICDPairIterator.prototype = {
	d: null
	,i: null
	,hasNext: function() {
		return this.i.hasNext();
	}
	,next: function() {
		var k = this.i.next();
		var this1;
		var this2 = [k,this.d.t.get(k)];
		this1 = this2;
		return this1;
	}
	,__class__: tannus_ds_dict_ICDPairIterator
};
var tannus_ds_dict_IntDict = function() {
	this.m = new haxe_ds_IntMap();
};
$hxClasses["tannus.ds.dict.IntDict"] = tannus_ds_dict_IntDict;
tannus_ds_dict_IntDict.__name__ = ["tannus","ds","dict","IntDict"];
tannus_ds_dict_IntDict.__interfaces__ = [tannus_ds_dict_IDict];
tannus_ds_dict_IntDict.prototype = {
	get: function(key) {
		return this.m.h[key];
	}
	,set: function(k,v) {
		this.m.h[k] = v;
		return this.m.h[k];
	}
	,reference: function(key) {
		var f = ($_=this.m,$bind($_,$_.get));
		var a1 = key;
		var this1;
		var f1 = $bind(this,this.set);
		var k = key;
		this1 = new tannus_io__$Pointer_Ref(function() {
			return f(a1);
		},function(v) {
			return f1(k,v);
		});
		return this1;
	}
	,exists: function(k) {
		return this.m.h.hasOwnProperty(k);
	}
	,remove: function(k) {
		return this.m.remove(k);
	}
	,iterator: function() {
		return this.m.iterator();
	}
	,keys: function() {
		return this.m.keys();
	}
	,pairs: function() {
		return new tannus_ds_dict_IntDictPairIterator(this);
	}
	,hxSerialize: function(s) {
		var f = $bind(s,s.serialize);
		var w = function(v) {
			f(v);
		};
		var _g = [];
		var pair = new tannus_ds_dict_IntDictPairIterator(this);
		while(pair.hasNext()) {
			var pair1 = pair.next();
			_g.push(pair1);
		}
		var pl = _g;
		w(pl.length);
		var _g1 = 0;
		while(_g1 < pl.length) {
			var p = pl[_g1];
			++_g1;
			w(p[0]);
			w(p[1]);
		}
	}
	,hxUnserialize: function(u) {
		var count = u.unserialize();
		this.m = new haxe_ds_IntMap();
		var _g1 = 0;
		var _g = count;
		while(_g1 < _g) {
			var i = _g1++;
			this.set(u.unserialize(),u.unserialize());
		}
	}
	,m: null
	,__class__: tannus_ds_dict_IntDict
};
var tannus_ds_dict_IntDictPairIterator = function(d) {
	this.dict = d;
	this.it = this.dict.m.keys();
};
$hxClasses["tannus.ds.dict.IntDictPairIterator"] = tannus_ds_dict_IntDictPairIterator;
tannus_ds_dict_IntDictPairIterator.__name__ = ["tannus","ds","dict","IntDictPairIterator"];
tannus_ds_dict_IntDictPairIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		var k = this.it.next();
		var this1;
		var this2 = [k,this.dict.m.h[k]];
		this1 = this2;
		return this1;
	}
	,dict: null
	,it: null
	,__class__: tannus_ds_dict_IntDictPairIterator
};
var tannus_ds_dict__$Pair_Pair_$Impl_$ = {};
$hxClasses["tannus.ds.dict._Pair.Pair_Impl_"] = tannus_ds_dict__$Pair_Pair_$Impl_$;
tannus_ds_dict__$Pair_Pair_$Impl_$.__name__ = ["tannus","ds","dict","_Pair","Pair_Impl_"];
tannus_ds_dict__$Pair_Pair_$Impl_$.__properties__ = {set_value:"set_value",get_value:"get_value",get_key:"get_key"}
tannus_ds_dict__$Pair_Pair_$Impl_$._new = function(key,value) {
	var this1;
	var this2 = [key,value];
	this1 = this2;
	return this1;
};
tannus_ds_dict__$Pair_Pair_$Impl_$.get_key = function(this1) {
	return this1[0];
};
tannus_ds_dict__$Pair_Pair_$Impl_$.get_value = function(this1) {
	return this1[1];
};
tannus_ds_dict__$Pair_Pair_$Impl_$.set_value = function(this1,v) {
	return this1[1] = v;
};
var tannus_ds_dict_StringDict = function() {
	this.m = new haxe_ds_StringMap();
};
$hxClasses["tannus.ds.dict.StringDict"] = tannus_ds_dict_StringDict;
tannus_ds_dict_StringDict.__name__ = ["tannus","ds","dict","StringDict"];
tannus_ds_dict_StringDict.__interfaces__ = [tannus_ds_dict_IDict];
tannus_ds_dict_StringDict.prototype = {
	get: function(key) {
		var _this = this.m;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,set: function(k,v) {
		var _this = this.m;
		if(__map_reserved[k] != null) {
			_this.setReserved(k,v);
		} else {
			_this.h[k] = v;
		}
		var _this1 = this.m;
		if(__map_reserved[k] != null) {
			return _this1.getReserved(k);
		} else {
			return _this1.h[k];
		}
	}
	,reference: function(key) {
		var f = ($_=this.m,$bind($_,$_.get));
		var a1 = key;
		var this1;
		var f1 = $bind(this,this.set);
		var k = key;
		this1 = new tannus_io__$Pointer_Ref(function() {
			return f(a1);
		},function(v) {
			return f1(k,v);
		});
		return this1;
	}
	,exists: function(k) {
		var _this = this.m;
		if(__map_reserved[k] != null) {
			return _this.existsReserved(k);
		} else {
			return _this.h.hasOwnProperty(k);
		}
	}
	,remove: function(k) {
		return this.m.remove(k);
	}
	,iterator: function() {
		var _this = this.m;
		return new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
	}
	,keys: function() {
		return this.m.keys();
	}
	,pairs: function() {
		return new tannus_ds_dict_StringDictPairIterator(this);
	}
	,hxSerialize: function(s) {
		var f = $bind(s,s.serialize);
		var w = function(v) {
			f(v);
		};
		var _g = [];
		var pair = new tannus_ds_dict_StringDictPairIterator(this);
		while(pair.hasNext()) {
			var pair1 = pair.next();
			_g.push(pair1);
		}
		var pl = _g;
		w(pl.length);
		var _g1 = 0;
		while(_g1 < pl.length) {
			var p = pl[_g1];
			++_g1;
			w(p[0]);
			w(p[1]);
		}
	}
	,hxUnserialize: function(u) {
		var count = u.unserialize();
		this.m = new haxe_ds_StringMap();
		var _g1 = 0;
		var _g = count;
		while(_g1 < _g) {
			var i = _g1++;
			this.set(u.unserialize(),u.unserialize());
		}
	}
	,m: null
	,__class__: tannus_ds_dict_StringDict
};
var tannus_ds_dict_StringDictPairIterator = function(d) {
	this.dict = d;
	this.it = this.dict.m.keys();
};
$hxClasses["tannus.ds.dict.StringDictPairIterator"] = tannus_ds_dict_StringDictPairIterator;
tannus_ds_dict_StringDictPairIterator.__name__ = ["tannus","ds","dict","StringDictPairIterator"];
tannus_ds_dict_StringDictPairIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		var k = this.it.next();
		var _this = this.dict.m;
		var this1;
		var this2 = [k,__map_reserved[k] != null ? _this.getReserved(k) : _this.h[k]];
		this1 = this2;
		return this1;
	}
	,dict: null
	,it: null
	,__class__: tannus_ds_dict_StringDictPairIterator
};
var tannus_ds_promises_ArrayPromise = function(f) {
	tannus_ds_Promise.call(this,f);
};
$hxClasses["tannus.ds.promises.ArrayPromise"] = tannus_ds_promises_ArrayPromise;
tannus_ds_promises_ArrayPromise.__name__ = ["tannus","ds","promises","ArrayPromise"];
tannus_ds_promises_ArrayPromise.fromPrim = function(pa) {
	return new tannus_ds_promises_ArrayPromise(function(res,err) {
		pa.then(res);
		pa.unless(err);
	});
};
tannus_ds_promises_ArrayPromise.__super__ = tannus_ds_Promise;
tannus_ds_promises_ArrayPromise.prototype = $extend(tannus_ds_Promise.prototype,{
	get: function(index) {
		var _gthis = this;
		var res = new tannus_ds_Promise(function(accept,reject) {
			_gthis.then(function(items) {
				accept(items[index]);
			});
			_gthis.unless(function(error) {
				reject(error);
			});
		},null);
		this.attach(res);
		return res;
	}
	,slice: function(pos,end) {
		var _gthis = this;
		return new tannus_ds_promises_ArrayPromise(function(res,err) {
			_gthis.then(function(list) {
				var tmp = list.slice(pos,end);
				res(tmp);
			});
			_gthis.unless(function(error) {
				err(error);
			});
		});
	}
	,concat: function(other) {
		var _gthis = this;
		var res = new tannus_ds_promises_ArrayPromise(function(res1,err) {
			_gthis.then(function(list) {
				var res2 = list.concat(other);
				res1(res2);
			});
			_gthis.unless(function(error) {
				err(error);
			});
		});
		this.attach(res);
		return res;
	}
	,map: function(f) {
		var pa = this.transform(function(x) {
			return x.map(f);
		});
		var res = new tannus_ds_promises_ArrayPromise(function(res1,err) {
			pa.then(res1);
			pa.unless(err);
		});
		this.attach(res);
		return res;
	}
	,filter: function(test) {
		var pa = this.transform(function(list) {
			return list.filter(test);
		});
		var res = new tannus_ds_promises_ArrayPromise(function(res1,err) {
			pa.then(res1);
			pa.unless(err);
		});
		this.attach(res);
		return res;
	}
	,has: function(item) {
		var _gthis = this;
		var result = new tannus_ds_promises_BoolPromise(function(res,err) {
			_gthis.then(function(list) {
				var result1 = Lambda.has(list,item);
				res(result1);
			});
			_gthis.unless(err);
		});
		this.attach(result);
		return result;
	}
	,join: function(sep) {
		var _gthis = this;
		var result = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_gthis.then(function(list) {
				var result1 = list.join(sep);
				accept(result1);
			});
			_gthis.unless(reject);
		});
		this.attach(result);
		return result;
	}
	,each: function(f) {
		this.then(function(list) {
			var _g = 0;
			while(_g < list.length) {
				var item = list[_g];
				++_g;
				f(item);
			}
		});
		return this;
	}
	,__class__: tannus_ds_promises_ArrayPromise
});
var tannus_ds_promises_BoolPromise = function(exec,nocall) {
	tannus_ds_Promise.call(this,exec,nocall);
};
$hxClasses["tannus.ds.promises.BoolPromise"] = tannus_ds_promises_BoolPromise;
tannus_ds_promises_BoolPromise.__name__ = ["tannus","ds","promises","BoolPromise"];
tannus_ds_promises_BoolPromise.__super__ = tannus_ds_Promise;
tannus_ds_promises_BoolPromise.prototype = $extend(tannus_ds_Promise.prototype,{
	yep: function(onyes) {
		this.then(function(v) {
			if(v) {
				onyes();
			}
		});
		return this;
	}
	,nope: function(onno) {
		this.then(function(v) {
			if(!v) {
				onno();
			}
		});
		return this;
	}
	,__class__: tannus_ds_promises_BoolPromise
});
var tannus_ds_promises_ObjectPromise = function(exec,nocall) {
	tannus_ds_Promise.call(this,exec,nocall);
};
$hxClasses["tannus.ds.promises.ObjectPromise"] = tannus_ds_promises_ObjectPromise;
tannus_ds_promises_ObjectPromise.__name__ = ["tannus","ds","promises","ObjectPromise"];
tannus_ds_promises_ObjectPromise.__super__ = tannus_ds_Promise;
tannus_ds_promises_ObjectPromise.prototype = $extend(tannus_ds_Promise.prototype,{
	exists: function(key) {
		var _gthis = this;
		var r = new tannus_ds_promises_BoolPromise(function(res,err) {
			_gthis.then(function(o) {
				res(Object.prototype.hasOwnProperty.call(o,key));
			});
			_gthis.unless(err);
		});
		this.attach(r);
		return r;
	}
	,keys: function() {
		var _gthis = this;
		var r = new tannus_ds_promises_ArrayPromise(function(a,e) {
			_gthis.then(function(o) {
				var r1 = Reflect.fields(o);
				a(r1);
			});
			_gthis.unless(e);
		});
		this.attach(r);
		return r;
	}
	,get: function(key) {
		var _gthis = this;
		var r = new tannus_ds_promises_ObjectPromise(function(accept,reject) {
			_gthis.then(function(o) {
				console.log(o);
				var tmp;
				var this1;
				if(o == null) {
					this1 = null;
				} else {
					var this2;
					if(o.__properties__) {
						tmp = o.__properties__["get_" + key];
						this2 = tmp;
					} else {
						this2 = false;
					}
					if(this2) {
						this1 = o[tmp]();
					} else {
						this1 = o[key];
					}
				}
				var this3 = this1;
				accept(this3 != null ? this3 : this3);
			});
			_gthis.unless(reject);
		});
		this.attach(r);
		return r;
	}
	,__class__: tannus_ds_promises_ObjectPromise
});
var tannus_ds_promises_StringPromise = function(exec,nocall) {
	tannus_ds_Promise.call(this,exec,nocall);
};
$hxClasses["tannus.ds.promises.StringPromise"] = tannus_ds_promises_StringPromise;
tannus_ds_promises_StringPromise.__name__ = ["tannus","ds","promises","StringPromise"];
tannus_ds_promises_StringPromise.__super__ = tannus_ds_Promise;
tannus_ds_promises_StringPromise.prototype = $extend(tannus_ds_Promise.prototype,{
	charAt: function(i) {
		var _gthis = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_gthis.then(function(s) {
				var res1 = s.charAt(i);
				accept(res1);
			});
			_gthis.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,charCodeAt: function(i) {
		var res = this.charAt(i).transform(function(c) {
			return HxOverrides.cca(c,0);
		});
		this.attach(res);
		return res;
	}
	,split: function(delimiter) {
		var _gthis = this;
		var res = new tannus_ds_Promise(function(accept,reject) {
			_gthis.then(function(s) {
				var res1 = s.split(delimiter);
				accept(res1);
			});
			_gthis.unless(function(err) {
				reject(err);
			});
		},null).array();
		this.attach(res);
		return res;
	}
	,substr: function(pos,len) {
		var _gthis = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_gthis.then(function(data) {
				var sub = HxOverrides.substr(data,pos,len);
				accept(sub);
			});
			_gthis.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,substring: function(start,end) {
		var _gthis = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_gthis.then(function(data) {
				var sub = data.substring(start,end);
				accept(sub);
			});
			_gthis.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,toUpperCase: function() {
		var _gthis = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_gthis.then(function(s) {
				var res1 = s.toUpperCase();
				accept(res1);
			});
			_gthis.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,toLowerCase: function() {
		var _gthis = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_gthis.then(function(s) {
				var res1 = s.toLowerCase();
				accept(res1);
			});
			_gthis.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,capitalize: function() {
		var _gthis = this;
		var res = new tannus_ds_Promise(function(accept,reject) {
			_gthis.then(function(s) {
				var chars = s.split("");
				var first = chars.shift().toUpperCase();
				var rest = chars.join("").toLowerCase();
				accept(first + rest);
			});
			_gthis.unless(function(err) {
				reject(err);
			});
		},null).string();
		this.attach(res);
		return res;
	}
	,startsWith: function(start) {
		var _gthis = this;
		var res = new tannus_ds_promises_BoolPromise(function(reply,reject) {
			_gthis.then(function(data) {
				var _g = start;
				switch(_g[1]) {
				case 0:
					var str = _g[2];
					var res1 = StringTools.startsWith(data,str);
					reply(res1);
					break;
				case 1:
					var _pstr = _g[2];
					var pstr = _pstr.string();
					pstr.then(function(str1) {
						var res2 = StringTools.startsWith(data,str1);
						reply(res2);
					});
					break;
				}
			});
			_gthis.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,endsWith: function(end) {
		var _gthis = this;
		var res = new tannus_ds_promises_BoolPromise(function(reply,reject) {
			_gthis.then(function(data) {
				var _g = end;
				switch(_g[1]) {
				case 0:
					var str = _g[2];
					var res1 = StringTools.endsWith(data,str);
					reply(res1);
					break;
				case 1:
					var _pstr = _g[2];
					var pstr = _pstr.string();
					pstr.then(function(str1) {
						var res2 = StringTools.endsWith(data,str1);
						reply(res2);
					});
					break;
				}
			});
			_gthis.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,ltrim: function() {
		var lt = this.transform(function(s) {
			return StringTools.ltrim(s);
		}).string();
		this.attach(lt);
		return lt;
	}
	,rtrim: function() {
		var rt = this.transform(function(s) {
			return StringTools.rtrim(s);
		}).string();
		this.attach(rt);
		return rt;
	}
	,trim: function() {
		var trimmed = this.transform(function(s) {
			return StringTools.trim(s);
		}).string();
		this.attach(trimmed);
		return trimmed;
	}
	,match: function(pattern) {
		var res = this.transform(function(s) {
			return pattern.match(s);
		}).bool();
		this.attach(res);
		return res;
	}
	,__class__: tannus_ds_promises_StringPromise
});
var tannus_ds_tuples__$Tup2_Tup2_$Impl_$ = {};
$hxClasses["tannus.ds.tuples._Tup2.Tup2_Impl_"] = tannus_ds_tuples__$Tup2_Tup2_$Impl_$;
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.__name__ = ["tannus","ds","tuples","_Tup2","Tup2_Impl_"];
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.__properties__ = {set__1:"set__1",get__1:"get__1",set__0:"set__0",get__0:"get__0"}
tannus_ds_tuples__$Tup2_Tup2_$Impl_$._new = function(a,b) {
	var this1 = [a,b];
	return this1;
};
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.get__0 = function(this1) {
	return this1[0];
};
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.set__0 = function(this1,v) {
	return this1[0] = v;
};
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.get__1 = function(this1) {
	return this1[1];
};
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.set__1 = function(this1,v) {
	return this1[1] = v;
};
var tannus_events__$Key_Key_$Impl_$ = {};
$hxClasses["tannus.events._Key.Key_Impl_"] = tannus_events__$Key_Key_$Impl_$;
tannus_events__$Key_Key_$Impl_$.__name__ = ["tannus","events","_Key","Key_Impl_"];
tannus_events__$Key_Key_$Impl_$.__properties__ = {get_name:"get_name"}
tannus_events__$Key_Key_$Impl_$.get_name = function(this1) {
	return tannus_events_KeyTools.getName(this1);
};
var tannus_events_KeyTools = function() { };
$hxClasses["tannus.events.KeyTools"] = tannus_events_KeyTools;
tannus_events_KeyTools.__name__ = ["tannus","events","KeyTools"];
tannus_events_KeyTools.getName = function(key) {
	return tannus_events_KeyTools.keyNames().h[key];
};
tannus_events_KeyTools.getKey = function(name) {
	var this1 = tannus_events_KeyTools.nameKeys();
	var key = name.toLowerCase();
	var _this = this1;
	if(__map_reserved[key] != null) {
		return _this.getReserved(key);
	} else {
		return _this.h[key];
	}
};
tannus_events_KeyTools.keyNames = function() {
	if(tannus_events_KeyTools._keyNames == null) {
		var _g = new haxe_ds_IntMap();
		_g.h[20] = "<CapsLock>";
		_g.h[110] = "<Numpad .>";
		_g.h[111] = "<Numpad />";
		_g.h[91] = "Super";
		_g.h[191] = "/";
		_g.h[13] = "Enter";
		_g.h[16] = "Shift";
		_g.h[32] = "Space";
		_g.h[33] = "<Page Up>";
		_g.h[8] = "Backspace";
		_g.h[9] = "Tab";
		_g.h[107] = "<Numpad +>";
		_g.h[190] = ".";
		_g.h[219] = "[";
		_g.h[36] = "Home";
		_g.h[37] = "Left";
		_g.h[187] = "=";
		_g.h[222] = "'";
		_g.h[39] = "Right";
		_g.h[221] = "]";
		_g.h[144] = "<Num Lock>";
		_g.h[220] = "\\";
		_g.h[34] = "<Page Down>";
		_g.h[35] = "End";
		_g.h[189] = "-";
		_g.h[186] = ";";
		_g.h[40] = "Down";
		_g.h[27] = "Esc";
		_g.h[188] = ",";
		_g.h[46] = "Delete";
		_g.h[106] = "<Numpad *>";
		_g.h[192] = "`";
		_g.h[17] = "Ctrl";
		_g.h[45] = "Insert";
		_g.h[145] = "<Scroll Lock>";
		_g.h[109] = "<Numpad ->";
		_g.h[38] = "Up";
		_g.h[18] = "Alt";
		_g.h[65] = "A";
		_g.h[66] = "B";
		_g.h[67] = "C";
		_g.h[68] = "D";
		_g.h[69] = "E";
		_g.h[70] = "F";
		_g.h[71] = "G";
		_g.h[72] = "H";
		_g.h[73] = "I";
		_g.h[74] = "J";
		_g.h[75] = "K";
		_g.h[76] = "L";
		_g.h[77] = "M";
		_g.h[78] = "N";
		_g.h[79] = "O";
		_g.h[80] = "P";
		_g.h[81] = "Q";
		_g.h[82] = "R";
		_g.h[83] = "S";
		_g.h[84] = "T";
		_g.h[85] = "U";
		_g.h[86] = "V";
		_g.h[87] = "W";
		_g.h[88] = "X";
		_g.h[89] = "Y";
		_g.h[90] = "Z";
		_g.h[48] = "0";
		_g.h[49] = "1";
		_g.h[50] = "2";
		_g.h[51] = "3";
		_g.h[52] = "4";
		_g.h[53] = "5";
		_g.h[54] = "6";
		_g.h[55] = "7";
		_g.h[56] = "8";
		_g.h[57] = "9";
		_g.h[112] = "<F1>";
		_g.h[113] = "<F2>";
		_g.h[114] = "<F3>";
		_g.h[115] = "<F4>";
		_g.h[116] = "<F5>";
		_g.h[117] = "<F6>";
		_g.h[118] = "<F7>";
		_g.h[119] = "<F8>";
		_g.h[120] = "<F9>";
		_g.h[121] = "<F10>";
		_g.h[122] = "<F11>";
		_g.h[123] = "<F12>";
		tannus_events_KeyTools._keyNames = _g;
	}
	return tannus_events_KeyTools._keyNames;
};
tannus_events_KeyTools.nameKeys = function() {
	if(tannus_events_KeyTools._nameKeys == null) {
		tannus_events_KeyTools._nameKeys = new haxe_ds_StringMap();
		var kn = tannus_events_KeyTools.keyNames();
		var key = kn.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			var this1 = tannus_events_KeyTools._nameKeys;
			var k = kn.h[key1].toLowerCase();
			var _this = this1;
			if(__map_reserved[k] != null) {
				_this.setReserved(k,key1);
			} else {
				_this.h[k] = key1;
			}
		}
	}
	return tannus_events_KeyTools._nameKeys;
};
var tannus_events_KeyboardEvent = function(type,code,emods) {
	tannus_events_Event.call(this,type);
	this.keyCode = code;
	this.key = this.keyCode;
	this.mods = emods != null ? emods : [];
	this.altKey = Lambda.has(this.mods,"alt");
	this.ctrlKey = Lambda.has(this.mods,"ctrl");
	this.shiftKey = Lambda.has(this.mods,"shift");
	this.metaKey = Lambda.has(this.mods,"super");
};
$hxClasses["tannus.events.KeyboardEvent"] = tannus_events_KeyboardEvent;
tannus_events_KeyboardEvent.__name__ = ["tannus","events","KeyboardEvent"];
tannus_events_KeyboardEvent.fromJqEvent = function(e) {
	var mods = [];
	if(e.altKey) {
		mods.push("alt");
	}
	if(e.ctrlKey) {
		mods.push("ctrl");
	}
	if(e.shiftKey) {
		mods.push("shift");
	}
	if(e.metaKey) {
		mods.push("super");
	}
	var res = new tannus_events_KeyboardEvent(e.type,e.keyCode,mods);
	res.onDefaultPrevented.once($bind(e,e.preventDefault));
	res.onPropogationStopped.once($bind(e,e.stopPropagation));
	return res;
};
tannus_events_KeyboardEvent.__super__ = tannus_events_Event;
tannus_events_KeyboardEvent.prototype = $extend(tannus_events_Event.prototype,{
	getModifiers: function() {
		return this.mods.slice();
	}
	,keyCode: null
	,key: null
	,mods: null
	,altKey: null
	,ctrlKey: null
	,shiftKey: null
	,metaKey: null
	,__class__: tannus_events_KeyboardEvent
});
var tannus_events_MouseEvent = function(type,pos,btn,mods) {
	if(btn == null) {
		btn = -1;
	}
	tannus_events_Event.call(this,type);
	this.position = pos;
	this.button = btn;
	this.emods = mods != null ? mods : [];
};
$hxClasses["tannus.events.MouseEvent"] = tannus_events_MouseEvent;
tannus_events_MouseEvent.__name__ = ["tannus","events","MouseEvent"];
tannus_events_MouseEvent.fromJqEvent = function(event) {
	var mods = [];
	if(event.shiftKey) {
		mods.push("shift");
	}
	if(event.altKey) {
		mods.push("alt");
	}
	if(event.ctrlKey) {
		mods.push("ctrl");
	}
	if(event.metaKey) {
		mods.push("super");
	}
	var this1 = new tannus_geom_TPoint(event.pageX,event.pageY,0);
	var pos = this1;
	var e = new tannus_events_MouseEvent(event.type,pos,event.which,mods);
	e.onCancelled.once($bind(event,event.preventDefault));
	e.onDefaultPrevented.once($bind(event,event.preventDefault));
	e.onPropogationStopped.once($bind(event,event.stopPropagation));
	var copyEvent = null;
	copyEvent = function(copy) {
		copy.onCancelled.once($bind(event,event.preventDefault));
		copy.onDefaultPrevented.once($bind(event,event.preventDefault));
		copy.onPropogationStopped.once($bind(event,event.stopPropagation));
		copy._onCopy.listen(copyEvent,false);
	};
	var copyEvent1 = copyEvent;
	e._onCopy.listen(copyEvent1,false);
	return e;
};
tannus_events_MouseEvent.fromJsEvent = function(event) {
	var mods = [];
	if(event.shiftKey) {
		mods.push("shift");
	}
	if(event.altKey) {
		mods.push("alt");
	}
	if(event.ctrlKey) {
		mods.push("ctrl");
	}
	if(event.metaKey) {
		mods.push("super");
	}
	var this1 = new tannus_geom_TPoint(event.pageX,event.pageY,0);
	var pos = this1;
	var e = new tannus_events_MouseEvent(event.type,pos,event.which,mods);
	e.onCancelled.once($bind(event,event.preventDefault));
	e.onDefaultPrevented.once($bind(event,event.preventDefault));
	e.onPropogationStopped.once($bind(event,event.stopPropagation));
	var copyEvent = null;
	copyEvent = function(copy) {
		copy.onCancelled.once($bind(event,event.preventDefault));
		copy.onDefaultPrevented.once($bind(event,event.preventDefault));
		copy.onPropogationStopped.once($bind(event,event.stopPropagation));
		copy._onCopy.listen(copyEvent,false);
	};
	var copyEvent1 = copyEvent;
	e._onCopy.listen(copyEvent1,false);
	return e;
};
tannus_events_MouseEvent.__super__ = tannus_events_Event;
tannus_events_MouseEvent.prototype = $extend(tannus_events_Event.prototype,{
	clone: function(deep) {
		if(deep == null) {
			deep = false;
		}
		return new tannus_events_MouseEvent(this.type,this.position.clone(),this.button,this.emods);
	}
	,get_shiftKey: function() {
		return Lambda.has(this.emods,"shift");
	}
	,get_altKey: function() {
		return Lambda.has(this.emods,"alt");
	}
	,get_ctrlKey: function() {
		return Lambda.has(this.emods,"ctrl");
	}
	,get_metaKey: function() {
		return Lambda.has(this.emods,"super");
	}
	,position: null
	,button: null
	,emods: null
	,__class__: tannus_events_MouseEvent
	,__properties__: $extend(tannus_events_Event.prototype.__properties__,{get_metaKey:"get_metaKey",get_ctrlKey:"get_ctrlKey",get_altKey:"get_altKey",get_shiftKey:"get_shiftKey"})
});
var tannus_events_ResizeEvent = function(old_area,new_area) {
	tannus_events_Event.call(this,"resize");
	var this1;
	var this2 = [new_area,old_area];
	this1 = this2;
	this.delta = this1;
};
$hxClasses["tannus.events.ResizeEvent"] = tannus_events_ResizeEvent;
tannus_events_ResizeEvent.__name__ = ["tannus","events","ResizeEvent"];
tannus_events_ResizeEvent.__super__ = tannus_events_Event;
tannus_events_ResizeEvent.prototype = $extend(tannus_events_Event.prototype,{
	delta: null
	,__class__: tannus_events_ResizeEvent
});
var tannus_events_ScrollEvent = function(delt) {
	tannus_events_Event.call(this,"scroll");
	this.delta = delt;
};
$hxClasses["tannus.events.ScrollEvent"] = tannus_events_ScrollEvent;
tannus_events_ScrollEvent.__name__ = ["tannus","events","ScrollEvent"];
tannus_events_ScrollEvent.__super__ = tannus_events_Event;
tannus_events_ScrollEvent.prototype = $extend(tannus_events_Event.prototype,{
	delta: null
	,__class__: tannus_events_ScrollEvent
});
var tannus_geom__$Angle_Angle_$Impl_$ = {};
$hxClasses["tannus.geom._Angle.Angle_Impl_"] = tannus_geom__$Angle_Angle_$Impl_$;
tannus_geom__$Angle_Angle_$Impl_$.__name__ = ["tannus","geom","_Angle","Angle_Impl_"];
tannus_geom__$Angle_Angle_$Impl_$._new = function(v) {
	var this1 = new tannus_geom_CAngle(v);
	return this1;
};
tannus_geom__$Angle_Angle_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_geom__$Angle_Angle_$Impl_$.toFloat = function(this1) {
	return this1.toFloat();
};
tannus_geom__$Angle_Angle_$Impl_$.plusAngle = function(this1,o) {
	var this2 = new tannus_geom_CAngle(this1.v + o.v);
	return this2;
};
tannus_geom__$Angle_Angle_$Impl_$.plusFloat = function(this1,o) {
	var this2 = new tannus_geom_CAngle(this1.v + o);
	return this2;
};
tannus_geom__$Angle_Angle_$Impl_$.fromFloat = function(v) {
	var this1 = new tannus_geom_CAngle(v);
	return this1;
};
var tannus_geom_CAngle = function(_v) {
	this.v = _v;
};
$hxClasses["tannus.geom.CAngle"] = tannus_geom_CAngle;
tannus_geom_CAngle.__name__ = ["tannus","geom","CAngle"];
tannus_geom_CAngle.prototype = {
	compliment: function() {
		var this1 = new tannus_geom_CAngle(360 - this.v);
		return this1;
	}
	,invert: function() {
		var this1 = new tannus_geom_CAngle(-this.v);
		return this1;
	}
	,toString: function() {
		return this.v + "°";
	}
	,toFloat: function() {
		return this.v;
	}
	,get_degrees: function() {
		return this.v;
	}
	,set_degrees: function(_v) {
		return this.v = _v;
	}
	,get_radians: function() {
		return this.v * Math.PI / 180;
	}
	,set_radians: function(_v) {
		this.v = _v * (Math.PI / 180);
		return this.v * Math.PI / 180;
	}
	,get_x: function() {
		return Math.cos(this.v * Math.PI / 180);
	}
	,get_y: function() {
		return Math.sin(this.v * Math.PI / 180);
	}
	,v: null
	,__class__: tannus_geom_CAngle
	,__properties__: {get_y:"get_y",get_x:"get_x",set_radians:"set_radians",get_radians:"get_radians",set_degrees:"set_degrees",get_degrees:"get_degrees"}
};
var tannus_geom_Arc = function(center,rad,start,end,cc) {
	if(cc == null) {
		cc = false;
	}
	var this1 = new tannus_geom_TPoint(this.pos.get_x(),this.pos.get_y(),0);
	this.pos = this1;
	this.radius = rad;
	this.start_angle = start;
	this.end_angle = end;
	this.clockwise = !cc;
};
$hxClasses["tannus.geom.Arc"] = tannus_geom_Arc;
tannus_geom_Arc.__name__ = ["tannus","geom","Arc"];
tannus_geom_Arc.prototype = {
	clone: function() {
		return new tannus_geom_Arc(this.pos,this.radius,this.start_angle,this.end_angle,!this.clockwise);
	}
	,vectorize: function(r) {
		var c = new tannus_geom_Arc(this.pos,this.radius,this.start_angle,this.end_angle,!this.clockwise);
		var this1 = this.pos;
		var this2 = new tannus_geom_TPoint(tannus_math__$Percent_Percent_$Impl_$.percent(this1.get_x(),r.width),tannus_math__$Percent_Percent_$Impl_$.percent(this1.get_y(),r.height),0);
		c.pos = this2;
		var p = tannus_math__$Percent_Percent_$Impl_$.percent(this.radius,r.width * r.height);
		c.radius = p;
		return c;
	}
	,devectorize: function(r) {
		var c = new tannus_geom_Arc(this.pos,this.radius,this.start_angle,this.end_angle,!this.clockwise);
		var p = this.radius;
		c.pos = tannus_geom__$Point_Point_$Impl_$.devectorize(this.pos,r);
		c.radius = r.width * r.height * (p / 100);
		return c;
	}
	,calculateVertices: function(precision) {
		var this1 = new tannus_geom_VertexArray(null);
		var va = this1;
		var rang = this.end_angle.v - this.start_angle.v;
		if(precision == null) {
			precision = Math.floor(rang);
		}
		var i = 0;
		var speed = this.radius;
		var this2 = new tannus_geom_CAngle(0);
		var this3 = new tannus_geom_CVelocity(speed,this2);
		var v = this3;
		while(i < precision) {
			var deg = this.start_angle.v + i * (rang / precision);
			var this4 = new tannus_geom_CAngle(deg);
			v.angle = this4;
			va.push(this.pos.plusPoint(v.get_vector()));
			++i;
		}
		return va;
	}
	,getLines: function(precision) {
		var verts = this.calculateVertices(precision);
		return verts.calculateLines();
	}
	,get_x: function() {
		return this.pos.get_x();
	}
	,set_x: function(nx) {
		return this.pos.set_x(nx);
	}
	,get_y: function() {
		return this.pos.get_y();
	}
	,set_y: function(ny) {
		return this.pos.set_y(ny);
	}
	,pos: null
	,radius: null
	,start_angle: null
	,end_angle: null
	,clockwise: null
	,__class__: tannus_geom_Arc
	,__properties__: {set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var tannus_geom__$Area_Area_$Impl_$ = {};
$hxClasses["tannus.geom._Area.Area_Impl_"] = tannus_geom__$Area_Area_$Impl_$;
tannus_geom__$Area_Area_$Impl_$.__name__ = ["tannus","geom","_Area","Area_Impl_"];
tannus_geom__$Area_Area_$Impl_$.__properties__ = {set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
tannus_geom__$Area_Area_$Impl_$._new = function(w,h) {
	if(h == null) {
		h = 0;
	}
	if(w == null) {
		w = 0;
	}
	var this1;
	var this2 = [w,h];
	this1 = this2;
	return this1;
};
tannus_geom__$Area_Area_$Impl_$.get_width = function(this1) {
	return this1[0];
};
tannus_geom__$Area_Area_$Impl_$.set_width = function(this1,nw) {
	return this1[0] = nw;
};
tannus_geom__$Area_Area_$Impl_$.get_height = function(this1) {
	return this1[1];
};
tannus_geom__$Area_Area_$Impl_$.set_height = function(this1,nh) {
	return this1[1] = nh;
};
tannus_geom__$Area_Area_$Impl_$.clone = function(this1) {
	var this2;
	var this3 = [this1[0],this1[1]];
	this2 = this3;
	return this2;
};
tannus_geom__$Area_Area_$Impl_$.resize = function(this1,nw,nh,mr) {
	if(mr == null) {
		mr = false;
	}
	if(mr) {
		var w = this1[0];
		var h = this1[1];
		if(nw != null) {
			var rat = h / w;
			w = nw;
			h = w * rat;
			var this2;
			var this3 = [w,h];
			this2 = this3;
			return this2;
		} else if(nh != null) {
			var rat1 = w / h;
			h = nh;
			w = h * rat1;
			var this4;
			var this5 = [w,h];
			this4 = this5;
			return this4;
		} else {
			throw new js__$Boot_HaxeError("GeometryError: Cannot maintain ration if both [width] and [height] are assigned!");
		}
	} else {
		var w1 = nw != null ? nw : this1[0];
		var h1 = nh != null ? nh : this1[1];
		var this6;
		var this7 = [w1,h1];
		this6 = this7;
		return this6;
	}
};
tannus_geom__$Area_Area_$Impl_$.toFloatTuple = function(this1) {
	return this1;
};
tannus_geom__$Area_Area_$Impl_$.toIntTuple = function(this1) {
	var this2 = [Math.round(this1[0]),Math.round(this1[1])];
	return this2;
};
tannus_geom__$Area_Area_$Impl_$.fromTwoTuple = function(t) {
	var this1;
	var this2 = [t[0],t[1]];
	this1 = this2;
	return this1;
};
tannus_geom__$Area_Area_$Impl_$.toRectangle = function(this1) {
	var this2 = new tannus_geom_CRectangle(0,0,this1[0],this1[1]);
	return this2;
};
tannus_geom__$Area_Area_$Impl_$.fromRectangle = function(r) {
	var this1;
	var this2 = [r.width,r.height];
	this1 = this2;
	return this1;
};
tannus_geom__$Area_Area_$Impl_$.toString = function(this1) {
	return "Area<" + this1[0] + "x" + this1[1] + ">";
};
tannus_geom__$Area_Area_$Impl_$.fromString = function(s) {
	var w;
	var h;
	s = StringTools.replace(StringTools.replace(StringTools.replace(s,"Area",""),"<",""),">","");
	var a = s.split("x").map(function(x) {
		return Std.parseFloat(x);
	});
	var this1;
	var this2 = [a[0],a[1]];
	this1 = this2;
	return this1;
};
tannus_geom__$Area_Area_$Impl_$.toFloatArray = function(this1) {
	return [this1[0],this1[1]];
};
tannus_geom__$Area_Area_$Impl_$.toIntArray = function(this1) {
	return [this1[0],this1[1]].map(Math.round);
};
tannus_geom__$Area_Area_$Impl_$.fromFloatArray = function(a) {
	var this1;
	var this2 = [a[0],a[1]];
	this1 = this2;
	return this1;
};
tannus_geom__$Area_Area_$Impl_$.fromIntArray = function(a) {
	var this1;
	var this2 = [a[0],a[1]];
	this1 = this2;
	return this1;
};
tannus_geom__$Area_Area_$Impl_$.i = function(f) {
	return Math.round(f);
};
var tannus_geom_OldArea = function(w,h) {
	if(h == null) {
		h = 0;
	}
	if(w == null) {
		w = 0;
	}
	this.width = w;
	this.height = h;
};
$hxClasses["tannus.geom.OldArea"] = tannus_geom_OldArea;
tannus_geom_OldArea.__name__ = ["tannus","geom","OldArea"];
tannus_geom_OldArea.prototype = {
	width: null
	,height: null
	,__class__: tannus_geom_OldArea
};
var tannus_geom_Bezier = function(start,ctrl1,ctrl2,end) {
	this.start = start;
	this.ctrl1 = ctrl1;
	this.ctrl2 = ctrl2;
	this.end = end;
};
$hxClasses["tannus.geom.Bezier"] = tannus_geom_Bezier;
tannus_geom_Bezier.__name__ = ["tannus","geom","Bezier"];
tannus_geom_Bezier.prototype = {
	clone: function() {
		return new tannus_geom_Bezier(this.start,this.ctrl1,this.ctrl2,this.end);
	}
	,equals: function(other) {
		if(this.start.equals(other.start) && this.ctrl1.equals(other.ctrl1) && this.ctrl2.equals(other.ctrl2)) {
			return this.end.equals(other.end);
		} else {
			return false;
		}
	}
	,flip: function() {
		var temp = this.start.get_x();
		this.start.set_x(this.end.get_x());
		this.end.set_x(temp);
		temp = this.ctrl1.get_x();
		this.ctrl1.set_x(this.ctrl2.get_x());
		this.ctrl2.set_x(temp);
		temp = this.start.get_y();
		this.start.set_y(this.end.get_y());
		this.end.set_y(temp);
		temp = this.ctrl1.get_y();
		this.ctrl1.set_y(this.ctrl2.get_y());
		this.ctrl2.set_y(temp);
	}
	,getPointX: function(t) {
		if(t == 0) {
			return this.start.get_x();
		} else if(t == 1) {
			return this.end.get_x();
		}
		var lerp = function(a,b,x) {
			return tannus_math_TMath.lerp(a,b,x);
		};
		var ix0 = lerp(this.start.get_x(),this.ctrl1.get_x(),t);
		var ix1 = lerp(this.ctrl1.get_x(),this.ctrl2.get_x(),t);
		var ix2 = lerp(this.ctrl2.get_x(),this.end.get_x(),t);
		ix0 = lerp(ix0,ix1,t);
		ix1 = lerp(ix1,ix2,t);
		return lerp(ix0,ix1,t);
	}
	,getPointY: function(t) {
		if(t == 0) {
			return this.start.get_y();
		} else if(t == 1) {
			return this.end.get_y();
		}
		var lerp = function(a,b,x) {
			return tannus_math_TMath.lerp(a,b,x);
		};
		var iy0 = lerp(this.start.get_y(),this.ctrl1.get_y(),t);
		var iy1 = lerp(this.ctrl1.get_y(),this.ctrl2.get_y(),t);
		var iy2 = lerp(this.ctrl2.get_y(),this.end.get_y(),t);
		iy0 = lerp(iy0,iy1,t);
		iy1 = lerp(iy1,iy2,t);
		return lerp(iy0,iy1,t);
	}
	,getPoint: function(t) {
		var this1 = new tannus_geom_TPoint(this.getPointX(t),this.getPointY(t),0);
		return this1;
	}
	,getPoints: function(prec) {
		var results = [];
		var precision = prec != null ? prec : tannus_geom_Bezier.PRECISION;
		var i = 0;
		while(i < precision) {
			var t = i / precision;
			var this1 = new tannus_geom_TPoint(this.getPointX(t),this.getPointY(t),0);
			var pt = this1;
			results.push(pt);
			++i;
		}
		return results;
	}
	,start: null
	,ctrl1: null
	,ctrl2: null
	,end: null
	,__class__: tannus_geom_Bezier
};
var tannus_geom_HitMask = function(rec,ranga) {
	this.rect = rec;
	this.ranges = ranga;
};
$hxClasses["tannus.geom.HitMask"] = tannus_geom_HitMask;
tannus_geom_HitMask.__name__ = ["tannus","geom","HitMask"];
tannus_geom_HitMask.prototype = {
	testPoint: function(pos) {
		var _this = this.rect;
		var ox = pos.get_x();
		var oy = pos.get_y();
		if(ox > _this.x && ox < _this.x + _this.width && (oy > _this.y && oy < _this.y + _this.height)) {
			var this1 = this.ranges;
			var key = pos.get_y() | 0;
			var xr = this1.h[key];
			if(xr != null) {
				var v = pos.get_x() | 0;
				if(v > xr.min) {
					return v < xr.max;
				} else {
					return false;
				}
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,rect: null
	,ranges: null
	,__class__: tannus_geom_HitMask
};
var tannus_geom_Line = function(o,t) {
	this.one = o;
	this.two = t;
};
$hxClasses["tannus.geom.Line"] = tannus_geom_Line;
tannus_geom_Line.__name__ = ["tannus","geom","Line"];
tannus_geom_Line.prototype = {
	intersects: function(other) {
		var sl = new tannus_geom_Line(this.two.minusPoint(this.one),other.two.minusPoint(other.one));
		var s = (-sl.one.get_y() * (this.one.get_x() - other.one.get_x()) + sl.one.get_x() * (this.one.get_y() - other.one.get_y())) / (-sl.two.get_x() * sl.one.get_y() + sl.one.get_x() * sl.two.get_y());
		var t = (sl.two.get_x() * (this.one.get_y() - other.one.get_y()) - sl.two.get_y() * (this.one.get_x() - other.one.get_x())) / (-sl.two.get_x() * sl.one.get_y() + sl.one.get_x() * sl.two.get_y());
		if(s >= 0 && s <= 1) {
			if(t >= 0) {
				return t <= 1;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,toString: function() {
		return "Line<(" + this.one.get_x() + ", " + this.one.get_y() + ") => (" + this.two.get_x() + ", " + this.two.get_y() + ")>";
	}
	,getPoint: function(d) {
		var dist = d;
		var this1 = new tannus_geom_CVelocity(dist,this.one.angleTo(this.two));
		var vel = this1;
		var res = vel.get_vector();
		res.moveByPoint(this.one);
		res.clamp();
		return res;
	}
	,along: function(d) {
		return this.one.lerp(this.two,d);
	}
	,getVertices: function() {
		var pts = [];
		this.one.clamp();
		this.two.clamp();
		var _g1 = 0;
		var _g = Math.round(this.one.distanceFrom(this.two));
		while(_g1 < _g) {
			var i = _g1++;
			pts.push(this.getPoint(i));
		}
		var this1 = new tannus_geom_VertexArray(pts);
		return this1;
	}
	,get_slope: function() {
		return (this.one.get_y() - this.two.get_y()) / (this.one.get_x() - this.two.get_x());
	}
	,get_slopeRatio: function() {
		var this1 = new tannus_math_CRatio(this.one.get_y() - this.two.get_y(),this.one.get_x() - this.two.get_x());
		return this1;
	}
	,get_length: function() {
		return this.one.distanceFrom(this.two);
	}
	,get_start: function() {
		return this.one;
	}
	,set_start: function(ns) {
		return this.one = ns;
	}
	,get_end: function() {
		return this.two;
	}
	,set_end: function(ne) {
		return this.two = ne;
	}
	,get_mid: function() {
		return this.one.lerp(this.two,0.5);
	}
	,get_angle: function() {
		return this.one.angleTo(this.two);
	}
	,get_rectangle: function() {
		var min;
		var this1 = this.one;
		var other = this.two;
		var this2 = new tannus_geom_TPoint(0,0,0);
		var min1 = this1.distanceFrom(this2);
		var this3 = new tannus_geom_TPoint(0,0,0);
		if(min1 > other.distanceFrom(this3)) {
			min = this.two;
		} else {
			min = this.one;
		}
		var max;
		var this4 = this.one;
		var other1 = this.two;
		var this5 = new tannus_geom_TPoint(0,0,0);
		var max1 = this4.distanceFrom(this5);
		var this6 = new tannus_geom_TPoint(0,0,0);
		if(max1 > other1.distanceFrom(this6)) {
			max = this.one;
		} else {
			max = this.two;
		}
		var this7 = new tannus_geom_CRectangle(min.get_x(),min.get_y(),max.get_x() - min.get_x(),max.get_y() - min.get_y());
		return this7;
	}
	,get_sx: function() {
		return this.one.get_x();
	}
	,set_sx: function(v) {
		return this.one.set_x(v);
	}
	,get_sy: function() {
		return this.one.get_y();
	}
	,set_sy: function(v) {
		return this.one.set_y(v);
	}
	,get_ex: function() {
		return this.two.get_x();
	}
	,set_ex: function(v) {
		return this.two.set_x(v);
	}
	,get_ey: function() {
		return this.two.get_y();
	}
	,set_ey: function(v) {
		return this.two.set_y(v);
	}
	,one: null
	,two: null
	,__class__: tannus_geom_Line
	,__properties__: {set_ey:"set_ey",get_ey:"get_ey",set_ex:"set_ex",get_ex:"get_ex",set_sy:"set_sy",get_sy:"get_sy",set_sx:"set_sx",get_sx:"get_sx",get_rectangle:"get_rectangle",get_angle:"get_angle",get_mid:"get_mid",set_end:"set_end",get_end:"get_end",set_start:"set_start",get_start:"get_start",get_length:"get_length",get_slopeRatio:"get_slopeRatio",get_slope:"get_slope"}
};
var tannus_geom_Matrix = function(a,b,c,d,tx,ty) {
	if(ty == null) {
		ty = 0;
	}
	if(tx == null) {
		tx = 0;
	}
	if(d == null) {
		d = 1;
	}
	if(c == null) {
		c = 0;
	}
	if(b == null) {
		b = 0;
	}
	if(a == null) {
		a = 1;
	}
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.tx = tx;
	this.ty = ty;
};
$hxClasses["tannus.geom.Matrix"] = tannus_geom_Matrix;
tannus_geom_Matrix.__name__ = ["tannus","geom","Matrix"];
tannus_geom_Matrix.prototype = {
	clone: function() {
		return new tannus_geom_Matrix(this.a,this.b,this.c,this.d,this.tx,this.ty);
	}
	,concat: function(m) {
		var a1 = this.a * m.a + this.b * m.c;
		this.b = this.a * m.b + this.b * m.d;
		this.a = a1;
		var c1 = this.c * m.a + this.d * m.c;
		this.d = this.c * m.b + this.d * m.d;
		this.c = c1;
		var tx1 = this.tx * m.a + this.ty * m.c + m.tx;
		this.ty = this.tx * m.b + this.ty * m.d + m.ty;
		this.tx = tx1;
	}
	,copyFrom: function(sourceMatrix) {
		this.a = sourceMatrix.a;
		this.b = sourceMatrix.b;
		this.c = sourceMatrix.c;
		this.d = sourceMatrix.d;
		this.tx = sourceMatrix.tx;
		this.ty = sourceMatrix.ty;
	}
	,createBox: function(scaleX,scaleY,rotation,tx,ty) {
		if(ty == null) {
			ty = 0;
		}
		if(tx == null) {
			tx = 0;
		}
		if(rotation == null) {
			rotation = 0;
		}
		this.a = scaleX;
		this.d = scaleY;
		this.b = rotation;
		this.tx = tx;
		this.ty = ty;
	}
	,createGradientBox: function(width,height,rotation,tx,ty) {
		if(ty == null) {
			ty = 0;
		}
		if(tx == null) {
			tx = 0;
		}
		if(rotation == null) {
			rotation = 0;
		}
		this.a = width / 1638.4;
		this.d = height / 1638.4;
		if(rotation != 0) {
			var cos = Math.cos(rotation);
			var sin = Math.sin(rotation);
			this.b = sin * this.d;
			this.c = -sin * this.a;
			this.a *= cos;
			this.d *= cos;
		} else {
			this.b = 0;
			this.c = 0;
		}
		this.tx = tx + width / 2;
		this.ty = ty + height / 2;
	}
	,equals: function(matrix) {
		if(matrix != null && this.tx == matrix.tx && this.ty == matrix.ty && this.a == matrix.a && this.b == matrix.b && this.c == matrix.c) {
			return this.d == matrix.d;
		} else {
			return false;
		}
	}
	,identity: function() {
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 1;
		this.tx = 0;
		this.ty = 0;
	}
	,invert: function() {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) {
			this.a = this.b = this.c = this.d = 0;
			this.tx = -this.tx;
			this.ty = -this.ty;
		} else {
			norm = 1.0 / norm;
			var a1 = this.d * norm;
			this.d = this.a * norm;
			this.a = a1;
			this.b *= -norm;
			this.c *= -norm;
			var tx1 = -this.a * this.tx - this.c * this.ty;
			this.ty = -this.b * this.tx - this.d * this.ty;
			this.tx = tx1;
		}
		return this;
	}
	,mult: function(m) {
		var result = new tannus_geom_Matrix(this.a,this.b,this.c,this.d,this.tx,this.ty);
		result.concat(m);
		return result;
	}
	,rotate: function(theta) {
		var cos = Math.cos(theta);
		var sin = Math.sin(theta);
		var a1 = this.a * cos - this.b * sin;
		this.b = this.a * sin + this.b * cos;
		this.a = a1;
		var c1 = this.c * cos - this.d * sin;
		this.d = this.c * sin + this.d * cos;
		this.c = c1;
		var tx1 = this.tx * cos - this.ty * sin;
		this.ty = this.tx * sin + this.ty * cos;
		this.tx = tx1;
	}
	,scale: function(sx,sy) {
		this.a *= sx;
		this.b *= sy;
		this.c *= sx;
		this.d *= sy;
		this.tx *= sx;
		this.ty *= sy;
	}
	,setRotation: function(theta,scale) {
		if(scale == null) {
			scale = 1;
		}
		this.a = Math.cos(theta) * scale;
		this.c = Math.sin(theta) * scale;
		this.b = -this.c;
		this.d = this.a;
	}
	,setTo: function(a,b,c,d,tx,ty) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.d = d;
		this.tx = tx;
		this.ty = ty;
	}
	,toString: function() {
		return "Matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")";
	}
	,transformPoint: function(pos,newpos) {
		if(newpos == null) {
			var this1 = new tannus_geom_TPoint(0,0,0);
			newpos = this1;
		}
		var x = pos.get_x();
		var y = pos.get_y();
		newpos.set_x(this.a * x + this.c * y + this.tx);
		newpos.set_y(this.b * x + this.d * y + this.ty);
		return newpos;
	}
	,translate: function(dx,dy) {
		var m = new tannus_geom_Matrix();
		m.tx = dx;
		m.ty = dy;
		this.concat(m);
	}
	,__cleanValues: function() {
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,a: null
	,b: null
	,c: null
	,d: null
	,tx: null
	,ty: null
	,__class__: tannus_geom_Matrix
};
var tannus_geom_Path = function() {
	this._verts = null;
	this.commands = [];
};
$hxClasses["tannus.geom.Path"] = tannus_geom_Path;
tannus_geom_Path.__name__ = ["tannus","geom","Path"];
tannus_geom_Path.prototype = {
	vertex: function(x,y) {
		var this1 = new tannus_geom_TPoint(x,y,0);
		this.commands.push(tannus_geom_PathCommand.PCPoint(this1));
	}
	,addPoint: function(p) {
		this.commands.push(tannus_geom_PathCommand.PCPoint(p));
	}
	,line: function(start,end) {
		var line = new tannus_geom_Line(start,end);
		this.commands.push(tannus_geom_PathCommand.PCLine(line));
	}
	,addLine: function(line) {
		this.commands.push(tannus_geom_PathCommand.PCLine(line));
	}
	,arc: function(center,radius,start_angle,end_angle,counterClockwise) {
		if(counterClockwise == null) {
			counterClockwise = false;
		}
		var arc = new tannus_geom_Arc(center,radius,start_angle,end_angle,counterClockwise);
		this.commands.push(tannus_geom_PathCommand.PCArc(arc));
	}
	,addArc: function(arc) {
		this.commands.push(tannus_geom_PathCommand.PCArc(arc));
	}
	,bezier: function(ctrl1,ctrl2,goal) {
		var this1 = new tannus_geom_TPoint(0,0,0);
		var b = new tannus_geom_Bezier(this1,ctrl1,ctrl2,goal);
		this.commands.push(tannus_geom_PathCommand.PCBezier(b));
	}
	,addBezier: function(b) {
		this.commands.push(tannus_geom_PathCommand.PCBezier(b));
	}
	,addPath: function(sub) {
		if(sub != this) {
			this.commands.push(tannus_geom_PathCommand.PCSub(sub));
		}
	}
	,add: function(component) {
		component.addToPath(this);
	}
	,cmd: function(c) {
		this.commands.push(c);
	}
	,commandVertices: function(c,cursor,precision) {
		switch(c[1]) {
		case 0:
			var point = c[2];
			this._verts.push(point);
			break;
		case 1:
			var line = c[2];
			var this1 = new tannus_geom_VertexArray([line.one,line.two]);
			return this1;
		case 2:
			var arc = c[2];
			if(cursor != null) {
				arc.pos.copyFrom(cursor);
			}
			return arc.calculateVertices(precision);
		case 3:
			var bezier = c[2];
			if(cursor != null) {
				bezier.start.copyFrom(cursor);
			}
			var results = [];
			var precision1 = precision != null ? precision : tannus_geom_Bezier.PRECISION;
			var i = 0;
			while(i < precision1) {
				var t = i / precision1;
				var this2 = new tannus_geom_TPoint(bezier.getPointX(t),bezier.getPointY(t),0);
				var pt = this2;
				results.push(pt);
				++i;
			}
			var this3 = new tannus_geom_VertexArray(results);
			return this3;
		case 4:
			var sub = c[2];
			return sub.calculateVertices(precision);
		}
		return this._verts;
	}
	,calculateVertices: function(precision) {
		var this1 = new tannus_geom_VertexArray(null);
		this._verts = this1;
		var _g = 0;
		var _g1 = this.commands;
		while(_g < _g1.length) {
			var cmd = _g1[_g];
			++_g;
			var curs = this._verts.get(this._verts.data.length - 1);
			var cmd_verts = this.commandVertices(cmd,curs,precision);
			if(cmd_verts != this._verts) {
				this._verts.append(cmd_verts);
			}
		}
		return this._verts;
	}
	,_verts: null
	,commands: null
	,__class__: tannus_geom_Path
};
var tannus_geom_PathCommand = $hxClasses["tannus.geom.PathCommand"] = { __ename__ : ["tannus","geom","PathCommand"], __constructs__ : ["PCPoint","PCLine","PCArc","PCBezier","PCSub"] };
tannus_geom_PathCommand.PCPoint = function(pt) { var $x = ["PCPoint",0,pt]; $x.__enum__ = tannus_geom_PathCommand; $x.toString = $estr; return $x; };
tannus_geom_PathCommand.PCLine = function(line) { var $x = ["PCLine",1,line]; $x.__enum__ = tannus_geom_PathCommand; $x.toString = $estr; return $x; };
tannus_geom_PathCommand.PCArc = function(arc) { var $x = ["PCArc",2,arc]; $x.__enum__ = tannus_geom_PathCommand; $x.toString = $estr; return $x; };
tannus_geom_PathCommand.PCBezier = function(bez) { var $x = ["PCBezier",3,bez]; $x.__enum__ = tannus_geom_PathCommand; $x.toString = $estr; return $x; };
tannus_geom_PathCommand.PCSub = function(path) { var $x = ["PCSub",4,path]; $x.__enum__ = tannus_geom_PathCommand; $x.toString = $estr; return $x; };
var tannus_geom_PathComponent = function() { };
$hxClasses["tannus.geom.PathComponent"] = tannus_geom_PathComponent;
tannus_geom_PathComponent.__name__ = ["tannus","geom","PathComponent"];
tannus_geom_PathComponent.prototype = {
	addToPath: null
	,__class__: tannus_geom_PathComponent
};
var tannus_geom__$Point_Point_$Impl_$ = {};
$hxClasses["tannus.geom._Point.Point_Impl_"] = tannus_geom__$Point_Point_$Impl_$;
tannus_geom__$Point_Point_$Impl_$.__name__ = ["tannus","geom","_Point","Point_Impl_"];
tannus_geom__$Point_Point_$Impl_$.__properties__ = {get_d:"get_d",set_iz:"set_iz",get_iz:"get_iz",set_iy:"set_iy",get_iy:"get_iy",set_ix:"set_ix",get_ix:"get_ix",set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
tannus_geom__$Point_Point_$Impl_$._new = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new tannus_geom_TPoint(x,y,z);
	return this1;
};
tannus_geom__$Point_Point_$Impl_$.get_x = function(this1) {
	return this1.get_x();
};
tannus_geom__$Point_Point_$Impl_$.set_x = function(this1,nx) {
	return this1.set_x(nx);
};
tannus_geom__$Point_Point_$Impl_$.get_y = function(this1) {
	return this1.get_y();
};
tannus_geom__$Point_Point_$Impl_$.set_y = function(this1,ny) {
	return this1.set_y(ny);
};
tannus_geom__$Point_Point_$Impl_$.get_z = function(this1) {
	return this1.get_z();
};
tannus_geom__$Point_Point_$Impl_$.set_z = function(this1,nz) {
	return this1.set_z(nz);
};
tannus_geom__$Point_Point_$Impl_$.get_ix = function(this1) {
	return this1.get_x() | 0;
};
tannus_geom__$Point_Point_$Impl_$.set_ix = function(this1,nix) {
	return this1.set_x(nix) | 0;
};
tannus_geom__$Point_Point_$Impl_$.get_iy = function(this1) {
	return this1.get_y() | 0;
};
tannus_geom__$Point_Point_$Impl_$.set_iy = function(this1,niy) {
	return this1.set_y(niy) | 0;
};
tannus_geom__$Point_Point_$Impl_$.get_iz = function(this1) {
	return this1.get_z() | 0;
};
tannus_geom__$Point_Point_$Impl_$.set_iz = function(this1,niz) {
	return this1.set_z(niz) | 0;
};
tannus_geom__$Point_Point_$Impl_$.get_d = function(this1) {
	var this2 = new tannus_geom_TPoint(0,0,0);
	return this1.distanceFrom(this2);
};
tannus_geom__$Point_Point_$Impl_$.transform = function(this1,m) {
	return m.transformPoint(this1.clone());
};
tannus_geom__$Point_Point_$Impl_$.moveByPoint = function(this1,p) {
	return this1.moveByPoint(p);
};
tannus_geom__$Point_Point_$Impl_$.moveByFloat = function(this1,n) {
	return this1.moveByFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.moveByInt = function(this1,n) {
	return this1.moveByFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.plusPoint = function(this1,other) {
	return this1.plusPoint(other);
};
tannus_geom__$Point_Point_$Impl_$.plusFloat = function(this1,n) {
	return this1.plusFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.plusInt = function(this1,n) {
	return this1.plusFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.iminusPoint = function(this1,p) {
	return this1.iminusPoint(p);
};
tannus_geom__$Point_Point_$Impl_$.iminusFloat = function(this1,n) {
	return this1.iminusFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.minusPoint = function(this1,p) {
	return this1.minusPoint(p);
};
tannus_geom__$Point_Point_$Impl_$.minusFloat = function(this1,n) {
	return this1.minusFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.minusInt = function(this1,n) {
	return this1.minusFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.dividePoint = function(this1,p) {
	return this1.dividePoint(p);
};
tannus_geom__$Point_Point_$Impl_$.divideFloat = function(this1,d) {
	return this1.divideFloat(d);
};
tannus_geom__$Point_Point_$Impl_$.multPoint = function(this1,p) {
	return this1.multPoint(p);
};
tannus_geom__$Point_Point_$Impl_$.multFloat = function(this1,n) {
	return this1.multFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.negate = function(this1) {
	return this1.negate();
};
tannus_geom__$Point_Point_$Impl_$.greaterThan = function(this1,other) {
	var this2 = new tannus_geom_TPoint(0,0,0);
	var tmp = this1.distanceFrom(this2);
	var this3 = new tannus_geom_TPoint(0,0,0);
	return tmp > other.distanceFrom(this3);
};
tannus_geom__$Point_Point_$Impl_$.lessThan = function(this1,other) {
	var this2 = new tannus_geom_TPoint(0,0,0);
	var tmp = this1.distanceFrom(this2);
	var this3 = new tannus_geom_TPoint(0,0,0);
	return !(tmp > other.distanceFrom(this3));
};
tannus_geom__$Point_Point_$Impl_$.equals = function(this1,p) {
	return this1.equals(p);
};
tannus_geom__$Point_Point_$Impl_$.nequals = function(this1,p) {
	return this1.nequals(p);
};
tannus_geom__$Point_Point_$Impl_$.vectorize = function(this1,r) {
	var this2 = new tannus_geom_TPoint(tannus_math__$Percent_Percent_$Impl_$.percent(this1.get_x(),r.width),tannus_math__$Percent_Percent_$Impl_$.percent(this1.get_y(),r.height),0);
	return this2;
};
tannus_geom__$Point_Point_$Impl_$.devectorize = function(this1,r) {
	var this2 = this1.get_x();
	var px = this2;
	var this3 = this1.get_y();
	var py = this3;
	var this4 = new tannus_geom_TPoint(r.width * (px / 100),r.height * (py / 100),0);
	return this4;
};
tannus_geom__$Point_Point_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_geom__$Point_Point_$Impl_$.toArray = function(this1) {
	return this1.toArray();
};
tannus_geom__$Point_Point_$Impl_$.fromFloatArray = function(a) {
	return tannus_geom_TPoint.fromFloatArray(a);
};
tannus_geom__$Point_Point_$Impl_$.fromIntArray = function(a) {
	return tannus_geom_TPoint.fromFloatArray(a);
};
tannus_geom__$Point_Point_$Impl_$.perc = function(what,of) {
	return tannus_math__$Percent_Percent_$Impl_$.percent(what,of);
};
tannus_geom__$Point_Point_$Impl_$.createLinked = function(x,y,z) {
	return new tannus_geom_LinkedPoint(x,y,z);
};
tannus_geom__$Point_Point_$Impl_$.createLinkedFromPointRef = function(p) {
	var this1 = function() {
		return p().get_x();
	};
	var this2 = function(v) {
		return p().set_x(v);
	};
	var this3 = new tannus_io__$Pointer_Ref(this1,this2);
	var x = this3;
	var this4 = function() {
		return p().get_y();
	};
	var this5 = function(v1) {
		return p().set_y(v1);
	};
	var this6 = new tannus_io__$Pointer_Ref(this4,this5);
	var y = this6;
	var this7 = function() {
		return p().get_z();
	};
	var this8 = function(v2) {
		return p().set_z(v2);
	};
	var this9 = new tannus_io__$Pointer_Ref(this7,this8);
	var z = this9;
	return new tannus_geom_LinkedPoint(x,y,z);
};
var tannus_geom_TPoint = function(x,y,z) {
	this._x = x;
	this._y = y;
	this._z = z;
};
$hxClasses["tannus.geom.TPoint"] = tannus_geom_TPoint;
tannus_geom_TPoint.__name__ = ["tannus","geom","TPoint"];
tannus_geom_TPoint.__interfaces__ = [tannus_ds_Comparable];
tannus_geom_TPoint.fromFloatArray = function(a) {
	var ma = a;
	var this1;
	var this2 = ma[0];
	var this3 = ma[1];
	var this4 = ma[2];
	this1 = new tannus_geom_TPoint(this2 != null ? this2 : 0,this3 != null ? this3 : 0,this4 != null ? this4 : 0);
	return this1;
};
tannus_geom_TPoint.prototype = {
	angleTo: function(other) {
		var x1 = this.get_x();
		var y1 = this.get_y();
		var x2 = other.get_x();
		var this1 = new tannus_geom_CAngle(Math.atan2(other.get_y() - y1,x2 - x1) * 180 / 3.141592653589793);
		return this1;
	}
	,distanceFrom: function(other) {
		return Math.sqrt(Math.pow(Math.abs(this.get_x() - other.get_x()),2) + Math.pow(Math.abs(this.get_y() - other.get_y()),2));
	}
	,copyFrom: function(p) {
		this.set_x(p.get_x());
		this.set_y(p.get_y());
		this.set_z(p.get_z());
	}
	,plusPoint: function(other) {
		var this1 = new tannus_geom_TPoint(this.get_x() + other.get_x(),this.get_y() + other.get_y(),this.get_z() + other.get_z());
		return this1;
	}
	,plusFloat: function(n) {
		var this1 = new tannus_geom_TPoint(this.get_x() + n,this.get_y() + n,this.get_z() + n);
		return this1;
	}
	,moveByPoint: function(other) {
		var _g = this;
		_g.set_x(_g.get_x() + other.get_x());
		var _g1 = this;
		_g1.set_y(_g1.get_y() + other.get_y());
		var _g2 = this;
		_g2.set_z(_g2.get_z() + other.get_z());
		return this;
	}
	,moveByFloat: function(n) {
		var _g = this;
		_g.set_x(_g.get_x() + n);
		var _g1 = this;
		_g1.set_y(_g1.get_y() + n);
		var _g2 = this;
		_g2.set_z(_g2.get_z() + n);
		return this;
	}
	,minusPoint: function(other) {
		var this1 = new tannus_geom_TPoint(this.get_x() - other.get_x(),this.get_y() - other.get_y(),this.get_z() - other.get_z());
		return this1;
	}
	,minusFloat: function(n) {
		var this1 = new tannus_geom_TPoint(this.get_x() - n,this.get_y() - n,this.get_z() - n);
		return this1;
	}
	,iminusPoint: function(other) {
		this.moveByPoint(other.negate());
		return this;
	}
	,iminusFloat: function(n) {
		this.moveByFloat(-n);
		return this;
	}
	,dividePoint: function(d) {
		var this1 = new tannus_geom_TPoint(this.get_x() / d.get_x(),this.get_y() / d.get_y(),this.get_z() != 0 ? this.get_z() / d.get_z() : 0);
		return this1;
	}
	,divideFloat: function(f) {
		var this1 = new tannus_geom_TPoint(this.get_x() / f,this.get_y() / f,this.get_z() != 0 ? this.get_z() / f : 0);
		return this1;
	}
	,multPoint: function(p) {
		var this1 = new tannus_geom_TPoint(this.get_x() * p.get_x(),this.get_y() * p.get_y(),this.get_z() * p.get_z());
		return this1;
	}
	,multFloat: function(n) {
		var this1 = new tannus_geom_TPoint(this.get_x() * n,this.get_y() * n,this.get_z() * n);
		return this1;
	}
	,negate: function() {
		return this.multFloat(-1);
	}
	,clone: function() {
		var this1 = new tannus_geom_TPoint(this.get_x(),this.get_y(),this.get_z());
		return this1;
	}
	,clamp: function() {
		this.set_x(this.get_x() | 0);
		this.set_y(this.get_y() | 0);
		this.set_z(this.get_z() | 0);
	}
	,clamped: function() {
		var this1 = new tannus_geom_TPoint(this.get_x() | 0,this.get_y() | 0,this.get_z() | 0);
		return this1;
	}
	,lerp: function(other,weight) {
		var a = this.get_x();
		var x = a + weight * (other.get_x() - a);
		var a1 = this.get_y();
		var y = a1 + weight * (other.get_y() - a1);
		var a2 = this.get_z();
		var this1 = new tannus_geom_TPoint(x,y,a2 + weight * (other.get_z() - a2));
		return this1;
	}
	,mutate: function(f) {
		var this1 = new tannus_geom_TPoint(f(this.get_x()),f(this.get_y()),f(this.get_z()));
		return this1;
	}
	,imutate: function(f) {
		this.set_x(f(this.get_x()));
		this.set_y(f(this.get_y()));
		this.set_z(f(this.get_z()));
		return this;
	}
	,equals: function(other) {
		if(this.get_x() == other.get_x() && this.get_y() == other.get_y()) {
			return this.get_z() == other.get_z();
		} else {
			return false;
		}
	}
	,nequals: function(other) {
		return !this.equals(other);
	}
	,toString: function() {
		return "Point(" + this.get_x() + ", " + this.get_y() + ", " + this.get_z() + ")";
	}
	,toArray: function() {
		return [this.get_x(),this.get_y(),this.get_z()];
	}
	,get_x: function() {
		return this._x;
	}
	,get_y: function() {
		return this._y;
	}
	,get_z: function() {
		return this._z;
	}
	,set_x: function(v) {
		return this._x = v;
	}
	,set_y: function(v) {
		return this._y = v;
	}
	,set_z: function(v) {
		return this._z = v;
	}
	,_x: null
	,_y: null
	,_z: null
	,__class__: tannus_geom_TPoint
	,__properties__: {set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var tannus_geom_LinkedPoint = function(x,y,z) {
	var _gthis = this;
	tannus_geom_TPoint.call(this,0,0,0);
	this.rx = x;
	this.ry = y;
	var tmp;
	if(z != null) {
		tmp = z;
	} else {
		var this1 = function() {
			return _gthis._z;
		};
		var this2 = function(v) {
			return _gthis._z = v;
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		tmp = this3;
	}
	this.rz = tmp;
};
$hxClasses["tannus.geom.LinkedPoint"] = tannus_geom_LinkedPoint;
tannus_geom_LinkedPoint.__name__ = ["tannus","geom","LinkedPoint"];
tannus_geom_LinkedPoint.__super__ = tannus_geom_TPoint;
tannus_geom_LinkedPoint.prototype = $extend(tannus_geom_TPoint.prototype,{
	get_x: function() {
		return this.rx.get();
	}
	,get_y: function() {
		return this.ry.get();
	}
	,get_z: function() {
		return this.rz.get();
	}
	,set_x: function(v) {
		return this.rx.set(v);
	}
	,set_y: function(v) {
		return this.ry.set(v);
	}
	,set_z: function(v) {
		return this.rz.set(v);
	}
	,rx: null
	,ry: null
	,rz: null
	,__class__: tannus_geom_LinkedPoint
});
var tannus_geom__$Rectangle_Rectangle_$Impl_$ = {};
$hxClasses["tannus.geom._Rectangle.Rectangle_Impl_"] = tannus_geom__$Rectangle_Rectangle_$Impl_$;
tannus_geom__$Rectangle_Rectangle_$Impl_$.__name__ = ["tannus","geom","_Rectangle","Rectangle_Impl_"];
tannus_geom__$Rectangle_Rectangle_$Impl_$._new = function(_x,_y,_width,_height) {
	if(_height == null) {
		_height = 0;
	}
	if(_width == null) {
		_width = 0;
	}
	if(_y == null) {
		_y = 0;
	}
	if(_x == null) {
		_x = 0;
	}
	var this1 = new tannus_geom_CRectangle(_x,_y,_width,_height);
	return this1;
};
tannus_geom__$Rectangle_Rectangle_$Impl_$.eq = function(this1,o) {
	return this1.equals(o);
};
tannus_geom__$Rectangle_Rectangle_$Impl_$.floatDiv = function(this1,o) {
	return this1.divide(tannus_ds__$EitherType_EitherType_$Impl_$.fromL(o));
};
tannus_geom__$Rectangle_Rectangle_$Impl_$.rectDiv = function(this1,r) {
	var this2 = tannus_ds_Either.Right(r);
	return this1.divide(this2);
};
tannus_geom__$Rectangle_Rectangle_$Impl_$.fromArray = function(a) {
	switch(a.length) {
	case 2:
		var h = a[1];
		var w = a[0];
		var this1 = new tannus_geom_CRectangle(0,0,w,h);
		return this1;
	case 4:
		var h1 = a[3];
		var w1 = a[2];
		var y = a[1];
		var x = a[0];
		var this2 = new tannus_geom_CRectangle(x,y,w1,h1);
		return this2;
	default:
		var this3 = new tannus_geom_CRectangle(a[0],a[1],a[2],a[3]);
		return this3;
	}
};
tannus_geom__$Rectangle_Rectangle_$Impl_$.fromRect2D = function(rect) {
	var this1 = new tannus_geom_CRectangle(rect.d.get(0),rect.d.get(1),rect.d.get(2),rect.d.get(3));
	return this1;
};
var tannus_geom_Shape = function() { };
$hxClasses["tannus.geom.Shape"] = tannus_geom_Shape;
tannus_geom_Shape.__name__ = ["tannus","geom","Shape"];
tannus_geom_Shape.prototype = {
	getVertices: null
	,__class__: tannus_geom_Shape
};
var tannus_geom_CRectangle = function(_x,_y,_width,_height) {
	if(_height == null) {
		_height = 0;
	}
	if(_width == null) {
		_width = 0;
	}
	if(_y == null) {
		_y = 0;
	}
	if(_x == null) {
		_x = 0;
	}
	this.x = _x;
	this.y = _y;
	this.z = 0;
	this.width = _width;
	this.height = _height;
	this.depth = 0;
};
$hxClasses["tannus.geom.CRectangle"] = tannus_geom_CRectangle;
tannus_geom_CRectangle.__name__ = ["tannus","geom","CRectangle"];
tannus_geom_CRectangle.__interfaces__ = [tannus_geom_Shape];
tannus_geom_CRectangle.perc = function(what,of) {
	return tannus_math__$Percent_Percent_$Impl_$.percent(what,of);
};
tannus_geom_CRectangle.prototype = {
	clone: function() {
		var this1 = new tannus_geom_CRectangle(this.x,this.y,this.width,this.height);
		var r = this1;
		r.z = this.z;
		r.depth = this.depth;
		return r;
	}
	,cloneFrom: function(other) {
		this.x = other.x;
		this.y = other.y;
		this.z = other.z;
		this.width = other.width;
		this.height = other.height;
		this.depth = other.depth;
	}
	,equals: function(other) {
		if(this.x == other.x && this.y == other.y && this.z == other.z && this.width == other.width && this.height == other.height) {
			return this.depth == other.depth;
		} else {
			return false;
		}
	}
	,divide: function(div) {
		var _g = div;
		switch(_g[1]) {
		case 0:
			var f = _g[2];
			var this1 = new tannus_geom_CRectangle(this.x,this.y,this.width / f,this.height / f);
			return this1;
		case 1:
			var r = _g[2];
			var this2 = new tannus_geom_CRectangle(this.x,this.y,this.width / r.width,this.height / r.height);
			return this2;
		}
	}
	,contains: function(ox,oy) {
		if(ox > this.x && ox < this.x + this.width) {
			if(oy > this.y) {
				return oy < this.y + this.height;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,containsPoint: function(point) {
		var ox = point.get_x();
		var oy = point.get_y();
		if(ox > this.x && ox < this.x + this.width) {
			if(oy > this.y) {
				return oy < this.y + this.height;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,containsRect: function(o) {
		var this1 = new tannus_geom_TPoint(o.x + o.width / 2,o.y + o.height / 2,0);
		var point = this1;
		var ox = point.get_x();
		var oy = point.get_y();
		if(ox > this.x && ox < this.x + this.width && (oy > this.y && oy < this.y + this.height)) {
			return true;
		} else {
			var _g = 0;
			var _g1 = o.get_corners();
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				var ox1 = p.get_x();
				var oy1 = p.get_y();
				if(ox1 > this.x && ox1 < this.x + this.width && (oy1 > this.y && oy1 < this.y + this.height)) {
					return true;
				}
			}
			return false;
		}
	}
	,enlarge: function(dw,dh) {
		var _g = this;
		_g.width += dw;
		var _g1 = this;
		_g1.height += dh;
		this.x -= dw / 2;
		this.y -= dh / 2;
	}
	,move: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,scale: function(sw,sh) {
		if(sw != null) {
			var ratio = sw / this.width;
			this.width = sw;
			this.height = ratio * this.height;
		} else if(sh != null) {
			var ratio1 = sh / this.height;
			this.width = ratio1 * this.width;
			this.height = sh;
		} else {
			return;
		}
	}
	,scaled: function(sw,sh) {
		var s = this.clone();
		s.scale(sw,sh);
		return s;
	}
	,percentScale: function(amount) {
		this.width *= amount / 100;
		this.height *= amount / 100;
	}
	,percentScaled: function(amount) {
		var this1 = new tannus_geom_CRectangle(this.x,this.y,this.width * (amount / 100),this.height * (amount / 100));
		return this1;
	}
	,rotated: function(angle) {
		var rads = angle.v * Math.PI / 180;
		var nw = Math.abs(this.width * Math.sin(rads) + Math.abs(this.height * Math.cos(rads)));
		var nh = Math.abs(this.width * Math.cos(rads) + Math.abs(this.height * Math.sin(rads)));
		var this1 = new tannus_geom_CRectangle(this.x,this.y,nw,nh);
		return this1;
	}
	,split: function(count,vertical) {
		if(vertical == null) {
			vertical = true;
		}
		var all = [];
		if(vertical) {
			var ph = this.height / count;
			var _g1 = 0;
			var _g = count;
			while(_g1 < _g) {
				var i = _g1++;
				var this1 = new tannus_geom_CRectangle(this.x,this.y + i * ph,this.width,ph);
				all.push(this1);
			}
		} else {
			var pw = this.width / count;
			var _g11 = 0;
			var _g2 = count;
			while(_g11 < _g2) {
				var i1 = _g11++;
				var this2 = new tannus_geom_CRectangle(this.x + i1 * pw,this.y,pw,this.height);
				all.push(this2);
			}
		}
		return all;
	}
	,split2: function(count) {
		return this.split(count,true).map(function(r) {
			return r.split(count,false);
		});
	}
	,bisect: function(mode) {
		if(mode == null) {
			mode = true;
		}
		var pair = [];
		if(mode) {
			var this1 = new tannus_geom_TPoint(this.x,this.y,0);
			var this2 = new tannus_geom_TPoint(this.x + this.width,this.y,0);
			var this3 = new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0);
			pair.push(new tannus_geom_Triangle(this1,this2,this3));
			var this4 = new tannus_geom_TPoint(this.x,this.y,0);
			var this5 = new tannus_geom_TPoint(this.x,this.y + this.height,0);
			var this6 = new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0);
			pair.push(new tannus_geom_Triangle(this4,this5,this6));
		} else {
			var this7 = new tannus_geom_TPoint(this.x + this.width,this.y,0);
			var this8 = new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0);
			var this9 = new tannus_geom_TPoint(this.x,this.y + this.height,0);
			pair.push(new tannus_geom_Triangle(this7,this8,this9));
			var this10 = new tannus_geom_TPoint(this.x,this.y + this.height,0);
			var this11 = new tannus_geom_TPoint(this.x,this.y,0);
			var this12 = new tannus_geom_TPoint(this.x + this.width,this.y,0);
			pair.push(new tannus_geom_Triangle(this10,this11,this12));
		}
		return pair;
	}
	,bisect2: function() {
		return tannus_ds_ArrayTools.flatten(this.bisect().map(function(t) {
			return t.bisect();
		}));
	}
	,crop: function(cr) {
		var corners = cr.get_corners().map($bind(this,this.containsPoint));
		if(Lambda.has(corners,false)) {
			return null;
		}
		var this1 = new tannus_geom_CRectangle(this.x,this.y,cr.x - this.x,this.height);
		var left = this1;
		var this2 = new tannus_geom_CRectangle(cr.x,this.y,cr.width,cr.y - this.y);
		var top = this2;
		var this3 = new tannus_geom_CRectangle(cr.x,cr.y + cr.height,cr.width,this.y + this.height);
		var bottom = this3;
		bottom.height -= bottom.y;
		var this4 = new tannus_geom_CRectangle(cr.x + cr.width,this.y,0,this.height);
		var right = this4;
		right.width = this.x + this.width - right.x;
		return { "top" : top, "left" : left, "bottom" : bottom, "right" : right};
	}
	,vectorize: function(r) {
		var this1 = new tannus_geom_TPoint(this.x,this.y,0);
		var this2 = this1;
		var this3 = new tannus_geom_TPoint(tannus_math__$Percent_Percent_$Impl_$.percent(this2.get_x(),r.width),tannus_math__$Percent_Percent_$Impl_$.percent(this2.get_y(),r.height),0);
		var pos = this3;
		var this4;
		var this5 = [tannus_math__$Percent_Percent_$Impl_$.percent(this.width,r.width),tannus_math__$Percent_Percent_$Impl_$.percent(this.height,r.height)];
		this4 = this5;
		var dim = this4;
		var this6 = new tannus_geom_CRectangle(pos.get_x(),pos.get_y(),dim[0],dim[1]);
		return this6;
	}
	,devectorize: function(r) {
		var px = this.x;
		var py = this.y;
		var pw = this.width;
		var ph = this.height;
		var this1 = new tannus_geom_CRectangle(r.width * (px / 100),r.height * (py / 100),r.width * (pw / 100),r.height * (ph / 100));
		return this1;
	}
	,getVertices: function(precision) {
		var self = this;
		var this1 = new tannus_geom_TPoint(self.x,self.y,0);
		var this2 = new tannus_geom_TPoint(self.x + self.width,self.y,0);
		var this3 = new tannus_geom_TPoint(self.x + self.width,self.y + self.height,0);
		var this4 = new tannus_geom_TPoint(self.x,self.y + self.height,0);
		var this5 = new tannus_geom_VertexArray([this1,this2,this3,this4]);
		var verts = this5;
		return verts;
	}
	,getCornerPointers: function() {
		var _gthis = this;
		var this1 = function() {
			var this2 = new tannus_geom_TPoint(_gthis.x,_gthis.y,0);
			return this2;
		};
		var this3 = function(v) {
			return _gthis.set_topLeft(v);
		};
		var this4 = new tannus_io__$Pointer_Ref(this1,this3);
		var this5 = function() {
			var this6 = new tannus_geom_TPoint(_gthis.x + _gthis.width,_gthis.y,0);
			return this6;
		};
		var this7 = function(v1) {
			return _gthis.set_topRight(v1);
		};
		var this8 = new tannus_io__$Pointer_Ref(this5,this7);
		var this9 = function() {
			var this10 = new tannus_geom_TPoint(_gthis.x,_gthis.y + _gthis.height,0);
			return this10;
		};
		var this11 = function(v2) {
			return _gthis.set_bottomLeft(v2);
		};
		var this12 = new tannus_io__$Pointer_Ref(this9,this11);
		var this13 = function() {
			var this14 = new tannus_geom_TPoint(_gthis.x + _gthis.width,_gthis.y + _gthis.height,0);
			return this14;
		};
		var this15 = function(v3) {
			return _gthis.set_bottomRight(v3);
		};
		var this16 = new tannus_io__$Pointer_Ref(this13,this15);
		var result = [this4,this8,this12,this16];
		return result;
	}
	,layers: function() {
		var results = [];
		var _g1 = Math.round(this.z);
		var _g = Math.round(this.z + this.depth);
		while(_g1 < _g) {
			var i = _g1++;
			var this1 = new tannus_geom_CRectangle(this.x,this.y,this.width,this.height);
			var layer = this1;
			layer.z = i;
			results.push(layer);
		}
		return results;
	}
	,toString: function() {
		return "Rectangle(" + this.x + ", " + this.y + ", " + this.width + ", " + this.height + ")";
	}
	,toArray: function() {
		return [this.x,this.y,this.width,this.height];
	}
	,get_position: function() {
		var this1 = new tannus_geom_TPoint(this.x,this.y,this.z);
		return this1;
	}
	,set_position: function(np) {
		this.x = np.get_x();
		this.y = np.get_y();
		this.z = np.get_z();
		var this1 = new tannus_geom_TPoint(this.x,this.y,this.z);
		return this1;
	}
	,get_corners: function() {
		var this1 = new tannus_geom_TPoint(this.x,this.y,0);
		var this2 = new tannus_geom_TPoint(this.x + this.width,this.y,0);
		var this3 = new tannus_geom_TPoint(this.x,this.y + this.height,0);
		var this4 = new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0);
		return [this1,this2,this3,this4];
	}
	,get_area: function() {
		return this.width * this.height;
	}
	,get_centerX: function() {
		return this.x + this.width / 2;
	}
	,set_centerX: function(v) {
		return this.x = v - this.width / 2;
	}
	,get_centerY: function() {
		return this.y + this.height / 2;
	}
	,set_centerY: function(v) {
		return this.y = v - this.height / 2;
	}
	,get_center: function() {
		var this1 = new tannus_geom_TPoint(this.x + this.width / 2,this.y + this.height / 2,0);
		return this1;
	}
	,set_center: function(nc) {
		this.x = nc.get_x() - this.width / 2;
		this.y = nc.get_y() - this.height / 2;
		return nc;
	}
	,get_topRight: function() {
		var this1 = new tannus_geom_TPoint(this.x + this.width,this.y,0);
		return this1;
	}
	,set_topRight: function(v) {
		this.x = v.get_x() - this.width;
		this.y = v.get_y();
		var this1 = new tannus_geom_TPoint(this.x + this.width,this.y,0);
		return this1;
	}
	,get_topLeft: function() {
		var this1 = new tannus_geom_TPoint(this.x,this.y,0);
		return this1;
	}
	,set_topLeft: function(v) {
		this.x = v.get_x();
		this.y = v.get_y();
		var this1 = new tannus_geom_TPoint(this.x,this.y,0);
		return this1;
	}
	,get_bottomLeft: function() {
		var this1 = new tannus_geom_TPoint(this.x,this.y + this.height,0);
		return this1;
	}
	,set_bottomLeft: function(v) {
		this.x = v.get_x();
		this.y = v.get_y() - this.height;
		var this1 = new tannus_geom_TPoint(this.x,this.y + this.height,0);
		return this1;
	}
	,get_bottomRight: function() {
		var this1 = new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0);
		return this1;
	}
	,set_bottomRight: function(v) {
		this.x = v.get_x() - this.width;
		this.y = v.get_y() - this.height;
		var this1 = new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0);
		return this1;
	}
	,get_w: function() {
		return this.width;
	}
	,set_w: function(nw) {
		return this.width = nw;
	}
	,get_h: function() {
		return this.height;
	}
	,set_h: function(nh) {
		return this.height = nh;
	}
	,get_d: function() {
		return this.depth;
	}
	,set_d: function(nd) {
		return this.depth = nd;
	}
	,x: null
	,y: null
	,z: null
	,width: null
	,height: null
	,depth: null
	,__class__: tannus_geom_CRectangle
	,__properties__: {set_d:"set_d",get_d:"get_d",set_h:"set_h",get_h:"get_h",set_w:"set_w",get_w:"get_w",set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_bottomLeft:"set_bottomLeft",get_bottomLeft:"get_bottomLeft",set_topLeft:"set_topLeft",get_topLeft:"get_topLeft",set_topRight:"set_topRight",get_topRight:"get_topRight",set_center:"set_center",get_center:"get_center",set_centerY:"set_centerY",get_centerY:"get_centerY",set_centerX:"set_centerX",get_centerX:"get_centerX",get_area:"get_area",get_corners:"get_corners",set_position:"set_position",get_position:"get_position"}
};
var tannus_geom_Triangle = function(x,y,z) {
	var tmp;
	if(x != null) {
		tmp = x;
	} else {
		var this1 = new tannus_geom_TPoint(0,0,0);
		tmp = this1;
	}
	this.one = tmp;
	var tmp1;
	if(y != null) {
		tmp1 = y;
	} else {
		var this2 = new tannus_geom_TPoint(0,0,0);
		tmp1 = this2;
	}
	this.two = tmp1;
	var tmp2;
	if(z != null) {
		tmp2 = z;
	} else {
		var this3 = new tannus_geom_TPoint(0,0,0);
		tmp2 = this3;
	}
	this.three = tmp2;
};
$hxClasses["tannus.geom.Triangle"] = tannus_geom_Triangle;
tannus_geom_Triangle.__name__ = ["tannus","geom","Triangle"];
tannus_geom_Triangle.__interfaces__ = [tannus_geom_Shape];
tannus_geom_Triangle.prototype = {
	clone: function() {
		return new tannus_geom_Triangle(this.one.clone(),this.two.clone(),this.three.clone());
	}
	,bisect: function() {
		var _this = new tannus_geom_Line(this.one,this.three);
		var mp = _this.one.lerp(_this.two,0.5);
		var l = new tannus_geom_Triangle(this.one,this.two,mp);
		var r = new tannus_geom_Triangle(mp,this.two,this.three);
		return [l,r];
	}
	,containsPoint: function(p) {
		var a = this.three.minusPoint(this.one);
		var b = this.two.minusPoint(this.one);
		var c = p.minusPoint(this.one);
		var dot_aa = a.get_x() * a.get_x() + a.get_y() * a.get_y();
		var dot_ab = a.get_x() * b.get_x() + a.get_y() * b.get_y();
		var dot_ac = a.get_x() * c.get_x() + a.get_y() * c.get_y();
		var dot_bb = b.get_x() * b.get_x() + b.get_y() * b.get_y();
		var dot_bc = b.get_x() * c.get_x() + b.get_y() * c.get_y();
		var invDenom = 1 / (dot_aa * dot_bb - dot_ab * dot_ab);
		var u = (dot_bb * dot_ac - dot_ab * dot_bc) * invDenom;
		var v = (dot_aa * dot_bc - dot_ab * dot_ac) * invDenom;
		if(u >= 0 && v >= 0) {
			return u + v < 1;
		} else {
			return false;
		}
	}
	,dot: function(x,y) {
		return x.get_x() * y.get_x() + x.get_y() * y.get_y();
	}
	,vectorize: function(r) {
		var c = new tannus_geom_Triangle(this.one.clone(),this.two.clone(),this.three.clone());
		var this1 = this.one;
		var this2 = new tannus_geom_TPoint(tannus_math__$Percent_Percent_$Impl_$.percent(this1.get_x(),r.width),tannus_math__$Percent_Percent_$Impl_$.percent(this1.get_y(),r.height),0);
		c.one = this2;
		var this3 = this.two;
		var this4 = new tannus_geom_TPoint(tannus_math__$Percent_Percent_$Impl_$.percent(this3.get_x(),r.width),tannus_math__$Percent_Percent_$Impl_$.percent(this3.get_y(),r.height),0);
		c.two = this4;
		var this5 = this.three;
		var this6 = new tannus_geom_TPoint(tannus_math__$Percent_Percent_$Impl_$.percent(this5.get_x(),r.width),tannus_math__$Percent_Percent_$Impl_$.percent(this5.get_y(),r.height),0);
		c.three = this6;
		return c;
	}
	,devectorize: function(r) {
		var c = new tannus_geom_Triangle(this.one.clone(),this.two.clone(),this.three.clone());
		c.one = tannus_geom__$Point_Point_$Impl_$.devectorize(this.one,r);
		c.two = tannus_geom__$Point_Point_$Impl_$.devectorize(this.two,r);
		c.three = tannus_geom__$Point_Point_$Impl_$.devectorize(this.three,r);
		return c;
	}
	,getVertices: function(precision) {
		var lines = this.get_lines();
		var _g = [];
		var _g1 = 0;
		while(_g1 < lines.length) {
			var l = lines[_g1];
			++_g1;
			_g.push([l.one,l.two]);
		}
		var this1 = new tannus_geom_VertexArray(tannus_ds_ArrayTools.flatten(_g));
		return this1;
	}
	,get_center: function() {
		var cx = (this.one.get_x() + this.two.get_x() + this.three.get_x()) / 3;
		var cy = (this.one.get_y() + this.two.get_y() + this.three.get_y()) / 3;
		var cz = (this.one.get_z() + this.two.get_z() + this.three.get_z()) / 3;
		var this1 = new tannus_geom_TPoint(cx,cy,cz);
		return this1;
	}
	,one: null
	,two: null
	,three: null
	,get_lines: function() {
		var la = [];
		la.push(new tannus_geom_Line(this.one,this.two));
		la.push(new tannus_geom_Line(this.two,this.three));
		la.push(new tannus_geom_Line(this.three,this.one));
		return la;
	}
	,get_points: function() {
		return [this.one,this.two,this.three];
	}
	,set_points: function(v) {
		this.one = v[0];
		this.two = v[1];
		this.three = v[2];
		return [this.one,this.two,this.three];
	}
	,__class__: tannus_geom_Triangle
	,__properties__: {set_points:"set_points",get_points:"get_points",get_lines:"get_lines",get_center:"get_center"}
};
var tannus_geom__$Velocity_Velocity_$Impl_$ = {};
$hxClasses["tannus.geom._Velocity.Velocity_Impl_"] = tannus_geom__$Velocity_Velocity_$Impl_$;
tannus_geom__$Velocity_Velocity_$Impl_$.__name__ = ["tannus","geom","_Velocity","Velocity_Impl_"];
tannus_geom__$Velocity_Velocity_$Impl_$._new = function(speed,angle) {
	var this1 = new tannus_geom_CVelocity(speed,angle);
	return this1;
};
tannus_geom__$Velocity_Velocity_$Impl_$.invert = function(this1) {
	return this1.invert();
};
tannus_geom__$Velocity_Velocity_$Impl_$.plus = function(this1,other) {
	return this1.plus(other);
};
tannus_geom__$Velocity_Velocity_$Impl_$.minus = function(this1,other) {
	return this1.minus(other);
};
tannus_geom__$Velocity_Velocity_$Impl_$.toPoint = function(this1) {
	return this1.get_vector();
};
tannus_geom__$Velocity_Velocity_$Impl_$.fromPoint = function(p) {
	return tannus_geom_CVelocity.fromPoint(p);
};
var tannus_geom_CVelocity = function(speed,angle) {
	this.speed = speed;
	this.angle = angle;
};
$hxClasses["tannus.geom.CVelocity"] = tannus_geom_CVelocity;
tannus_geom_CVelocity.__name__ = ["tannus","geom","CVelocity"];
tannus_geom_CVelocity.fromVector = function(x,y) {
	var this1 = new tannus_geom_TPoint(x,y,0);
	return tannus_geom_CVelocity.fromPoint(this1);
};
tannus_geom_CVelocity.fromPoint = function(p) {
	var this1 = new tannus_geom_CAngle(0);
	var this2 = new tannus_geom_CVelocity(0,this1);
	var vel = this2;
	vel.set_vector(p);
	return vel;
};
tannus_geom_CVelocity.prototype = {
	setVector: function(vx,vy) {
		var this1 = new tannus_geom_TPoint(vx,vy,0);
		var e = this1;
		var this2 = new tannus_geom_TPoint(0,0,0);
		var l = new tannus_geom_Line(this2,e);
		this.speed = l.one.distanceFrom(l.two);
		var x2 = e.get_x();
		var this3 = new tannus_geom_CAngle(Math.atan2(e.get_y(),x2) * 180 / 3.141592653589793);
		this.angle = this3;
	}
	,clone: function() {
		var this1 = new tannus_geom_CVelocity(this.speed,this.angle);
		return this1;
	}
	,invert: function() {
		return tannus_geom_CVelocity.fromVector(-(Math.cos(this.angle.v * Math.PI / 180) * this.speed),-(Math.sin(this.angle.v * Math.PI / 180) * this.speed));
	}
	,plus: function(other) {
		return tannus_geom_CVelocity.fromPoint(this.get_vector().plusPoint(other.get_vector()));
	}
	,minus: function(other) {
		return tannus_geom_CVelocity.fromPoint(this.get_vector().minusPoint(other.get_vector()));
	}
	,lerp: function(other,weight) {
		var vec = this.get_vector().lerp(other.get_vector(),weight);
		return tannus_geom_CVelocity.fromPoint(vec);
	}
	,get_x: function() {
		return Math.cos(this.angle.v * Math.PI / 180) * this.speed;
	}
	,set_x: function(nx) {
		this.setVector(nx,Math.sin(this.angle.v * Math.PI / 180) * this.speed);
		return nx;
	}
	,get_y: function() {
		return Math.sin(this.angle.v * Math.PI / 180) * this.speed;
	}
	,set_y: function(ny) {
		this.setVector(Math.cos(this.angle.v * Math.PI / 180) * this.speed,ny);
		return ny;
	}
	,get_vector: function() {
		var this1 = new tannus_geom_TPoint(Math.cos(this.angle.v * Math.PI / 180) * this.speed,Math.sin(this.angle.v * Math.PI / 180) * this.speed,0);
		return this1;
	}
	,set_vector: function(v) {
		this.setVector(v.get_x(),v.get_y());
		return this.get_vector();
	}
	,speed: null
	,angle: null
	,__class__: tannus_geom_CVelocity
	,__properties__: {set_vector:"set_vector",get_vector:"get_vector",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var tannus_geom_VertexArray = function(v) {
	this.set_data(v != null ? v.slice() : []);
	var this1 = new tannus_ds_CPair(null,null);
	this._lines = this1;
	this._rect = null;
};
$hxClasses["tannus.geom.VertexArray"] = tannus_geom_VertexArray;
tannus_geom_VertexArray.__name__ = ["tannus","geom","VertexArray"];
tannus_geom_VertexArray.prototype = {
	resetCache: function() {
		var this1 = new tannus_ds_CPair(null,null);
		this._lines = this1;
		this._rect = null;
	}
	,get: function(i) {
		return this.data[i];
	}
	,set: function(i,p) {
		this.data[i] = p.clone();
		this.resetCache();
		return this.get(i);
	}
	,toImmutable: function(p) {
		if(!js_Boot.__instanceof(p,tannus_geom_ImmutablePoint)) {
			var np = new tannus_geom_ImmutablePoint(p.get_x(),p.get_y(),p.get_z());
			return np;
		} else {
			return p.clone();
		}
	}
	,toMutable: function(p) {
		if(js_Boot.__instanceof(p,tannus_geom_ImmutablePoint)) {
			var this1 = new tannus_geom_TPoint(0,0,0);
			var np = this1;
			np.copyFrom(p);
			return np;
		} else {
			return p;
		}
	}
	,iterator: function() {
		return new tannus_geom_VerticeIterator(this);
	}
	,push: function(p) {
		this.resetCache();
		return this.data.push(p.clone());
	}
	,pop: function() {
		this.resetCache();
		return this.data.pop();
	}
	,unshift: function(p) {
		this.resetCache();
		this.data.unshift(p.clone());
		return this.data.length;
	}
	,shift: function() {
		this.resetCache();
		return this.data.shift();
	}
	,concat: function(other) {
		var this1 = new tannus_geom_VertexArray(this.data.concat(other.data));
		return this1;
	}
	,append: function(other) {
		this.resetCache();
		this.set_data(this.data.concat(other.data));
		var this1 = new tannus_geom_VertexArray(this.data);
		return this1;
	}
	,clone: function() {
		return new tannus_geom_VertexArray(this.data);
	}
	,calculateLines: function(close) {
		if(close == null) {
			close = false;
		}
		var cached = close ? this._lines.right : this._lines.left;
		if(cached != null) {
			return cached;
		} else {
			var lines = [];
			var i = 0;
			var last = null;
			while(i < this.data.length) {
				var start = this.data[i];
				if(last == null) {
					last = start;
				} else {
					lines.push(new tannus_geom_Line(last,start));
					last = start;
				}
				++i;
			}
			if(close) {
				lines.push(new tannus_geom_Line(tannus_ds_ArrayTools.last(this.data),this.data[0]));
				this._lines.right = lines;
			} else {
				this._lines.left = lines;
			}
			return lines;
		}
	}
	,lineStack: function(close) {
		if(close == null) {
			close = false;
		}
		return new tannus_ds_Stack(this.calculateLines(close));
	}
	,pointStack: function() {
		var rdat = this.data.slice();
		rdat.reverse();
		return new tannus_ds_Stack(rdat);
	}
	,simplify: function(threshold) {
		if(threshold == null) {
			threshold = 2;
		}
		var lines = this.calculateLines();
		var ndata = [];
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			if(Math.round(line.one.distanceFrom(line.two)) <= threshold) {
				ndata.push(line.one.lerp(line.two,0.5));
			} else {
				ndata.push(line.one);
				ndata.push(line.two);
			}
		}
		this.set_data(ndata);
	}
	,each: function(f) {
		var points = this.pointStack();
		while(!points.get_empty()) {
			var p = points.pop();
			f(p);
		}
		this.resetCache();
	}
	,apply: function(m) {
		this.set_data(this.data.map(function(p) {
			return m.transformPoint(p);
		}));
	}
	,map: function(f) {
		return new tannus_geom_VertexArray(this.data.map(f));
	}
	,getContainingRect: function() {
		if(this._rect == null) {
			var xr = tannus_math_TMath.minmax(this.data,function(p) {
				return p.get_x();
			});
			var yr = tannus_math_TMath.minmax(this.data,function(p1) {
				return p1.get_y();
			});
			var this1 = new tannus_geom_CRectangle(xr.min,yr.min,xr.max - xr.min,yr.max - yr.min);
			this._rect = this1;
		}
		return this._rect;
	}
	,get_length: function() {
		return this.data.length;
	}
	,get_lines: function() {
		return this.calculateLines(true);
	}
	,get_rect: function() {
		return this.getContainingRect();
	}
	,get_first: function() {
		return this.get(0);
	}
	,get_last: function() {
		return this.get(this.data.length - 1);
	}
	,data: null
	,set_data: function(plist) {
		if(plist != this.data) {
			this.resetCache();
		}
		return this.data = plist;
	}
	,_lines: null
	,_rect: null
	,__class__: tannus_geom_VertexArray
	,__properties__: {set_data:"set_data",get_last:"get_last",get_first:"get_first",get_rect:"get_rect",get_lines:"get_lines",get_length:"get_length"}
};
var tannus_geom_VerticeIterator = function(va) {
	this.array = va;
	this.iter = new IntIterator(0,this.array.data.length);
};
$hxClasses["tannus.geom.VerticeIterator"] = tannus_geom_VerticeIterator;
tannus_geom_VerticeIterator.__name__ = ["tannus","geom","VerticeIterator"];
tannus_geom_VerticeIterator.prototype = {
	hasNext: function() {
		var _this = this.iter;
		return _this.min < _this.max;
	}
	,next: function() {
		return this.array.get(this.iter.min++);
	}
	,array: null
	,iter: null
	,__class__: tannus_geom_VerticeIterator
};
var tannus_geom_ImmutablePoint = function(x,y,z) {
	tannus_geom_TPoint.call(this,x,y,z);
};
$hxClasses["tannus.geom.ImmutablePoint"] = tannus_geom_ImmutablePoint;
tannus_geom_ImmutablePoint.__name__ = ["tannus","geom","ImmutablePoint"];
tannus_geom_ImmutablePoint.__super__ = tannus_geom_TPoint;
tannus_geom_ImmutablePoint.prototype = $extend(tannus_geom_TPoint.prototype,{
	set_x: function(v) {
		return v;
	}
	,set_y: function(v) {
		return v;
	}
	,set_z: function(v) {
		return v;
	}
	,write: function(p) {
		this._x = p.get_x();
		this._y = p.get_y();
		this._z = p.get_z();
	}
	,__class__: tannus_geom_ImmutablePoint
});
var tannus_geom__$Vertices_Vertices_$Impl_$ = {};
$hxClasses["tannus.geom._Vertices.Vertices_Impl_"] = tannus_geom__$Vertices_Vertices_$Impl_$;
tannus_geom__$Vertices_Vertices_$Impl_$.__name__ = ["tannus","geom","_Vertices","Vertices_Impl_"];
tannus_geom__$Vertices_Vertices_$Impl_$._new = function(v) {
	var this1 = new tannus_geom_VertexArray(v);
	return this1;
};
tannus_geom__$Vertices_Vertices_$Impl_$.clone = function(this1) {
	return this1.clone();
};
tannus_geom__$Vertices_Vertices_$Impl_$.map = function(this1,f) {
	return this1.map(f);
};
tannus_geom__$Vertices_Vertices_$Impl_$.get = function(this1,i) {
	return this1.get(i);
};
tannus_geom__$Vertices_Vertices_$Impl_$.set = function(this1,i,p) {
	return this1.set(i,p);
};
tannus_geom__$Vertices_Vertices_$Impl_$.isum = function(this1,other) {
	return this1.append(other);
};
tannus_geom__$Vertices_Vertices_$Impl_$.sum = function(this1,other) {
	var this2 = new tannus_geom_VertexArray(this1.data.concat(other.data));
	return this2;
};
tannus_geom__$Vertices_Vertices_$Impl_$.toPoints = function(this1) {
	var _g = [];
	var p = this1.iterator();
	while(p.hasNext()) {
		var p1 = p.next();
		_g.push(p1.clone());
	}
	return _g;
};
tannus_geom__$Vertices_Vertices_$Impl_$.fromPoints = function(list) {
	var this1 = new tannus_geom_VertexArray(list);
	return this1;
};
tannus_geom__$Vertices_Vertices_$Impl_$.toLines = function(this1) {
	return this1.calculateLines(true);
};
tannus_geom__$Vertices_Vertices_$Impl_$.fromLines = function(lines) {
	var _g = [];
	var _g1 = 0;
	while(_g1 < lines.length) {
		var l = lines[_g1];
		++_g1;
		_g.push([l.one,l.two]);
	}
	var this1 = new tannus_geom_VertexArray(tannus_ds_ArrayTools.flatten(_g));
	return this1;
};
tannus_geom__$Vertices_Vertices_$Impl_$.fromShape = function(s) {
	return s.getVertices();
};
var tannus_geom2_Point = function(x,y,z) {
	var this1 = new tannus_ds_data_Data(3,0);
	this.d = this1;
	if(x == null) {
		x = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(z == null) {
		z = 0;
	}
	this.d.sets([x,y,z]);
};
$hxClasses["tannus.geom2.Point"] = tannus_geom2_Point;
tannus_geom2_Point.__name__ = ["tannus","geom2","Point"];
tannus_geom2_Point.prototype = {
	equals: function(other) {
		if(this.d.get(0) == other.d.get(0) && this.d.get(1) == other.d.get(1)) {
			return this.d.get(1) == other.d.get(1);
		} else {
			return false;
		}
	}
	,angleTo: function(other) {
		var x1 = this.d.get(0);
		var y1 = other.d.get(0);
		var x2 = this.d.get(1);
		var this1 = new tannus_geom_CAngle(Math.atan2(other.d.get(1) - y1,x2 - x1) * 180 / 3.141592653589793);
		return this1;
	}
	,distanceFrom: function(other) {
		return Math.sqrt(Math.pow(this.d.get(0) - other.d.get(0),2) + Math.pow(this.d.get(1) - other.d.get(1),2));
	}
	,copyFrom: function(other) {
		var v = other.d.get(0);
		this.d.set(0,v);
		var v1 = other.d.get(1);
		this.d.set(1,v1);
		var v2 = other.d.get(1);
		this.d.set(1,v2);
	}
	,mutate: function(f) {
		return new tannus_geom2_Point(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(1)));
	}
	,mutate2: function(o,f) {
		return new tannus_geom2_Point(f(this.d.get(0),o.d.get(0)),f(this.d.get(1),o.d.get(1)),f(this.d.get(1),o.d.get(1)));
	}
	,plusPoint: function(other) {
		return new tannus_geom2_Point(this.d.get(0) + other.d.get(0),this.d.get(1) + other.d.get(1),this.d.get(1) + other.d.get(1));
	}
	,minusPoint: function(o) {
		return new tannus_geom2_Point(this.d.get(0) - o.d.get(0),this.d.get(1) - o.d.get(1),this.d.get(1) - o.d.get(1));
	}
	,clone: function() {
		return new tannus_geom2_Point(this.d.get(0),this.d.get(1),this.d.get(1));
	}
	,lerp: function(other,weight) {
		var a = this.d.get(0);
		var tmp = a + weight * (other.d.get(0) - a);
		var a1 = this.d.get(1);
		var tmp1 = a1 + weight * (other.d.get(1) - a1);
		var a2 = this.d.get(1);
		return new tannus_geom2_Point(tmp,tmp1,a2 + weight * (other.d.get(1) - a2));
	}
	,round: function() {
		var f = Math.round;
		return new tannus_geom2_Point(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(1)));
	}
	,floor: function() {
		var f = Math.floor;
		return new tannus_geom2_Point(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(1)));
	}
	,ceil: function() {
		var f = Math.ceil;
		return new tannus_geom2_Point(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(1)));
	}
	,get_x: function() {
		return this.d.get(0);
	}
	,set_x: function(v) {
		return this.d.set(0,v);
	}
	,get_y: function() {
		return this.d.get(1);
	}
	,set_y: function(v) {
		return this.d.set(1,v);
	}
	,get_z: function() {
		return this.d.get(1);
	}
	,set_z: function(v) {
		return this.d.set(1,v);
	}
	,d: null
	,__class__: tannus_geom2_Point
	,__properties__: {set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var tannus_geom2_LinkedPoint = function(x_ref,y_ref,z_ref) {
	tannus_geom2_Point.call(this,0,0,0);
	this.d = new tannus_ds_data_BoundData([x_ref,y_ref,z_ref]);
};
$hxClasses["tannus.geom2.LinkedPoint"] = tannus_geom2_LinkedPoint;
tannus_geom2_LinkedPoint.__name__ = ["tannus","geom2","LinkedPoint"];
tannus_geom2_LinkedPoint.__super__ = tannus_geom2_Point;
tannus_geom2_LinkedPoint.prototype = $extend(tannus_geom2_Point.prototype,{
	__class__: tannus_geom2_LinkedPoint
});
var tannus_geom2_Rect = function(x,y,width,height) {
	var this1 = new tannus_ds_data_Data(4,0);
	this.d = this1;
	if(x == null) {
		x = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(height == null) {
		height = 0;
	}
	this.d.sets([x,y,width,height]);
};
$hxClasses["tannus.geom2.Rect"] = tannus_geom2_Rect;
tannus_geom2_Rect.__name__ = ["tannus","geom2","Rect"];
tannus_geom2_Rect.prototype = {
	clone: function() {
		return new tannus_geom2_Rect(this.d.get(0),this.d.get(1),this.d.get(2),this.d.get(3));
	}
	,pull: function(src) {
		var v = src.d.get(0);
		this.d.set(0,v);
		var v1 = src.d.get(1);
		this.d.set(1,v1);
		var v2 = src.d.get(2);
		this.d.set(2,v2);
		var v3 = src.d.get(3);
		this.d.set(3,v3);
	}
	,equals: function(o) {
		if(this.d.get(0) == o.d.get(0) && this.d.get(1) == o.d.get(1) && this.d.get(2) == o.d.get(2)) {
			return this.d.get(3) == o.d.get(3);
		} else {
			return false;
		}
	}
	,contains: function(ox,oy) {
		if(ox > this.d.get(0) && ox < this.d.get(0) + this.d.get(2)) {
			if(oy > this.d.get(1)) {
				return oy < this.d.get(1) + this.d.get(3);
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,containsPoint: function(p) {
		return this.contains(p.d.get(0),p.d.get(1));
	}
	,getCorners: function() {
		return [new tannus_geom2_Point(this.d.get(0),this.d.get(1)),new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1)),new tannus_geom2_Point(this.d.get(0),this.d.get(1) + this.d.get(3)),new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1) + this.d.get(3))];
	}
	,containsRect: function(o) {
		var ocl = o.getCorners();
		var _g = 0;
		while(_g < ocl.length) {
			var p = ocl[_g];
			++_g;
			if(!this.contains(p.d.get(0),p.d.get(1))) {
				return false;
			}
		}
		return true;
	}
	,overlapsWith: function(o) {
		var ocl = o.getCorners();
		var p = o.get_center();
		if(this.contains(p.d.get(0),p.d.get(1))) {
			return true;
		} else {
			var _g = 0;
			var _g1 = o.getCorners();
			while(_g < _g1.length) {
				var p1 = _g1[_g];
				++_g;
				if(this.contains(p1.d.get(0),p1.d.get(1))) {
					return true;
				}
			}
			return false;
		}
	}
	,enlarge: function(dw,dh) {
		var _g = this;
		var v = _g.d.get(2) + dw;
		_g.d.set(2,v);
		var _g1 = this;
		var v1 = _g1.d.get(3) + dh;
		_g1.d.set(3,v1);
		var _g2 = this;
		var v2 = _g2.d.get(0);
		_g2.d.set(0,v2 - Math.round(dw / 2));
		var _g3 = this;
		var v3 = _g3.d.get(1);
		_g3.d.set(1,v3 - Math.round(dh / 2));
	}
	,toString: function() {
		return "Rect(" + Std.string(this.d.get(0)) + ", " + Std.string(this.d.get(1)) + ", " + Std.string(this.d.get(2)) + ", " + Std.string(this.d.get(3)) + ")";
	}
	,toArray: function() {
		return [this.d.get(0),this.d.get(1),this.d.get(2),this.d.get(3)];
	}
	,toRectangle: function() {
		var this1 = new tannus_geom_CRectangle(this.d.get(0),this.d.get(1),this.d.get(2),this.d.get(3));
		return this1;
	}
	,scale: function(sw,sh) {
		if(sw != null) {
			var ratio = sw / this.d.get(2);
			return new tannus_geom2_Rect(this.d.get(0),this.d.get(1),sw,ratio * this.d.get(3));
		} else if(sh != null) {
			var ratio1 = sh / this.d.get(3);
			return new tannus_geom2_Rect(this.d.get(0),this.d.get(1),ratio1 * this.d.get(2),sh);
		} else {
			return new tannus_geom2_Rect(this.d.get(0),this.d.get(1),this.d.get(2),this.d.get(3));
		}
	}
	,round: function() {
		var f = Math.round;
		return new tannus_geom2_Rect(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(2)),f(this.d.get(3)));
	}
	,floor: function() {
		var f = Math.floor;
		return new tannus_geom2_Rect(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(2)),f(this.d.get(3)));
	}
	,ceil: function() {
		var f = Math.ceil;
		return new tannus_geom2_Rect(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(2)),f(this.d.get(3)));
	}
	,apply: function(f) {
		return new tannus_geom2_Rect(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(2)),f(this.d.get(3)));
	}
	,get_x: function() {
		return this.d.get(0);
	}
	,set_x: function(v) {
		return this.d.set(0,v);
	}
	,get_y: function() {
		return this.d.get(1);
	}
	,set_y: function(v) {
		return this.d.set(1,v);
	}
	,get_width: function() {
		return this.d.get(2);
	}
	,set_width: function(v) {
		return this.d.set(2,v);
	}
	,get_height: function() {
		return this.d.get(3);
	}
	,set_height: function(v) {
		return this.d.set(3,v);
	}
	,get_w: function() {
		return this.d.get(2);
	}
	,set_w: function(v) {
		return this.d.set(2,v);
	}
	,get_h: function() {
		return this.d.get(3);
	}
	,set_h: function(v) {
		return this.d.set(3,v);
	}
	,get_topLeft: function() {
		return new tannus_geom2_Point(this.d.get(0),this.d.get(1));
	}
	,set_topLeft: function(p) {
		var v = p.d.get(0);
		this.d.set(0,v);
		var v1 = p.d.get(1);
		this.d.set(1,v1);
		return new tannus_geom2_Point(this.d.get(0),this.d.get(1));
	}
	,get_topRight: function() {
		return new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1));
	}
	,set_topRight: function(p) {
		var v = p.d.get(0) - this.d.get(2);
		this.d.set(0,v);
		var v1 = p.d.get(1);
		this.d.set(1,v1);
		return new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1));
	}
	,get_bottomLeft: function() {
		return new tannus_geom2_Point(this.d.get(0),this.d.get(1) + this.d.get(3));
	}
	,set_bottomLeft: function(p) {
		var v = p.d.get(0);
		this.d.set(0,v);
		var v1 = p.d.get(1) - this.d.get(3);
		this.d.set(1,v1);
		return new tannus_geom2_Point(this.d.get(0),this.d.get(1) + this.d.get(3));
	}
	,get_bottomRight: function() {
		return new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1) + this.d.get(3));
	}
	,set_bottomRight: function(p) {
		var v = p.d.get(0) - this.d.get(2);
		this.d.set(0,v);
		var v1 = p.d.get(1) - this.d.get(3);
		this.d.set(1,v1);
		return new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1) + this.d.get(3));
	}
	,get_centerX: function() {
		return this.d.get(0) + this.d.get(2) / 2;
	}
	,set_centerX: function(v) {
		var v1 = Math.round(v - this.d.get(2) / 2);
		this.d.set(0,v1);
		return this.d.get(0) + this.d.get(2) / 2;
	}
	,get_centerY: function() {
		return this.d.get(1) + this.d.get(3) / 2;
	}
	,set_centerY: function(v) {
		var v1 = Math.round(v - this.d.get(3) / 2);
		this.d.set(1,v1);
		return this.d.get(1) + this.d.get(3) / 2;
	}
	,get_center: function() {
		var _gthis = this;
		var z = 0;
		var this1 = function() {
			return _gthis.d.get(0) + _gthis.d.get(2) / 2;
		};
		var this2 = function(v) {
			return _gthis.set_centerX(v);
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		var this4 = function() {
			return _gthis.d.get(1) + _gthis.d.get(3) / 2;
		};
		var this5 = function(v1) {
			return _gthis.set_centerY(v1);
		};
		var this6 = new tannus_io__$Pointer_Ref(this4,this5);
		var this7 = function() {
			return z;
		};
		var this8 = function(v2) {
			z = v2;
			return z;
		};
		var this9 = new tannus_io__$Pointer_Ref(this7,this8);
		return new tannus_geom2_LinkedPoint(this3,this6,this9);
	}
	,set_center: function(v) {
		this.set_centerX(v.d.get(0));
		this.set_centerY(v.d.get(1));
		return this.get_center();
	}
	,d: null
	,__class__: tannus_geom2_Rect
	,__properties__: {set_center:"set_center",get_center:"get_center",set_centerY:"set_centerY",get_centerY:"get_centerY",set_centerX:"set_centerX",get_centerX:"get_centerX",set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_bottomLeft:"set_bottomLeft",get_bottomLeft:"get_bottomLeft",set_topRight:"set_topRight",get_topRight:"get_topRight",set_topLeft:"set_topLeft",get_topLeft:"get_topLeft",set_h:"set_h",get_h:"get_h",set_w:"set_w",get_w:"get_w",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var tannus_graphics__$Color_Color_$Impl_$ = {};
$hxClasses["tannus.graphics._Color.Color_Impl_"] = tannus_graphics__$Color_Color_$Impl_$;
tannus_graphics__$Color_Color_$Impl_$.__name__ = ["tannus","graphics","_Color","Color_Impl_"];
tannus_graphics__$Color_Color_$Impl_$._new = function(r,g,b,a) {
	if(b == null) {
		b = 0;
	}
	if(g == null) {
		g = 0;
	}
	if(r == null) {
		r = 0;
	}
	var this1 = new tannus_graphics__$Color_TColor(r,g,b,a);
	return this1;
};
tannus_graphics__$Color_Color_$Impl_$.clone = function(this1) {
	return this1.clone();
};
tannus_graphics__$Color_Color_$Impl_$.equals = function(this1,other) {
	return this1.equals(other);
};
tannus_graphics__$Color_Color_$Impl_$.invert = function(this1) {
	return this1.invert();
};
tannus_graphics__$Color_Color_$Impl_$.mix = function(this1,other,ratio) {
	return this1.mix(other,ratio);
};
tannus_graphics__$Color_Color_$Impl_$.lighten = function(this1,amount) {
	return this1.lighten(amount);
};
tannus_graphics__$Color_Color_$Impl_$.darken = function(this1,amount) {
	return this1.darken(amount);
};
tannus_graphics__$Color_Color_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_graphics__$Color_Color_$Impl_$.toByteArray = function(this1) {
	var s = this1.toString();
	return new tannus_io_impl_NodeBinary(s.length,new Buffer(s));
};
tannus_graphics__$Color_Color_$Impl_$.toInt = function(this1) {
	return this1.toInt();
};
tannus_graphics__$Color_Color_$Impl_$.fromInt = function(color) {
	var this1 = new tannus_graphics__$Color_TColor(color >> 16 & 255,color >> 8 & 255,color & 255,null);
	return this1;
};
tannus_graphics__$Color_Color_$Impl_$.fromString = function(s) {
	return tannus_graphics__$Color_TColor.fromString(s);
};
tannus_graphics__$Color_Color_$Impl_$._linked = function(r,g,b,a) {
	return new tannus_graphics_LinkedColor(r,g,b,a);
};
var tannus_graphics__$Color_TColor = $hx_exports["Color"] = function(r,g,b,a,noset) {
	if(noset == null) {
		noset = false;
	}
	if(b == null) {
		b = 0;
	}
	if(g == null) {
		g = 0;
	}
	if(r == null) {
		r = 0;
	}
	if(!noset) {
		this.set_red(r);
		this.set_green(g);
		this.set_blue(b);
		this.set_alpha(a);
	}
};
$hxClasses["tannus.graphics._Color.TColor"] = tannus_graphics__$Color_TColor;
tannus_graphics__$Color_TColor.__name__ = ["tannus","graphics","_Color","TColor"];
tannus_graphics__$Color_TColor.__interfaces__ = [tannus_ds_Comparable];
tannus_graphics__$Color_TColor.fromString = function(_s) {
	if(StringTools.startsWith(_s,"#")) {
		var s = StringTools.replace(_s,"#","");
		var _g = s.length;
		switch(_g) {
		case 3:
			var parts = [];
			var chars = s.split("");
			parts.push(chars.shift());
			parts.push(chars.shift());
			parts.push(chars.shift());
			parts = parts.map(function(c) {
				return c + c;
			});
			var channels = [];
			var _g1 = 0;
			while(_g1 < parts.length) {
				var part = parts[_g1];
				++_g1;
				var channel = Std.parseInt("0x" + part);
				channels.push(channel);
			}
			return new tannus_graphics__$Color_TColor(channels[0],channels[1],channels[2]);
		case 6:
			var parts1 = [];
			var chars1 = s.split("");
			parts1.push(chars1.shift() + chars1.shift());
			parts1.push(chars1.shift() + chars1.shift());
			parts1.push(chars1.shift() + chars1.shift());
			var channels1 = [];
			var _g2 = 0;
			while(_g2 < parts1.length) {
				var part1 = parts1[_g2];
				++_g2;
				var channel1 = Std.parseInt("0x" + part1);
				channels1.push(channel1);
			}
			return new tannus_graphics__$Color_TColor(channels1[0],channels1[1],channels1[2]);
		default:
			throw new js__$Boot_HaxeError("ColorError: Cannot create Color from \"" + s + "\"!");
		}
	} else {
		var s1 = _s;
		var rgb = new EReg("rgb\\( ?([0-9]+), ?([0-9]+), ?([0-9]+) ?\\)","i");
		var rgba = new EReg("rgba\\( ?([0-9]+), ?([0-9]+), ?([0-9]+), ?([0-9]+) ?\\)","i");
		if(rgb.match(s1)) {
			var data = tannus_io__$RegEx_RegEx_$Impl_$.matches(rgb,s1)[0];
			console.log(data);
			var i = function(x) {
				return Std.parseInt(x);
			};
			return new tannus_graphics__$Color_TColor(i(data[1]),i(data[2]),i(data[3]));
		} else if(rgba.match(s1)) {
			var data1 = tannus_io__$RegEx_RegEx_$Impl_$.matches(rgba,s1)[0];
			console.log(data1);
			var i1 = function(x1) {
				return Std.parseInt(x1);
			};
			return new tannus_graphics__$Color_TColor(i1(data1[1]),i1(data1[2]),i1(data1[3]),i1(data1[4]));
		} else {
			throw new js__$Boot_HaxeError("ColorError: Cannot create Color from \"" + s1 + "\"!");
		}
	}
};
tannus_graphics__$Color_TColor.fromInt = function(color) {
	var this1 = new tannus_graphics__$Color_TColor(color >> 16 & 255,color >> 8 & 255,color & 255,null);
	return this1;
};
tannus_graphics__$Color_TColor.hex = function(val,digits) {
	return StringTools.hex(val,digits);
};
tannus_graphics__$Color_TColor.prototype = {
	clone: function() {
		return new tannus_graphics__$Color_TColor(this.get_red(),this.get_green(),this.get_blue(),this.get_alpha());
	}
	,copyFrom: function(other) {
		this.set_red(other.get_red());
		this.set_green(other.get_green());
		this.set_blue(other.get_blue());
		this.set_alpha(other.get_alpha());
	}
	,equals: function(other) {
		if(this.get_red() == other.get_red() && this.get_green() == other.get_green() && this.get_blue() == other.get_blue()) {
			if(this.get_alpha() != null) {
				return this.get_alpha() == other.get_alpha();
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,mix: function(t,weight) {
		var ratio = weight / 100;
		var a = this.get_red();
		var tmp = a + ratio * (t.get_red() - a) | 0;
		var a1 = this.get_green();
		var tmp1 = a1 + ratio * (t.get_green() - a1) | 0;
		var a2 = this.get_blue();
		return new tannus_graphics__$Color_TColor(tmp,tmp1,a2 + ratio * (t.get_blue() - a2) | 0,this.get_alpha());
	}
	,toString: function() {
		if(this.get_alpha() == null) {
			var out = "#";
			out += tannus_graphics__$Color_TColor.hex(this.get_red(),2);
			out += tannus_graphics__$Color_TColor.hex(this.get_green(),2);
			out += tannus_graphics__$Color_TColor.hex(this.get_blue(),2);
			return out;
		} else {
			var out1 = "rgba(" + this.get_red() + ", " + this.get_green() + ", " + this.get_blue() + ", " + tannus_math_TMath.roundFloat(tannus_math__$Percent_Percent_$Impl_$.percent(this.get_alpha(),255) / 100,2) + ")";
			return out1;
		}
	}
	,toInt: function() {
		if(this.get_alpha() == null) {
			return Math.round(this.get_red()) << 16 | Math.round(this.get_green()) << 8 | Math.round(this.get_blue());
		} else {
			return Math.round(this.get_red()) << 16 | Math.round(this.get_green()) << 8 | Math.round(this.get_blue()) | Math.round(this.get_alpha()) << 24;
		}
	}
	,lighten: function(amount) {
		var col = this.clone();
		var red = col.get_red() * (100 + amount) / 100 | 0;
		var green = col.get_green() * (100 + amount) / 100 | 0;
		var blue = col.get_blue() * (100 + amount) / 100 | 0;
		col.set_red(red);
		col.set_green(green);
		col.set_blue(blue);
		return col;
	}
	,darken: function(amount) {
		return this.lighten(0 - amount);
	}
	,invert: function() {
		return new tannus_graphics__$Color_TColor(255 - this.get_red(),255 - this.get_green(),255 - this.get_blue(),this.get_alpha());
	}
	,luminance: function() {
		return 0.2126 * this.get_red() + 0.7152 * this.get_green() + 0.0722 * this.get_blue();
	}
	,brightness: function() {
		return (this.get_red() * 299 + this.get_green() * 587 + this.get_blue() * 114) / 1000 | 0;
	}
	,toHsl: function() {
		var chan = [this.get_red(),this.get_green(),this.get_blue()].map(function(x) {
			return x / 255.0;
		});
		var r = chan[0];
		var g = chan[1];
		var b = chan[2];
		var cmax = tannus_ds_ArrayTools.max(chan,function(n) {
			return n;
		});
		var cmin = tannus_ds_ArrayTools.min(chan,function(n1) {
			return n1;
		});
		var l = (cmax + cmin) / 2;
		var h;
		var s;
		if(cmax == cmin) {
			s = 0;
			h = s;
		} else {
			var d = cmax - cmin;
			if(d > 0.5) {
				s = d / (2 - cmax - cmin);
			} else {
				s = d / (cmax + cmin);
			}
			if(cmax == r) {
				h = (g - b) / d + (g < b ? 6 : 0);
			} else if(cmax == g) {
				h = (b - r) / d + 2;
			} else if(cmax == b) {
				h = (r - g) / d + 4;
			} else {
				h = 0;
			}
			h /= 6;
		}
		return { "hue" : h, "saturation" : s, "lightness" : l};
	}
	,getXYZ: function() {
		var vals = [this.get_red(),this.get_green(),this.get_blue()].map(function(x) {
			return x / 255;
		});
		vals = vals.map(function(x1) {
			if(x1 > 0.04045) {
				return Math.pow((x1 + 0.0555) / 1.055,2.4);
			} else {
				return x1 / 12.92;
			}
		});
		vals = vals.map(function(x2) {
			return x2 * 100;
		});
		var r = vals[0];
		var g = vals[1];
		var b = vals[2];
		var x3 = r * 0.4124 + g * 0.3576 + b * 0.1805;
		var y = r * 0.2126 + g * 0.7152 + b * 0.0722;
		var z = r * 0.0193 + g * 0.1192 + b * 0.9505;
		var this1 = new tannus_geom_TPoint(x3,y,z);
		return this1;
	}
	,getLab: function() {
		var p = this.getXYZ();
		var vals = [p.get_x() / 95.047,p.get_y() / 100,p.get_z() / 108.883];
		vals = vals.map(function(x) {
			if(x > 0.008856) {
				return Math.pow(x,0.333333333333333315);
			} else {
				return 7.787 * x + 0.137931034482758619;
			}
		});
		var l = 116 * vals[1] - 16;
		var a = 500 * (vals[0] - vals[1]);
		var b = 200 * (vals[1] - vals[2]);
		return { "l" : l, "a" : a, "b" : b};
	}
	,cie1994: function(other) {
		var x = this.getLab();
		var y = other.getLab();
		var k2 = 0.015;
		var k1 = 0.045;
		var kl = 1;
		var kh = 1;
		var kc = 1;
		var c1 = Math.sqrt(x.a * x.a + x.b * x.b);
		var c2 = Math.sqrt(y.a * y.a + y.b * y.b);
		var sh = 1 + k2 * c1;
		var sc = 1 + k1 * c1;
		var sl = 1;
		var da = x.a - y.a;
		var db = x.b - y.b;
		var dc = c1 - c2;
		var dl = x.l - y.l;
		var dh = Math.sqrt(Math.pow(da,2) + Math.pow(db,2) + Math.pow(dc,2));
		return Math.sqrt(Math.pow(dl / (kl * sl),2) + Math.pow(dc / (kc * sc),2) + Math.pow(dh / (kh * sh),2)) / 10;
	}
	,greyscale: function() {
		var gray = this.clone();
		var values = [gray.get_red(),gray.get_green(),gray.get_blue()];
		var sum = 0;
		var _g = 0;
		while(_g < values.length) {
			var n = values[_g];
			++_g;
			sum += n;
		}
		var avg = sum / values.length | 0;
		gray.set_channels([avg,avg,avg]);
		return gray;
	}
	,bound: function(n,max) {
		if(Math.abs(n - max) < 0.000001) {
			return 1;
		}
		return n % max / (max + 0.0) | 0;
	}
	,get_red: function() {
		return this._red;
	}
	,set_red: function(v) {
		return this._red = v < 0 ? 0 : v > 255 ? 255 : v;
	}
	,get_green: function() {
		return this._green;
	}
	,set_green: function(v) {
		return this._green = v < 0 ? 0 : v > 255 ? 255 : v;
	}
	,get_blue: function() {
		return this._blue;
	}
	,set_blue: function(v) {
		return this._blue = v < 0 ? 0 : v > 255 ? 255 : v;
	}
	,get_alpha: function() {
		return this._alpha;
	}
	,set_alpha: function(v) {
		return this._alpha = v != null ? v < 0 ? 0 : v > 255 ? 255 : v : null;
	}
	,get_channels: function() {
		return [this.get_red(),this.get_green(),this.get_blue()];
	}
	,set_channels: function(v) {
		this.set_red(v[0]);
		this.set_green(v[1]);
		this.set_blue(v[2]);
		return [this.get_red(),this.get_green(),this.get_blue()];
	}
	,_red: null
	,_green: null
	,_blue: null
	,_alpha: null
	,__class__: tannus_graphics__$Color_TColor
	,__properties__: {set_channels:"set_channels",get_channels:"get_channels",set_alpha:"set_alpha",get_alpha:"get_alpha",set_blue:"set_blue",get_blue:"get_blue",set_green:"set_green",get_green:"get_green",set_red:"set_red",get_red:"get_red"}
};
var tannus_graphics_LinkedColor = function(r,g,b,a) {
	tannus_graphics__$Color_TColor.call(this,0,0,0,null,true);
	var _v = null;
	var this1 = function() {
		return _v;
	};
	var this2 = function(v) {
		_v = v;
		return _v;
	};
	var this3 = new tannus_io__$Pointer_Ref(this1,this2);
	this._a = this3;
	this._r = r;
	this._g = g;
	this._b = b;
	if(a != null) {
		this._a = a;
	}
};
$hxClasses["tannus.graphics.LinkedColor"] = tannus_graphics_LinkedColor;
tannus_graphics_LinkedColor.__name__ = ["tannus","graphics","LinkedColor"];
tannus_graphics_LinkedColor.__super__ = tannus_graphics__$Color_TColor;
tannus_graphics_LinkedColor.prototype = $extend(tannus_graphics__$Color_TColor.prototype,{
	get_red: function() {
		return ($_=this._r,$bind($_,$_.get))();
	}
	,set_red: function(v) {
		return ($_=this._r,$bind($_,$_.set))(v < 0 ? 0 : v > 255 ? 255 : v);
	}
	,get_green: function() {
		return ($_=this._g,$bind($_,$_.get))();
	}
	,set_green: function(v) {
		return ($_=this._g,$bind($_,$_.set))(v < 0 ? 0 : v > 255 ? 255 : v);
	}
	,get_blue: function() {
		return ($_=this._b,$bind($_,$_.get))();
	}
	,set_blue: function(v) {
		return ($_=this._b,$bind($_,$_.set))(v < 0 ? 0 : v > 255 ? 255 : v);
	}
	,get_alpha: function() {
		return ($_=this._a,$bind($_,$_.get))();
	}
	,set_alpha: function(v) {
		return ($_=this._a,$bind($_,$_.set))(v < 0 ? 0 : v > 255 ? 255 : v);
	}
	,_r: null
	,_g: null
	,_b: null
	,_a: null
	,__class__: tannus_graphics_LinkedColor
});
var tannus_html__$ElAttributes_ElAttributes_$Impl_$ = {};
$hxClasses["tannus.html._ElAttributes.ElAttributes_Impl_"] = tannus_html__$ElAttributes_ElAttributes_$Impl_$;
tannus_html__$ElAttributes_ElAttributes_$Impl_$.__name__ = ["tannus","html","_ElAttributes","ElAttributes_Impl_"];
tannus_html__$ElAttributes_ElAttributes_$Impl_$.__properties__ = {get_el:"get_el",get_elem:"get_elem"}
tannus_html__$ElAttributes_ElAttributes_$Impl_$._new = function(ref) {
	var this1 = ref;
	return this1;
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.reference = function(this1,name) {
	return tannus_html_ElAttr.fromAttr(this1().get(0).attributes.getNamedItem(name));
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.get = function(this1,name) {
	return this1().attr(name);
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.set = function(this1,name,value) {
	this1().attr(name,Std.string(value));
	return tannus_html__$ElAttributes_ElAttributes_$Impl_$.get(this1,name);
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.remove = function(this1,name) {
	var had = this1().get(0).hasAttribute(name);
	this1().removeAttr(name);
	return had;
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.exists = function(this1,name) {
	return this1().get(0).hasAttribute(name);
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.iterator = function(this1) {
	return new tannus_html_ElAttrIter(this1);
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.names = function(this1) {
	return new tannus_html_ElAttrNameIter(this1);
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.writeObject = function(this1,o) {
	var _g = 0;
	var this2 = o;
	var _g1 = Reflect.fields(this2).map(function(k) {
		var tmp;
		var _g11;
		if(this2 == null) {
			_g11 = null;
		} else {
			var _g12;
			if(this2.__properties__) {
				tmp = this2.__properties__["get_" + k];
				_g12 = tmp;
			} else {
				_g12 = false;
			}
			if(_g12) {
				_g11 = this2[tmp]();
			} else {
				_g11 = this2[k];
			}
		}
		return { "name" : k, "value" : _g11};
	});
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		tannus_html__$Element_Element_$Impl_$.set(this1(),p.name,Std.string(p.value));
	}
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.toObject = function(this1) {
	var this2 = { };
	var o = this2;
	var list = this1().get(0).attributes;
	var _g1 = 0;
	var _g = list.length;
	while(_g1 < _g) {
		var i = _g1++;
		var p = list.item(i);
		var key = p.name;
		var value = p.value;
		var tmp;
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["set_" + key];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			o[tmp](value);
		} else {
			o[key] = value;
		}
		var tmp2;
		if(o == null) {
			null;
		} else {
			var tmp3;
			if(o.__properties__) {
				tmp2 = o.__properties__["get_" + key];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				o[tmp2]();
			}
		}
	}
	return o;
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.get_elem = function(this1) {
	return this1();
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.get_el = function(this1) {
	return this1().get(0);
};
var tannus_html_ElAttrIter = function(e) {
	this.a = e().get(0).attributes;
	this.i = new IntIterator(0,this.a.length);
};
$hxClasses["tannus.html.ElAttrIter"] = tannus_html_ElAttrIter;
tannus_html_ElAttrIter.__name__ = ["tannus","html","ElAttrIter"];
tannus_html_ElAttrIter.prototype = {
	hasNext: function() {
		var _this = this.i;
		return _this.min < _this.max;
	}
	,next: function() {
		return tannus_html_ElAttr.fromAttr(this.a.item(this.i.min++));
	}
	,a: null
	,i: null
	,__class__: tannus_html_ElAttrIter
};
var tannus_html_ElAttrNameIter = function(e) {
	this.a = e().get(0).attributes;
	this.i = new IntIterator(0,this.a.length);
};
$hxClasses["tannus.html.ElAttrNameIter"] = tannus_html_ElAttrNameIter;
tannus_html_ElAttrNameIter.__name__ = ["tannus","html","ElAttrNameIter"];
tannus_html_ElAttrNameIter.prototype = {
	hasNext: function() {
		var _this = this.i;
		return _this.min < _this.max;
	}
	,next: function() {
		return this.a.item(this.i.min++).name;
	}
	,a: null
	,i: null
	,__class__: tannus_html_ElAttrNameIter
};
var tannus_html_ElAttr = function(n,v) {
	this.name = n;
	this.val = v;
};
$hxClasses["tannus.html.ElAttr"] = tannus_html_ElAttr;
tannus_html_ElAttr.__name__ = ["tannus","html","ElAttr"];
tannus_html_ElAttr.fromAttr = function(p) {
	var p1 = p.name;
	var this1 = function() {
		return p.value;
	};
	var this2 = function(v) {
		return p.value = v;
	};
	var this3 = new tannus_io__$Pointer_Ref(this1,this2);
	return new tannus_html_ElAttr(p1,this3);
};
tannus_html_ElAttr.prototype = {
	get: function() {
		return ($_=this.val,$bind($_,$_.get))();
	}
	,set: function(v) {
		return ($_=this.val,$bind($_,$_.set))(v);
	}
	,'delete': function() {
		this.val["delete"]();
	}
	,name: null
	,val: null
	,__class__: tannus_html_ElAttr
};
var tannus_html__$ElData_ElData_$Impl_$ = {};
$hxClasses["tannus.html._ElData.ElData_Impl_"] = tannus_html__$ElData_ElData_$Impl_$;
tannus_html__$ElData_ElData_$Impl_$.__name__ = ["tannus","html","_ElData","ElData_Impl_"];
tannus_html__$ElData_ElData_$Impl_$.__properties__ = {get_self:"get_self",get_data:"get_data",get_elem:"get_elem"}
tannus_html__$ElData_ElData_$Impl_$._new = function(ref) {
	var this1 = ref;
	return this1;
};
tannus_html__$ElData_ElData_$Impl_$.get = function(this1,key) {
	var this2 = this1().data();
	var tmp;
	var tmp1;
	if(this2 == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(this2.__properties__) {
			tmp = this2.__properties__["get_" + key];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = this2[tmp]();
		} else {
			tmp1 = this2[key];
		}
	}
	return tmp1;
};
tannus_html__$ElData_ElData_$Impl_$.set = function(this1,key,value) {
	var this2 = this1().data();
	var tmp;
	var tmp1;
	if(this2.__properties__) {
		tmp = this2.__properties__["set_" + key];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		this2[tmp](value);
	} else {
		this2[key] = value;
	}
	var tmp2;
	var tmp3;
	if(this2 == null) {
		tmp3 = null;
	} else {
		var tmp4;
		if(this2.__properties__) {
			tmp2 = this2.__properties__["get_" + key];
			tmp4 = tmp2;
		} else {
			tmp4 = false;
		}
		if(tmp4) {
			tmp3 = this2[tmp2]();
		} else {
			tmp3 = this2[key];
		}
	}
	return tmp3;
};
tannus_html__$ElData_ElData_$Impl_$.exists = function(this1,key) {
	var this2 = this1().data();
	var tmp;
	var tmp1;
	if(this2 == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(this2.__properties__) {
			tmp = this2.__properties__["get_" + key];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = this2[tmp]();
		} else {
			tmp1 = this2[key];
		}
	}
	return tmp1 != null;
};
tannus_html__$ElData_ElData_$Impl_$.reference = function(this1,key) {
	var this2 = function() {
		var this3 = this1;
		var this4 = this3().data();
		var tmp;
		var this5;
		if(this4 == null) {
			this5 = null;
		} else {
			var this6;
			if(this4.__properties__) {
				tmp = this4.__properties__["get_" + key];
				this6 = tmp;
			} else {
				this6 = false;
			}
			if(this6) {
				this5 = this4[tmp]();
			} else {
				this5 = this4[key];
			}
		}
		return this5;
	};
	var this7 = function(v) {
		var this8 = this1;
		var this9 = this8().data();
		var tmp1;
		var this10;
		if(this9.__properties__) {
			tmp1 = this9.__properties__["set_" + key];
			this10 = tmp1;
		} else {
			this10 = false;
		}
		if(this10) {
			this9[tmp1](v);
		} else {
			var this11 = v;
			this9[key] = this11;
		}
		var tmp2;
		var this12;
		if(this9 == null) {
			this12 = null;
		} else {
			var this13;
			if(this9.__properties__) {
				tmp2 = this9.__properties__["get_" + key];
				this13 = tmp2;
			} else {
				this13 = false;
			}
			if(this13) {
				this12 = this9[tmp2]();
			} else {
				this12 = this9[key];
			}
		}
		return this12;
	};
	var this14 = new tannus_io__$Pointer_Ref(this2,this7);
	return this14;
};
tannus_html__$ElData_ElData_$Impl_$.get_elem = function(this1) {
	return this1();
};
tannus_html__$ElData_ElData_$Impl_$.get_data = function(this1) {
	return this1().data();
};
tannus_html__$ElData_ElData_$Impl_$.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
var tannus_html__$ElStyles_ElStyles_$Impl_$ = {};
$hxClasses["tannus.html._ElStyles.ElStyles_Impl_"] = tannus_html__$ElStyles_ElStyles_$Impl_$;
tannus_html__$ElStyles_ElStyles_$Impl_$.__name__ = ["tannus","html","_ElStyles","ElStyles_Impl_"];
tannus_html__$ElStyles_ElStyles_$Impl_$._new = function(e) {
	var this1 = new tannus_html_CElStyles(e);
	return this1;
};
tannus_html__$ElStyles_ElStyles_$Impl_$.get = function(this1,name) {
	return this1.get(name);
};
tannus_html__$ElStyles_ElStyles_$Impl_$.set = function(this1,name,value) {
	return this1.set(name,value);
};
tannus_html__$ElStyles_ElStyles_$Impl_$.fromElement = function(e) {
	return tannus_html__$Element_Element_$Impl_$.get_style(e);
};
tannus_html__$ElStyles_ElStyles_$Impl_$.create = function(elem) {
	var key = "__tannus_styles";
	var tmp;
	var css;
	if(elem == null) {
		css = null;
	} else {
		var css1;
		if(elem.__properties__) {
			tmp = elem.__properties__["get_" + key];
			css1 = tmp;
		} else {
			css1 = false;
		}
		if(css1) {
			css = elem[tmp]();
		} else {
			css = elem[key];
		}
	}
	var css2 = css;
	if(css2 == null) {
		var this1 = new tannus_html_CElStyles(elem);
		css2 = this1;
		var value = css2;
		var tmp1;
		var tmp2;
		if(elem.__properties__) {
			tmp1 = elem.__properties__["set_" + key];
			tmp2 = tmp1;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			elem[tmp1](value);
		} else {
			elem[key] = value;
		}
	}
	return css2;
};
var tannus_html_CElStyles = function(e) {
	this.elem = e;
};
$hxClasses["tannus.html.CElStyles"] = tannus_html_CElStyles;
tannus_html_CElStyles.__name__ = ["tannus","html","CElStyles"];
tannus_html_CElStyles.prototype = {
	get: function(name) {
		return this.elem.css(name);
	}
	,set: function(name,value) {
		this.elem.css(name,value);
		return this.get(name);
	}
	,exists: function(name) {
		return this.get(name) != null;
	}
	,reference: function(name) {
		var this1;
		var f = $bind(this,this.get);
		var a1 = name;
		var f1 = $bind(this,this.set);
		var a11 = name;
		this1 = new tannus_io__$Pointer_Ref(function() {
			return f(a1);
		},function(a2) {
			return f1(a11,a2);
		});
		return this1;
	}
	,values: function(name) {
		var s = this.get(name);
		if(s != null) {
			return new tannus_css_vals_Lexer().parse(new tannus_io_impl_NodeBinary(s.length,new Buffer(s)));
		} else {
			return [];
		}
	}
	,pluck: function(names) {
		var this1 = { };
		var o = this1;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			var value = this.get(name);
			var tmp;
			var tmp1;
			if(o.__properties__) {
				tmp = o.__properties__["set_" + name];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				o[tmp](value);
			} else {
				o[name] = value;
			}
			var tmp2;
			if(o == null) {
				null;
			} else {
				var tmp3;
				if(o.__properties__) {
					tmp2 = o.__properties__["get_" + name];
					tmp3 = tmp2;
				} else {
					tmp3 = false;
				}
				if(tmp3) {
					o[tmp2]();
				}
			}
		}
		return o;
	}
	,gets: function(names) {
		return this.pluck(names);
	}
	,applyMap: function(map) {
		var name = map.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			this.set(name1,Std.string(__map_reserved[name1] != null ? map.getReserved(name1) : map.h[name1]));
		}
	}
	,applyDict: function(map) {
		this.applyMap((js_Boot.__cast(map , tannus_ds_dict_StringDict)).m);
	}
	,applyObject: function(o) {
		var _g = 0;
		var _g1 = Reflect.fields(o);
		while(_g < _g1.length) {
			var name = _g1[_g];
			++_g;
			var tmp;
			var tmp1;
			if(o == null) {
				tmp1 = null;
			} else {
				var tmp2;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + name];
					tmp2 = tmp;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					tmp1 = o[tmp]();
				} else {
					tmp1 = o[name];
				}
			}
			this.set(name,Std.string(tmp1));
		}
	}
	,writeObject: function(o) {
		this.applyObject(o);
	}
	,write: function(o) {
		this.applyObject(o);
	}
	,copy: function(keys,other) {
		this.applyObject(other.pluck(keys));
	}
	,elem: null
	,__class__: tannus_html_CElStyles
};
var tannus_html__$Element_Element_$Impl_$ = {};
$hxClasses["tannus.html._Element.Element_Impl_"] = tannus_html__$Element_Element_$Impl_$;
tannus_html__$Element_Element_$Impl_$.__name__ = ["tannus","html","_Element","Element_Impl_"];
tannus_html__$Element_Element_$Impl_$.__properties__ = {set_scrollPos:"set_scrollPos",get_scrollPos:"get_scrollPos",set_position:"set_position",get_position:"get_position",set_rectangle:"set_rectangle",get_rectangle:"get_rectangle",set_h:"set_h",get_h:"get_h",set_w:"set_w",get_w:"get_w",set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_classes:"set_classes",get_classes:"get_classes",get_edata:"get_edata",get_attributes:"get_attributes",get_style:"get_style",set_text:"set_text",get_text:"get_text",get_removed:"get_removed",get_exists:"get_exists",get_self:"get_self"}
tannus_html__$Element_Element_$Impl_$._new = function(jq) {
	var this1 = $(jq);
	return this1;
};
tannus_html__$Element_Element_$Impl_$.get_self = function(this1) {
	var this2 = $(this1);
	return this2;
};
tannus_html__$Element_Element_$Impl_$.get_exists = function(this1) {
	return this1.length > 0;
};
tannus_html__$Element_Element_$Impl_$.get_removed = function(this1) {
	return this1.closest("body").length < 1;
};
tannus_html__$Element_Element_$Impl_$.get_text = function(this1) {
	return this1.text();
};
tannus_html__$Element_Element_$Impl_$.set_text = function(this1,nt) {
	this1.text(nt);
	return this1.text();
};
tannus_html__$Element_Element_$Impl_$.get_style = function(this1) {
	return tannus_html__$ElStyles_ElStyles_$Impl_$.create(this1);
};
tannus_html__$Element_Element_$Impl_$._cs = function(this1,args) {
	var r = tannus_html__$Element_Element_$Impl_$.cs(this1,args[0],args[1]);
	return r != null ? r : "";
};
tannus_html__$Element_Element_$Impl_$.get_attributes = function(this1) {
	var this2 = function() {
		return this1;
	};
	var this3 = this2;
	return this3;
};
tannus_html__$Element_Element_$Impl_$.get_edata = function(this1) {
	var this2 = function() {
		return this1;
	};
	var this3 = this2;
	return this3;
};
tannus_html__$Element_Element_$Impl_$.get_classes = function(this1) {
	var this2 = this1.attr("class");
	return (this2 != null ? this2 : "").split(" ");
};
tannus_html__$Element_Element_$Impl_$.set_classes = function(this1,cl) {
	tannus_html__$Element_Element_$Impl_$.set(this1,"class",cl.join(" "));
	var this2 = this1.attr("class");
	return (this2 != null ? this2 : "").split(" ");
};
tannus_html__$Element_Element_$Impl_$.cs = function(this1,k,v) {
	if(v != null) {
		this1.css(k,v != null ? v : v);
	}
	return this1.css(k);
};
tannus_html__$Element_Element_$Impl_$.get_x = function(this1) {
	return this1.offset().left;
};
tannus_html__$Element_Element_$Impl_$.set_x = function(this1,nx) {
	tannus_html__$Element_Element_$Impl_$.cs(this1,"left",nx + "px");
	return this1.offset().left;
};
tannus_html__$Element_Element_$Impl_$.get_y = function(this1) {
	return this1.offset().top;
};
tannus_html__$Element_Element_$Impl_$.set_y = function(this1,ny) {
	tannus_html__$Element_Element_$Impl_$.cs(this1,"top",ny + "px");
	return this1.offset().top;
};
tannus_html__$Element_Element_$Impl_$.get_z = function(this1) {
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null ? msz : "0");
	if(isNaN(mz)) {
		mz = 0;
	}
	return mz;
};
tannus_html__$Element_Element_$Impl_$.set_z = function(this1,nz) {
	tannus_html__$Element_Element_$Impl_$.cs(this1,"z-index",nz + "");
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null ? msz : "0");
	if(isNaN(mz)) {
		mz = 0;
	}
	return mz;
};
tannus_html__$Element_Element_$Impl_$.get_w = function(this1) {
	return this1.width();
};
tannus_html__$Element_Element_$Impl_$.set_w = function(this1,v) {
	this1.width(Math.round(v));
	return this1.width();
};
tannus_html__$Element_Element_$Impl_$.get_h = function(this1) {
	return this1.height();
};
tannus_html__$Element_Element_$Impl_$.set_h = function(this1,v) {
	this1.height(Math.round(v));
	return this1.height();
};
tannus_html__$Element_Element_$Impl_$.get_rectangle = function(this1) {
	var this2 = new tannus_geom_CRectangle(this1.offset().left,this1.offset().top,this1.width(),this1.height());
	var r = this2;
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null ? msz : "0");
	if(isNaN(mz)) {
		mz = 0;
	}
	r.z = mz;
	return r;
};
tannus_html__$Element_Element_$Impl_$.set_rectangle = function(this1,nr) {
	tannus_html__$Element_Element_$Impl_$.cs(this1,"left",nr.x + "px");
	this1.offset();
	tannus_html__$Element_Element_$Impl_$.cs(this1,"top",nr.y + "px");
	this1.offset();
	tannus_html__$Element_Element_$Impl_$.cs(this1,"z-index",nr.z + "");
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null ? msz : "0");
	if(isNaN(mz)) {
		mz = 0;
	}
	this1.width(Math.round(nr.width));
	this1.width();
	this1.height(Math.round(nr.height));
	this1.height();
	return tannus_html__$Element_Element_$Impl_$.get_rectangle(this1);
};
tannus_html__$Element_Element_$Impl_$.get_position = function(this1) {
	var x = this1.offset().left;
	var y = this1.offset().top;
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null ? msz : "0");
	if(isNaN(mz)) {
		mz = 0;
	}
	var this2 = new tannus_geom_TPoint(x,y,mz);
	return this2;
};
tannus_html__$Element_Element_$Impl_$.set_position = function(this1,np) {
	tannus_html__$Element_Element_$Impl_$.cs(this1,"left",np.get_x() + "px");
	this1.offset();
	tannus_html__$Element_Element_$Impl_$.cs(this1,"top",np.get_y() + "px");
	this1.offset();
	tannus_html__$Element_Element_$Impl_$.cs(this1,"z-index",np.get_z() + "");
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null ? msz : "0");
	if(isNaN(mz)) {
		mz = 0;
	}
	var x = this1.offset().left;
	var y = this1.offset().top;
	var msz1 = this1.css("z-index");
	var mz1 = parseFloat(msz1 != null ? msz1 : "0");
	if(isNaN(mz1)) {
		mz1 = 0;
	}
	var this2 = new tannus_geom_TPoint(x,y,mz1);
	return this2;
};
tannus_html__$Element_Element_$Impl_$.get_scrollPos = function(this1) {
	var this2 = new tannus_geom_TPoint(this1.scrollLeft(),this1.scrollTop(),0);
	return this2;
};
tannus_html__$Element_Element_$Impl_$.set_scrollPos = function(this1,p) {
	this1.scrollLeft(p.get_x() | 0);
	this1.scrollTop(p.get_y() | 0);
	var this2 = new tannus_geom_TPoint(this1.scrollLeft(),this1.scrollTop(),0);
	return this2;
};
tannus_html__$Element_Element_$Impl_$.get = function(this1,key) {
	return this1.attr(key);
};
tannus_html__$Element_Element_$Impl_$.set = function(this1,key,value) {
	this1.attr(key,value);
	return value;
};
tannus_html__$Element_Element_$Impl_$.plugin = function(this1,name,$arguments) {
	if($arguments == null) {
		$arguments = [];
	}
	var tmp;
	var func;
	if(this1 == null) {
		func = null;
	} else {
		var func1;
		if(this1.__properties__) {
			tmp = this1.__properties__["get_" + name];
			func1 = tmp;
		} else {
			func1 = false;
		}
		if(func1) {
			func = this1[tmp]();
		} else {
			func = this1[name];
		}
	}
	return func.apply(this1,$arguments);
};
tannus_html__$Element_Element_$Impl_$.method = function(this1,name) {
	var _e = this1;
	var f = function(func,args) {
		return func.apply(_e,args);
	};
	var tmp;
	var a1;
	if(this1 == null) {
		a1 = null;
	} else {
		var a11;
		if(this1.__properties__) {
			tmp = this1.__properties__["get_" + name];
			a11 = tmp;
		} else {
			a11 = false;
		}
		if(a11) {
			a1 = this1[tmp]();
		} else {
			a1 = this1[name];
		}
	}
	var a12 = a1;
	var _f = Reflect.makeVarArgs(function(a2) {
		return f(a12,a2);
	});
	return _f;
};
tannus_html__$Element_Element_$Impl_$.index = function(this1,child,value) {
	if(value == null) {
		var o = this1.get(0).children;
		return Array.prototype.slice.call(o,0).indexOf(child.get(0));
	} else {
		var o1 = this1.get(0).children;
		child.insertBefore(Array.prototype.slice.call(o1,0)[value]);
		return tannus_html__$Element_Element_$Impl_$.index(this1,child);
	}
};
tannus_html__$Element_Element_$Impl_$.at = function(this1,index) {
	return this1.get(index);
};
tannus_html__$Element_Element_$Impl_$.contains = function(this1,other) {
	return other.closest(this1).length > 0;
};
tannus_html__$Element_Element_$Impl_$.containedBy = function(this1,other) {
	return this1.closest(other).length > 0;
};
tannus_html__$Element_Element_$Impl_$.appendElementable = function(this1,child) {
	var this2 = child.toElement();
	var _g = [];
	var _g2 = 0;
	var _g1 = this2.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var this3 = $(this2.get(i));
		_g.push(this3);
	}
	return this1.append(_g);
};
tannus_html__$Element_Element_$Impl_$.prependElementable = function(this1,child) {
	var this2 = child.toElement();
	var _g = [];
	var _g2 = 0;
	var _g1 = this2.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var this3 = $(this2.get(i));
		_g.push(this3);
	}
	return this1.prepend(_g);
};
tannus_html__$Element_Element_$Impl_$.afterElementable = function(this1,child) {
	var this2 = child.toElement();
	var _g = [];
	var _g2 = 0;
	var _g1 = this2.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var this3 = $(this2.get(i));
		_g.push(this3);
	}
	return this1.after(_g);
};
tannus_html__$Element_Element_$Impl_$.beforeElementable = function(this1,child) {
	var this2 = child.toElement();
	var _g = [];
	var _g2 = 0;
	var _g1 = this2.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var this3 = $(this2.get(i));
		_g.push(this3);
	}
	return this1.before(_g);
};
tannus_html__$Element_Element_$Impl_$.addToElement = function(this1,other) {
	return this1.add(other.get(0));
};
tannus_html__$Element_Element_$Impl_$.addToElementArray = function(this1,other) {
	var _g = [];
	var _g2 = 0;
	var _g1 = this1.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var this2 = $(this1.get(i));
		_g.push(this2);
	}
	var els = _g.concat(other);
	var this3 = $("");
	var el = this3;
	var _g3 = 0;
	while(_g3 < els.length) {
		var e = els[_g3];
		++_g3;
		el = el.add(e.get(0));
	}
	return el;
};
tannus_html__$Element_Element_$Impl_$.addToElementable = function(this1,other) {
	return this1.add(other.toElement().get(0));
};
tannus_html__$Element_Element_$Impl_$.subFromElement = function(this1,other) {
	var this2 = $(this1);
	var this3 = this2;
	var _g = [];
	var _g2 = 0;
	var _g1 = other.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var this4 = $(other.get(i));
		_g.push(this4);
	}
	var els = _g;
	var _g3 = [];
	var _g21 = 0;
	var _g11 = this3.length;
	while(_g21 < _g11) {
		var i1 = _g21++;
		var this5 = $(this3.get(i1));
		_g3.push(this5);
	}
	var res = _g3.filter(function(e) {
		return Lambda.has(els,e);
	});
	var this6 = $("");
	var result = this6;
	var _g4 = 0;
	while(_g4 < res.length) {
		var e1 = res[_g4];
		++_g4;
		result = result.add(e1.get(0));
	}
	return result;
};
tannus_html__$Element_Element_$Impl_$.subFromElementArray = function(this1,els) {
	var _g = [];
	var _g2 = 0;
	var _g1 = this1.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var this2 = $(this1.get(i));
		_g.push(this2);
	}
	var res = _g.filter(function(e) {
		return Lambda.has(els,e);
	});
	var this3 = $("");
	var result = this3;
	var _g3 = 0;
	while(_g3 < res.length) {
		var e1 = res[_g3];
		++_g3;
		result = result.add(e1.get(0));
	}
	return result;
};
tannus_html__$Element_Element_$Impl_$.toArray = function(this1) {
	var _g = [];
	var _g2 = 0;
	var _g1 = this1.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var this2 = $(this1.get(i));
		_g.push(this2);
	}
	return _g;
};
tannus_html__$Element_Element_$Impl_$.fromArray = function(els) {
	var this1 = $("");
	var el = this1;
	var _g = 0;
	while(_g < els.length) {
		var e = els[_g];
		++_g;
		el = el.add(e.get(0));
	}
	return el;
};
tannus_html__$Element_Element_$Impl_$.toHTMLElement = function(this1) {
	return this1.get(0);
};
tannus_html__$Element_Element_$Impl_$.fromString = function(q) {
	var this1 = $(q);
	return this1;
};
tannus_html__$Element_Element_$Impl_$.fromDOMElement = function(el) {
	var this1 = $(el);
	return this1;
};
tannus_html__$Element_Element_$Impl_$.extend = function(name,f) {
	var ext = function(args) {
		var self = this;
		args.unshift(self);
		return f.apply(self,args);
	};
	var this1 = window;
	var o = tannus_ds_CObj.create(this1["jQuery"]).o;
	var tmp;
	var d;
	if(o == null) {
		d = null;
	} else {
		var d1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + "fn"];
			d1 = tmp;
		} else {
			d1 = false;
		}
		if(d1) {
			d = o[tmp]();
		} else {
			d = o["fn"];
		}
	}
	tannus_ds_CObj.create(d).set(name,Reflect.makeVarArgs(ext));
};
tannus_html__$Element_Element_$Impl_$.jq = function() {
	var this1 = window;
	return this1["jQuery"];
};
tannus_html__$Element_Element_$Impl_$.jqo = function() {
	var this1 = window;
	return tannus_ds_CObj.create(this1["jQuery"]);
};
tannus_html__$Element_Element_$Impl_$.jqfn = function() {
	var this1 = window;
	var o = tannus_ds_CObj.create(this1["jQuery"]).o;
	var tmp;
	var d;
	if(o == null) {
		d = null;
	} else {
		var d1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + "fn"];
			d1 = tmp;
		} else {
			d1 = false;
		}
		if(d1) {
			d = o[tmp]();
		} else {
			d = o["fn"];
		}
	}
	return tannus_ds_CObj.create(d);
};
var tannus_html__$JSFunction_JSFunction_$Impl_$ = {};
$hxClasses["tannus.html._JSFunction.JSFunction_Impl_"] = tannus_html__$JSFunction_JSFunction_$Impl_$;
tannus_html__$JSFunction_JSFunction_$Impl_$.__name__ = ["tannus","html","_JSFunction","JSFunction_Impl_"];
tannus_html__$JSFunction_JSFunction_$Impl_$.__properties__ = {set_prototype:"set_prototype",get_prototype:"get_prototype"}
tannus_html__$JSFunction_JSFunction_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
tannus_html__$JSFunction_JSFunction_$Impl_$.apply = function(this1,o,args) {
	return this1.apply(o,args);
};
tannus_html__$JSFunction_JSFunction_$Impl_$.bind = function(this1,thisValue) {
	return this1.bind(thisValue);
};
tannus_html__$JSFunction_JSFunction_$Impl_$.get_prototype = function(this1) {
	return this1.prototype;
};
tannus_html__$JSFunction_JSFunction_$Impl_$.set_prototype = function(this1,v) {
	return this1.prototype = v;
};
var tannus_html_JSTools = function() { };
$hxClasses["tannus.html.JSTools"] = tannus_html_JSTools;
tannus_html_JSTools.__name__ = ["tannus","html","JSTools"];
tannus_html_JSTools.arrayify = function(o) {
	return Array.prototype.slice.call(o,0);
};
tannus_html_JSTools.defineGetter = function(o,name,value) {
	var tmp;
	var tmp1;
	if(o == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + "__defineGetter__"];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = o[tmp]();
		} else {
			tmp1 = o["__defineGetter__"];
		}
	}
	tmp1.call(o,name,value);
};
tannus_html_JSTools.defineSetter = function(o,name,value) {
	var tmp;
	var tmp1;
	if(o == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + "__defineSetter__"];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = o[tmp]();
		} else {
			tmp1 = o["__defineSetter__"];
		}
	}
	tmp1.call(o,name,value);
};
tannus_html_JSTools.definePointer = function(o,name,value) {
	var value1 = value.getter;
	var tmp;
	var tmp1;
	if(o == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + "__defineGetter__"];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = o[tmp]();
		} else {
			tmp1 = o["__defineGetter__"];
		}
	}
	tmp1.call(o,name,value1);
	var value2 = value.setter;
	var tmp3;
	var tmp4;
	if(o == null) {
		tmp4 = null;
	} else {
		var tmp5;
		if(o.__properties__) {
			tmp3 = o.__properties__["get_" + "__defineSetter__"];
			tmp5 = tmp3;
		} else {
			tmp5 = false;
		}
		if(tmp5) {
			tmp4 = o[tmp3]();
		} else {
			tmp4 = o["__defineSetter__"];
		}
	}
	tmp4.call(o,name,value2);
};
var tannus_html__$Win_Win_$Impl_$ = {};
$hxClasses["tannus.html._Win.Win_Impl_"] = tannus_html__$Win_Win_$Impl_$;
tannus_html__$Win_Win_$Impl_$.__name__ = ["tannus","html","_Win","Win_Impl_"];
tannus_html__$Win_Win_$Impl_$.__properties__ = {get_current:"get_current",get_document:"get_document",get_self:"get_self",get_viewport:"get_viewport"}
tannus_html__$Win_Win_$Impl_$._new = function(w) {
	var this1 = w != null ? w : window;
	return this1;
};
tannus_html__$Win_Win_$Impl_$.onScroll = function(this1) {
	var sig = new tannus_io_Signal();
	var handlr = function(event) {
		var this2 = new tannus_geom_TPoint(this1.scrollX,this1.scrollY,0);
		var scroll = this2;
		sig.broadcast(scroll);
	};
	this1.addEventListener("scroll",handlr);
	sig.ondelete = function() {
		this1.removeEventListener("scroll",handlr);
	};
	return sig;
};
tannus_html__$Win_Win_$Impl_$.onResize = function(this1) {
	var sig = new tannus_io_Signal();
	var handlr = function(event) {
		var this2;
		var this3 = [this1.innerWidth,this1.innerHeight];
		this2 = this3;
		var area = this2;
		sig.broadcast(area);
	};
	this1.addEventListener("resize",handlr);
	sig.ondelete = function() {
		this1.removeEventListener("resize",handlr);
	};
	return sig;
};
tannus_html__$Win_Win_$Impl_$.onKeydown = function(this1) {
	var sig = new tannus_io_Signal();
	var handle = function(event) {
		var mods = [];
		if(event.altKey) {
			mods.push("alt");
		}
		if(event.shiftKey) {
			mods.push("shift");
		}
		if(event.ctrlKey) {
			mods.push("ctrl");
		}
		var e = new tannus_events_KeyboardEvent("keydown",event.keyCode,mods);
		sig.broadcast(e);
	};
	var bod = this1.document.getElementsByTagName("body").item(0);
	bod.addEventListener("keydown",handle);
	sig.ondelete = function() {
		bod.removeEventListener("keydown",handle);
	};
	return sig;
};
tannus_html__$Win_Win_$Impl_$.onBeforeUnload = function(this1) {
	var sig = new tannus_io_Signal();
	var handlr = function(event) {
		var data = new Date().getTime();
		sig.broadcast(data);
	};
	this1.addEventListener("beforeunload",handlr);
	sig.ondelete = function() {
		this1.removeEventListener("beforeunload",handlr);
	};
	return sig;
};
tannus_html__$Win_Win_$Impl_$.requestFileSystem = function(this1,size,cb) {
	var self = tannus_ds_CObj.create(this1);
	var o = self.o;
	var tmp;
	var rfs;
	if(o == null) {
		rfs = null;
	} else {
		var rfs1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + "requestFileSystem"];
			rfs1 = tmp;
		} else {
			rfs1 = false;
		}
		if(rfs1) {
			rfs = o[tmp]();
		} else {
			rfs = o["requestFileSystem"];
		}
	}
	var rfs2 = rfs;
	if(rfs2 == null) {
		var o1 = self.o;
		var tmp1;
		var rfs3;
		if(o1 == null) {
			rfs3 = null;
		} else {
			var rfs4;
			if(o1.__properties__) {
				tmp1 = o1.__properties__["get_" + "webkitRequestFileSystem"];
				rfs4 = tmp1;
			} else {
				rfs4 = false;
			}
			if(rfs4) {
				rfs3 = o1[tmp1]();
			} else {
				rfs3 = o1["webkitRequestFileSystem"];
			}
		}
		rfs2 = rfs3;
	}
	var o2 = self.o;
	var tmp2;
	var tmp3;
	if(o2 == null) {
		tmp3 = null;
	} else {
		var tmp4;
		if(o2.__properties__) {
			tmp2 = o2.__properties__["get_" + "TEMPORARY"];
			tmp4 = tmp2;
		} else {
			tmp4 = false;
		}
		if(tmp4) {
			tmp3 = o2[tmp2]();
		} else {
			tmp3 = o2["TEMPORARY"];
		}
	}
	rfs2(tmp3,size,cb);
};
tannus_html__$Win_Win_$Impl_$.expose = function(this1,name,value) {
	var self = tannus_ds_CObj.create(this1);
	self.set(name,value);
};
tannus_html__$Win_Win_$Impl_$.exposeGetter = function(this1,name,get) {
	this1.__defineGetter__(name,get);
};
tannus_html__$Win_Win_$Impl_$.exposeSetter = function(this1,name,set) {
	this1.__defineSetter__(name,set);
};
tannus_html__$Win_Win_$Impl_$.exposeRef = function(this1,name,ref) {
	this1.__defineGetter__(name,ref.getter);
	this1.__defineSetter__(name,ref.setter);
};
tannus_html__$Win_Win_$Impl_$.get = function(this1,name) {
	return this1[name];
};
tannus_html__$Win_Win_$Impl_$.get_viewport = function(this1) {
	var this2 = new tannus_geom_CRectangle(this1.scrollX,this1.scrollY,this1.innerWidth,this1.innerHeight);
	return this2;
};
tannus_html__$Win_Win_$Impl_$.get_self = function(this1) {
	return tannus_ds_CObj.create(this1);
};
tannus_html__$Win_Win_$Impl_$.get_document = function(this1) {
	return this1.document;
};
tannus_html__$Win_Win_$Impl_$.get_current = function() {
	var this1 = window;
	return this1;
};
var tannus_html_fs_FilePromise = function(efunc) {
	this.entry = null;
	var _gthis = this;
	tannus_ds_Promise.call(this,function(accept,reject) {
		efunc(function(e) {
			_gthis.entry = e;
			_gthis.gotentry.broadcast(_gthis.entry);
			var f = e;
			f.file(function(me) {
				accept(new tannus_html_fs_WebFile(me));
			},function(error) {
				reject(error);
			});
		});
	},true);
	this.gotentry = new tannus_io_Signal();
	this.make();
};
$hxClasses["tannus.html.fs.FilePromise"] = tannus_html_fs_FilePromise;
tannus_html_fs_FilePromise.__name__ = ["tannus","html","fs","FilePromise"];
tannus_html_fs_FilePromise.__super__ = tannus_ds_Promise;
tannus_html_fs_FilePromise.prototype = $extend(tannus_ds_Promise.prototype,{
	writer: function() {
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			_gthis.useEntry(function(entry) {
				tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.writer(entry).then(accept).unless(reject);
			});
		},null);
	}
	,write: function(data) {
		this.writer().then(function(writer) {
			writer.write(data);
		});
		return this;
	}
	,read: function(pos,len) {
		if(pos == null) {
			pos = 0;
		}
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			_gthis.then(function(file) {
				file.read(pos,len).then(accept).unless(reject);
			});
			_gthis.unless(function(error) {
				reject(error);
			});
		},null);
	}
	,useEntry: function(action) {
		if(this.entry == null) {
			this.gotentry.listen(action,true);
		} else {
			action(this.entry);
		}
	}
	,entry: null
	,gotentry: null
	,__class__: tannus_html_fs_FilePromise
});
var tannus_html_fs_Macros = function() { };
$hxClasses["tannus.html.fs.Macros"] = tannus_html_fs_Macros;
tannus_html_fs_Macros.__name__ = ["tannus","html","fs","Macros"];
var tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebDirectoryEntry.WebDirectoryEntry_Impl_"] = tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$;
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.__name__ = ["tannus","html","fs","_WebDirectoryEntry","WebDirectoryEntry_Impl_"];
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$._new = function(dir) {
	var this1 = dir;
	return this1;
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.exists = function(this1,path) {
	return new tannus_ds_Promise(function(accept,reject) {
		this1.getFile(path,null,function(entry) {
			accept(true);
		},function(error) {
			var _g = error.code;
			if(_g == 1) {
				accept(false);
			} else {
				reject(error);
			}
		});
	},null).bool();
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.createFile = function(this1,path) {
	var f = $bind(this1,this1.getFile);
	var a1 = path;
	return new tannus_ds_Promise(function(a3,a4) {
		f(a1,{ "create" : true},a3,a4);
	});
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.getFile = function(this1,path) {
	var f = $bind(this1,this1.getFile);
	var a1 = path;
	return new tannus_ds_Promise(function(a3,a4) {
		f(a1,{ },a3,a4);
	});
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.createDirectory = function(this1,path) {
	var f = $bind(this1,this1.getDirectory);
	var a1 = path;
	return new tannus_ds_Promise(function(a3,a4) {
		f(a1,{ "create" : true},a3,a4);
	});
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.getDirectory = function(this1,path) {
	var f = $bind(this1,this1.getDirectory);
	var a1 = path;
	return new tannus_ds_Promise(function(a3,a4) {
		f(a1,{ },a3,a4);
	});
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.readEntries = function(this1) {
	return tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.read(this1.createReader());
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.getDirectories = function(this1) {
	return tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.read(this1.createReader()).filter(function(_) {
		return _.isDirectory;
	}).map(function(_1) {
		var this2 = _1;
		return this2;
	});
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.walk = function(this1,cb,filter,step) {
	var all = [];
	tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.read(this1.createReader()).then(function(entries) {
		var stack = new tannus_ds_AsyncStack();
		var broken = false;
		var _g = 0;
		while(_g < entries.length) {
			var e = [entries[_g]];
			++_g;
			stack.under((function(e1) {
				return function(done) {
					if(broken) {
						done();
						return;
					}
					if(e1[0].isFile) {
						var add;
						if(filter != null) {
							var this2 = e1[0];
							add = filter(this2);
						} else {
							add = true;
						}
						if(add) {
							var this3 = e1[0];
							var wfe = this3;
							if(step != null) {
								var continu = step(wfe);
								if(!continu) {
									broken = true;
								}
							}
							all.push(wfe);
						}
						done();
					} else {
						var this4 = e1[0];
						var _f = this4;
						tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.walk(_f,(function() {
							return function(sub) {
								all = all.concat(sub);
								done();
							};
						})(),filter);
					}
				};
			})(e));
		}
		stack.run(function() {
			cb(all);
		});
	});
};
var tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebDirectoryReader.WebDirectoryReader_Impl_"] = tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$;
tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.__name__ = ["tannus","html","fs","_WebDirectoryReader","WebDirectoryReader_Impl_"];
tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$._new = function(r) {
	var this1 = r;
	return this1;
};
tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.read = function(this1) {
	var me = this1;
	return new tannus_ds_Promise(function(accept,reject) {
		var on_results = function(entries) {
			var on_results1 = tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.__manip(me,entries);
			accept(on_results1);
		};
		var on_error = function(error) {
			reject(error);
		};
		this1.readEntries(on_results,on_error);
	},null).array();
};
tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.__manip = function(this1,entries) {
	return entries;
};
var tannus_html_fs_WebFile = function(f) {
	this._objectUrl = null;
	this.file = f;
};
$hxClasses["tannus.html.fs.WebFile"] = tannus_html_fs_WebFile;
tannus_html_fs_WebFile.__name__ = ["tannus","html","fs","WebFile"];
tannus_html_fs_WebFile.prototype = {
	slice: function(start,end,contentType) {
		return this.file.slice(start,end,contentType);
	}
	,read: function(pos,len) {
		if(pos == null) {
			pos = 0;
		}
		var _gthis = this;
		return new tannus_ds_Promise(function(accept,reject) {
			if(len == null) {
				len = _gthis.file.size;
			}
			var reader = new FileReader();
			reader.onerror = function(error) {
				reject(error.target.error);
			};
			reader.onload = function(event) {
				var data = tannus_io_impl_NodeBinary.ofData(event.target.result);
				accept(data);
			};
			if(pos == 0 && len == _gthis.file.size) {
				reader.readAsArrayBuffer(_gthis.file);
			} else {
				var this1 = _gthis.file.type;
				reader.readAsArrayBuffer(_gthis.slice(pos,pos + len,this1));
			}
		},null);
	}
	,createReader: function() {
		return new tannus_html_fs_WebFileReader(this);
	}
	,input: function() {
		return new tannus_html_fs_WebFileInput(this);
	}
	,getObjectURL: function() {
		if(this._objectUrl == null) {
			var this1 = window;
			var w = this1;
			var getter = (w.URL || w.webkitURL).createObjectURL.bind(w);
			this._objectUrl = getter(this.file);
		}
		return this._objectUrl;
	}
	,getNativeFile: function() {
		return this.file;
	}
	,get_name: function() {
		return this.file.name;
	}
	,get_size: function() {
		return this.file.size;
	}
	,get_type: function() {
		var this1 = this.file.type;
		return this1;
	}
	,get_lastModified: function() {
		return this.file.lastModifiedDate;
	}
	,get_path: function() {
		return this.file.path;
	}
	,file: null
	,_objectUrl: null
	,__class__: tannus_html_fs_WebFile
	,__properties__: {get_path:"get_path",get_lastModified:"get_lastModified",get_type:"get_type",get_size:"get_size",get_name:"get_name"}
};
var tannus_html_fs_WebFileReader = function(f) {
	this.file = f;
	this.r = new FileReader();
	this.offset = 0;
};
$hxClasses["tannus.html.fs.WebFileReader"] = tannus_html_fs_WebFileReader;
tannus_html_fs_WebFileReader.__name__ = ["tannus","html","fs","WebFileReader"];
tannus_html_fs_WebFileReader.prototype = {
	seek: function(pos) {
		var max = this.file.file.size;
		return this.offset = pos < 0 ? 0 : pos > max ? max : pos;
	}
	,read: function(size,provide,reject) {
		var _gthis = this;
		if(size == null) {
			size = this.file.file.size - this.offset;
		}
		var b = this.file.file.size - this.offset;
		if(size < b) {
			size = size;
		} else {
			size = b;
		}
		this.r.onload = function(event) {
			_gthis.offset += size;
			if(_gthis.offset == _gthis.file.file.size) {
				_gthis.r = null;
			}
			try {
				var tmp = tannus_io_impl_NodeBinary.ofData(event.target.result);
				provide(tmp);
			} catch( error ) {
				if (error instanceof js__$Boot_HaxeError) error = error.val;
				reject(error);
			}
		};
		var f = reject;
		var tmp1 = function(a1) {
			f(a1);
		};
		this.r.onerror = tmp1;
		this.r.readAsArrayBuffer(this.file.slice(this.offset,this.offset + size));
	}
	,file: null
	,r: null
	,offset: null
	,__class__: tannus_html_fs_WebFileReader
};
var tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebFileEntry.WebFileEntry_Impl_"] = tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$;
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.__name__ = ["tannus","html","fs","_WebFileEntry","WebFileEntry_Impl_"];
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.__properties__ = {get_o:"get_o",get_fileSystem:"get_fileSystem"}
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$._new = function(entry) {
	var this1 = entry;
	return this1;
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.get_fileSystem = function(this1) {
	return this1.filesystem;
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.file = function(this1) {
	return new tannus_html_fs_FilePromise(function(give) {
		give(this1);
	});
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.getFile = function(this1,cb) {
	var this2 = this1;
	var self = this2;
	if(Object.prototype.hasOwnProperty.call(self,"_file")) {
		var tmp;
		var tmp1;
		if(self == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(self.__properties__) {
				tmp = self.__properties__["get_" + "_file"];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = self[tmp]();
			} else {
				tmp1 = self["_file"];
			}
		}
		cb(tmp1);
	} else {
		this1.file(function(f) {
			var tmp3;
			var tmp4;
			if(self.__properties__) {
				tmp3 = self.__properties__["set_" + "_file"];
				tmp4 = tmp3;
			} else {
				tmp4 = false;
			}
			if(tmp4) {
				self[tmp3](f);
			} else {
				var tmp5 = f;
				self["_file"] = tmp5;
			}
			var tmp6;
			if(self == null) {
				null;
			} else {
				var tmp7;
				if(self.__properties__) {
					tmp6 = self.__properties__["get_" + "_file"];
					tmp7 = tmp6;
				} else {
					tmp7 = false;
				}
				if(tmp7) {
					self[tmp6]();
				}
			}
			cb(f);
		},function(err) {
			throw new js__$Boot_HaxeError(err);
		});
	}
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.size = function(this1) {
	var this2 = this1;
	return new tannus_html_fs_FilePromise(function(give) {
		give(this2);
	}).transform(function(f) {
		return f.file.size;
	});
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.type = function(this1) {
	var this2 = this1;
	return new tannus_html_fs_FilePromise(function(give) {
		give(this2);
	}).transform(function(f) {
		var this3 = f.file.type;
		return this3;
	}).string();
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.read = function(this1) {
	return new tannus_ds_Promise(function(accept,reject) {
		tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.getFile(this1,function(file) {
			var reader = new FileReader();
			reader.onerror = function(error) {
				reject(error);
			};
			reader.onload = function(event) {
				var data = tannus_io_impl_NodeBinary.ofData(event.target.result);
				accept(data);
			};
			reader.readAsArrayBuffer(file);
		});
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.writer = function(this1) {
	return new tannus_ds_Promise(function(accept,reject) {
		tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.createWriter(this1,function(writer) {
			accept(writer);
		},function(err) {
			reject(err);
		});
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.createWriter = function(this1,onsuccess,onerror) {
	this1.createWriter(function(fw) {
		var this2 = new tannus_html_fs_CWebFileWriter(fw);
		onsuccess(this2);
	},onerror);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.moveTo = function(this1,parent,name) {
	return new tannus_ds_Promise(function(accept,reject) {
		this1.moveTo(parent,name);
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.copyTo = function(this1,parent,name) {
	return new tannus_ds_Promise(function(accept,reject) {
		this1.copyTo(parent,name);
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.rename = function(this1,newname) {
	return new tannus_ds_Promise(function(accept,reject) {
		var this2 = this1;
		var pp = new tannus_ds_Promise(function(accept1,reject1) {
			this2.getParent(function(parent) {
				if(parent.isDirectory) {
					accept1(parent);
				}
			},function(err) {
				reject1(err);
			});
		},null);
		pp.then(function(parent1) {
			tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.moveTo(this1,parent1,newname).then(accept).unless(reject);
		});
		pp.unless(function(error) {
			reject(error);
		});
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.remove = function(this1,cb) {
	this1.remove(cb);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.getDirectory = function(this1) {
	return new tannus_ds_Promise(function(accept,reject) {
		this1.getParent(function(parent) {
			if(parent.isDirectory) {
				accept(parent);
			}
		},function(err) {
			reject(err);
		});
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.get_o = function(this1) {
	var this2 = this1;
	return this2;
};
var tannus_html_fs_WebFileError = function(type,msg) {
	Error.call(this,msg);
	this.name = "FileSystemError";
	this.code = type;
};
$hxClasses["tannus.html.fs.WebFileError"] = tannus_html_fs_WebFileError;
tannus_html_fs_WebFileError.__name__ = ["tannus","html","fs","WebFileError"];
tannus_html_fs_WebFileError.__super__ = Error;
tannus_html_fs_WebFileError.prototype = $extend(Error.prototype,{
	code: null
	,__class__: tannus_html_fs_WebFileError
});
var tannus_io_Input = function() {
	this.__b = [];
	this.__eoi = false;
	this.opened = false;
	this.closed = false;
};
$hxClasses["tannus.io.Input"] = tannus_io_Input;
tannus_io_Input.__name__ = ["tannus","io","Input"];
tannus_io_Input.prototype = {
	read: function(provide,reject) {
		if(!this.opened) {
			throw new js__$Boot_HaxeError("Error: ReadableStream must be opened (by calling the \"open\" method) before data can be read from it");
		} else if(this.closed) {
			throw new js__$Boot_HaxeError("Error: Cannot read from a closed Stream");
		}
		if(this.__b.length > 0) {
			var tmp = this.__b.shift();
			provide(tmp);
		} else {
			if(reject == null) {
				reject = function(err) {
					throw new js__$Boot_HaxeError(err);
				};
			}
			this.__get(function(chunk) {
				if(chunk == null) {
					var error = "No data available on ReadableStream";
					reject(error);
				} else {
					provide(chunk);
				}
			},function(error1) {
				reject(error1);
			});
		}
	}
	,__get: function(provide,reject) {
		provide(null);
	}
	,readAll: function(onchunk,onerror,oncomplete) {
		var _gthis = this;
		if(onchunk == null) {
			onchunk = function(data) {
			};
		}
		if(onerror == null) {
			onerror = function(error) {
				throw new js__$Boot_HaxeError(error);
			};
		}
		if(oncomplete == null) {
			oncomplete = function() {
			};
		}
		var step = null;
		step = function(data1) {
			onchunk(data1);
			if(_gthis.__eoi) {
				oncomplete();
			} else {
				_gthis.read(step,onerror);
			}
		};
		var step1 = step;
		this.read(step1,onerror);
	}
	,open: function(cb) {
		this.opened = true;
	}
	,close: function() {
		this.closed = true;
	}
	,pipe: function(o) {
		var onchunk = function(chunk) {
			o.write(chunk);
		};
		this.readAll(onchunk);
	}
	,buffer: function(d) {
		this.__b.push(d);
	}
	,endOfInput: function() {
		this.__eoi = true;
	}
	,get_eoi: function() {
		return this.__eoi;
	}
	,__b: null
	,opened: null
	,closed: null
	,__eoi: null
	,__class__: tannus_io_Input
	,__properties__: {get_eoi:"get_eoi"}
};
var tannus_io_ByteArrayInput = function() {
	tannus_io_Input.call(this);
	this.chunkSize = -1;
	this.__chunk = null;
};
$hxClasses["tannus.io.ByteArrayInput"] = tannus_io_ByteArrayInput;
tannus_io_ByteArrayInput.__name__ = ["tannus","io","ByteArrayInput"];
tannus_io_ByteArrayInput.__super__ = tannus_io_Input;
tannus_io_ByteArrayInput.prototype = $extend(tannus_io_Input.prototype,{
	read: function(provide,reject) {
		var _gthis = this;
		tannus_io_Input.prototype.read.call(this,function(d) {
			if(!(_gthis.__eoi && Lambda.empty(_gthis.__b)) && _gthis.chunkSize != -1 && d._length != _gthis.chunkSize) {
				if(_gthis.__chunk == null) {
					if(d._length > _gthis.chunkSize) {
						_gthis.__chunk = d.slice(0,_gthis.chunkSize);
						d = d.slice(_gthis.chunkSize);
						_gthis.buffer(d);
						provide(_gthis.__chunk);
						_gthis.__chunk = null;
					} else if(d._length < _gthis.chunkSize) {
						_gthis.__chunk = d;
					}
				} else if(_gthis.__chunk._length + d._length >= _gthis.chunkSize) {
					var tmp = _gthis.__chunk.concat(d);
					_gthis.__chunk = tmp;
					var tmp1 = _gthis.__chunk.slice(0,_gthis.chunkSize);
					provide(tmp1);
					if(_gthis.__chunk._length == _gthis.chunkSize) {
						_gthis.__chunk = null;
					} else {
						_gthis.__chunk = _gthis.__chunk.slice(_gthis.chunkSize);
					}
				} else {
					var tmp2 = _gthis.__chunk.concat(d);
					_gthis.__chunk = tmp2;
				}
			} else {
				provide(d);
			}
		},reject);
	}
	,seek: function(offset,done) {
		if(done == null) {
			done = function() {
			};
		}
		this.__seek(offset,done);
	}
	,__seek: function(offset,done) {
		this.__position(offset);
		done();
	}
	,pipe: function(o) {
		if(js_Boot.__instanceof(o,tannus_io_ByteArrayOutput)) {
			var bo = o;
			bo.__position(this.__position());
			bo.__size(this.__size());
		}
		tannus_io_Input.prototype.pipe.call(this,o);
	}
	,__size: function() {
		return -1;
	}
	,__position: function(v) {
		return -1;
	}
	,get_length: function() {
		return this.__size();
	}
	,get_position: function() {
		return this.__position();
	}
	,set_position: function(v) {
		return this.__position(v);
	}
	,chunkSize: null
	,__chunk: null
	,__class__: tannus_io_ByteArrayInput
	,__properties__: $extend(tannus_io_Input.prototype.__properties__,{set_position:"set_position",get_position:"get_position",get_length:"get_length"})
});
var tannus_html_fs_WebFileInput = function(file) {
	this.offset = 0;
	tannus_io_ByteArrayInput.call(this);
	this.src = file;
	this.reader = new tannus_html_fs_WebFileReader(this.src);
	this.chunkSize = 524288;
};
$hxClasses["tannus.html.fs.WebFileInput"] = tannus_html_fs_WebFileInput;
tannus_html_fs_WebFileInput.__name__ = ["tannus","html","fs","WebFileInput"];
tannus_html_fs_WebFileInput.__super__ = tannus_io_ByteArrayInput;
tannus_html_fs_WebFileInput.prototype = $extend(tannus_io_ByteArrayInput.prototype,{
	__get: function(provide,reject) {
		var _gthis = this;
		var _this = this.reader;
		var pos = this.offset;
		var max = _this.file.file.size;
		_this.offset = pos < 0 ? 0 : pos > max ? max : pos;
		var gotChunk = function(data) {
			_gthis.offset += data._length;
			provide(data);
			if(_gthis.__position() == _gthis.__size()) {
				_gthis.endOfInput();
			}
		};
		this.reader.read(this.chunkSize,gotChunk,reject);
	}
	,__position: function(i) {
		if(i != null) {
			this.offset = i;
		}
		return this.offset;
	}
	,__size: function() {
		return this.src.file.size;
	}
	,offset: null
	,src: null
	,reader: null
	,__class__: tannus_html_fs_WebFileInput
});
var tannus_html_fs__$WebFileList_WebFileList_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebFileList.WebFileList_Impl_"] = tannus_html_fs__$WebFileList_WebFileList_$Impl_$;
tannus_html_fs__$WebFileList_WebFileList_$Impl_$.__name__ = ["tannus","html","fs","_WebFileList","WebFileList_Impl_"];
tannus_html_fs__$WebFileList_WebFileList_$Impl_$.__properties__ = {get_length:"get_length"}
tannus_html_fs__$WebFileList_WebFileList_$Impl_$._new = function(l) {
	var this1 = l;
	return this1;
};
tannus_html_fs__$WebFileList_WebFileList_$Impl_$.item = function(this1,index) {
	return new tannus_html_fs_WebFile(this1[index]);
};
tannus_html_fs__$WebFileList_WebFileList_$Impl_$.iterator = function(this1) {
	return new tannus_html_fs__$WebFileList_FileListIterator(this1);
};
tannus_html_fs__$WebFileList_WebFileList_$Impl_$.get_length = function(this1) {
	return this1.length;
};
var tannus_html_fs__$WebFileList_FileListIterator = function(wfl) {
	this.list = wfl;
	this.ii = new IntIterator(0,this.list.length);
};
$hxClasses["tannus.html.fs._WebFileList.FileListIterator"] = tannus_html_fs__$WebFileList_FileListIterator;
tannus_html_fs__$WebFileList_FileListIterator.__name__ = ["tannus","html","fs","_WebFileList","FileListIterator"];
tannus_html_fs__$WebFileList_FileListIterator.prototype = {
	hasNext: function() {
		var _this = this.ii;
		return _this.min < _this.max;
	}
	,next: function() {
		return new tannus_html_fs_WebFile(this.list[this.ii.min++]);
	}
	,list: null
	,ii: null
	,__class__: tannus_html_fs__$WebFileList_FileListIterator
};
var tannus_html_fs__$WebFileSystem_WebFileSystem_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebFileSystem.WebFileSystem_Impl_"] = tannus_html_fs__$WebFileSystem_WebFileSystem_$Impl_$;
tannus_html_fs__$WebFileSystem_WebFileSystem_$Impl_$.__name__ = ["tannus","html","fs","_WebFileSystem","WebFileSystem_Impl_"];
tannus_html_fs__$WebFileSystem_WebFileSystem_$Impl_$._new = function(w) {
	var this1 = w;
	return this1;
};
tannus_html_fs__$WebFileSystem_WebFileSystem_$Impl_$.request = function(size,cb) {
	var this1 = window;
	tannus_html__$Win_Win_$Impl_$.requestFileSystem(this1,size,cb);
};
var tannus_html_fs__$WebFileWriter_WebFileWriter_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebFileWriter.WebFileWriter_Impl_"] = tannus_html_fs__$WebFileWriter_WebFileWriter_$Impl_$;
tannus_html_fs__$WebFileWriter_WebFileWriter_$Impl_$.__name__ = ["tannus","html","fs","_WebFileWriter","WebFileWriter_Impl_"];
tannus_html_fs__$WebFileWriter_WebFileWriter_$Impl_$._new = function(w) {
	var this1 = new tannus_html_fs_CWebFileWriter(w);
	return this1;
};
tannus_html_fs__$WebFileWriter_WebFileWriter_$Impl_$.fromFileWriter = function(w) {
	var this1 = new tannus_html_fs_CWebFileWriter(w);
	return this1;
};
var tannus_html_fs_CWebFileWriter = function(writer) {
	this.w = writer;
	this.onwrite = new tannus_io_VoidSignal();
	var f = ($_=this.onwrite,$bind($_,$_.fire));
	var tmp = function() {
		f();
	};
	this.w.onwrite = tmp;
	this.onerror = new tannus_io_Signal();
	var f1 = ($_=this.onerror,$bind($_,$_.call));
	var tmp1 = function(a1) {
		f1(a1);
	};
	this.w.onerror = tmp1;
	console.log("writer constructed");
};
$hxClasses["tannus.html.fs.CWebFileWriter"] = tannus_html_fs_CWebFileWriter;
tannus_html_fs_CWebFileWriter.__name__ = ["tannus","html","fs","CWebFileWriter"];
tannus_html_fs_CWebFileWriter.prototype = {
	seek: function(pos) {
		try {
			this.w.seek(pos);
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			this.onerror.broadcast(err);
		}
	}
	,write: function(data,cb) {
		var _gthis = this;
		if(cb == null) {
			cb = function(x) {
			};
		}
		var cbed = false;
		this.onwrite.once(function() {
			if(!cbed) {
				cbed = true;
				cb(null);
			}
		});
		this.onerror.listen(function(err) {
			if(!cbed) {
				cbed = true;
				cb(err);
			}
		},true);
		data.toBlob(function(blob) {
			_gthis.w.seek(0);
			_gthis.w.write(blob);
		});
	}
	,truncate: function(len) {
		this.w.truncate(len);
	}
	,get_length: function() {
		return this.w.length;
	}
	,get_position: function() {
		return this.w.position;
	}
	,w: null
	,onwrite: null
	,onerror: null
	,__class__: tannus_html_fs_CWebFileWriter
	,__properties__: {get_position:"get_position",get_length:"get_length"}
};
var tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebFileWriter.OldWebFileWriter_Impl_"] = tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$;
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.__name__ = ["tannus","html","fs","_WebFileWriter","OldWebFileWriter_Impl_"];
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$._new = function(w) {
	var this1 = w;
	return this1;
};
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.seek = function(this1,pos) {
	this1.seek(pos);
};
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.write = function(this1,data,cb) {
	if(cb == null) {
		cb = function(x) {
		};
	}
	this1.onwriteend = function(event) {
		cb(null);
	};
	this1.onerror = function(error) {
		cb(error);
	};
	var blob = new Blob([data.b]);
	this1.write(blob);
};
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.append = function(this1,data,cb) {
	this1.seek(this1.length);
	tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.write(this1,data,cb);
};
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.truncate = function(this1,len) {
	this1.truncate(len);
};
var tannus_http__$Url_Url_$Impl_$ = {};
$hxClasses["tannus.http._Url.Url_Impl_"] = tannus_http__$Url_Url_$Impl_$;
tannus_http__$Url_Url_$Impl_$.__name__ = ["tannus","http","_Url","Url_Impl_"];
tannus_http__$Url_Url_$Impl_$._new = function(s) {
	var this1 = new tannus_http_CUrl(s);
	return this1;
};
tannus_http__$Url_Url_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_http__$Url_Url_$Impl_$.fromString = function(s) {
	return new tannus_http_CUrl(s);
};
var tannus_http_CUrl = $hx_exports["Href"] = function(surl) {
	this.protocol = null;
	this.hostname = null;
	this.pathname = null;
	this.search = null;
	this.hash = null;
	if(surl != null) {
		this.protocol = new EReg("^([A-Z]+):","i").match(surl) ? surl.substring(0,surl.indexOf(":")) : "";
		if(this.protocol.length == 0) {
			this.protocol = "http";
		}
		var noproto = tannus_ds_StringUtils.remove(surl,this.protocol + "://");
		if(StringTools.startsWith(noproto,"/")) {
			noproto = noproto.substring(1);
		}
		this.hostname = tannus_ds_StringUtils.before(noproto,"/");
		this.pathname = tannus_ds_StringUtils.has(noproto,"/") ? tannus_ds_StringUtils.after(noproto,"/") : "";
		this.search = tannus_ds_StringUtils.has(this.pathname,"?") ? tannus_ds_StringUtils.after(this.pathname,"?") : "";
		this.pathname = tannus_ds_StringUtils.strip(tannus_ds_StringUtils.strip(this.pathname,tannus_ds__$EitherType_EitherType_$Impl_$.fromL("?")),tannus_ds__$EitherType_EitherType_$Impl_$.fromL(this.search));
		this.hash = tannus_ds_StringUtils.has(this.search,"#") ? tannus_ds_StringUtils.after(this.search,"#") : "";
		this.search = tannus_ds_StringUtils.before(this.search,"#");
		if(this.hash.length == 0 && tannus_ds_StringUtils.has(this.pathname,"#")) {
			this.hash = tannus_ds_StringUtils.after(this.pathname,"#");
			this.pathname = tannus_ds_StringUtils.before(this.pathname,"#");
		}
		this.params = tannus_ds_QueryString.parse(this.search);
		try {
			this.hashparams = tannus_ds_QueryString.parse(this.hash);
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			if( js_Boot.__instanceof(err,String) ) {
				this.hashparams = null;
			} else throw(err);
		}
	}
};
$hxClasses["tannus.http.CUrl"] = tannus_http_CUrl;
tannus_http_CUrl.__name__ = ["tannus","http","CUrl"];
tannus_http_CUrl.prototype = {
	toString: function() {
		this.search = tannus_ds_QueryString.stringify(this.params);
		this.hash = this.hashparams != null ? tannus_ds_QueryString.stringify(this.hashparams) : this.hash + "";
		var base = "" + this.protocol + "://" + this.hostname + "/" + this.pathname;
		base += Reflect.fields(this.params).length == 0 ? "" : "?" + this.search;
		base += this.hash != "" ? "#" + this.hash : "";
		return base;
	}
	,clone: function() {
		var this1 = new tannus_http_CUrl(this.toString());
		return this1;
	}
	,get_domain: function() {
		return this.hostname.split(".");
	}
	,set_domain: function(v) {
		this.hostname = v.join(".");
		return this.get_domain();
	}
	,get_path: function() {
		var this1 = new tannus_sys_CPath(this.pathname);
		return this1;
	}
	,set_path: function(v) {
		this.pathname = v.s;
		var this1 = new tannus_sys_CPath(this.pathname);
		return this1;
	}
	,protocol: null
	,hostname: null
	,pathname: null
	,search: null
	,hash: null
	,params: null
	,hashparams: null
	,__class__: tannus_http_CUrl
	,__properties__: {set_path:"set_path",get_path:"get_path",set_domain:"set_domain",get_domain:"get_domain"}
};
var tannus_http_WebRequest = $hx_exports["WebRequest"] = function() {
	this.complete = false;
	tannus_io_EventDispatcher.call(this);
	this.req = new XMLHttpRequest();
	this._listen();
};
$hxClasses["tannus.http.WebRequest"] = tannus_http_WebRequest;
tannus_http_WebRequest.__name__ = ["tannus","http","WebRequest"];
tannus_http_WebRequest.__super__ = tannus_io_EventDispatcher;
tannus_http_WebRequest.prototype = $extend(tannus_io_EventDispatcher.prototype,{
	open: function(method,url) {
		this.req.open(method,url);
	}
	,send: function(data) {
		this.req.send(data);
	}
	,loadAsText: function(cb) {
		this.req.responseType = "text";
		this.onres(cb);
	}
	,loadAsObject: function(cb) {
		this.req.responseType = "json";
		this.onres(function(o) {
			cb(tannus_ds_CObj.create(o));
		});
	}
	,loadAsBlob: function(cb) {
		this.req.responseType = "blob";
		this.onres(cb);
	}
	,loadAsArrayBuffer: function(cb) {
		this.req.responseType = "arraybuffer";
		this.onres(cb);
	}
	,loadAsDocument: function(cb) {
		this.req.responseType = "document";
		this.onres(cb);
	}
	,loadAsByteArray: function(cb) {
		this.req.responseType = "arraybuffer";
		this.onres(function(ab) {
			var tmp = tannus_io_impl_NodeBinary.ofData(Buffer(ab));
			cb(tmp);
		});
	}
	,load: function(done) {
		this.onres(done);
	}
	,getResponseHeader: function(name) {
		return this.req.getResponseHeader(name);
	}
	,getAllResponseHeadersRaw: function() {
		return this.req.getAllResponseHeaders();
	}
	,setRequestHeader: function(name,value) {
		this.req.setRequestHeader(name,value);
	}
	,abort: function() {
		this.req.abort();
	}
	,getAllResponseHeaders: function() {
		var m = new haxe_ds_StringMap();
		var s = this.req.getAllResponseHeaders();
		if(s != null) {
			var lines = s.split("\r\n");
			var _g = 0;
			while(_g < lines.length) {
				var line = lines[_g];
				++_g;
				var this1;
				var this2 = [tannus_ds_StringUtils.before(line,":"),tannus_ds_StringUtils.after(line,":")];
				this1 = this2;
				var p = this1;
				var v = p[1];
				var key = p[0];
				if(__map_reserved[key] != null) {
					m.setReserved(key,v);
				} else {
					m.h[key] = v;
				}
			}
		}
		return m;
	}
	,onres: function(cb) {
		if(this.complete) {
			cb(this.req.response);
		} else {
			this.addSignal(this.eventName());
			this.once(this.eventName(),cb);
		}
	}
	,listen: function() {
		var f = $bind(this,this.readyStateChanged);
		var tmp = function() {
			f();
		};
		this.req.onreadystatechange = tmp;
	}
	,readyStateChanged: function() {
		var _g = this.req.readyState;
		if(_g == 2) {
			console.log(this.req.getAllResponseHeaders());
		}
	}
	,_listen: function() {
		var _gthis = this;
		this.req.addEventListener("load",function(event) {
			_gthis.complete = true;
			var this1 = window;
			this1.setTimeout(function() {
				_gthis.done();
			},10);
		});
	}
	,done: function() {
		this.dispatch(this.eventName(),this.req.response);
	}
	,eventName: function() {
		return "got-" + js_Boot.__cast(this.req.responseType , String);
	}
	,get_readyState: function() {
		return this.req.readyState;
	}
	,get_responseType: function() {
		return js_Boot.__cast(this.req.responseType , String);
	}
	,set_responseType: function(v) {
		return this.req.responseType = v;
	}
	,req: null
	,complete: null
	,__class__: tannus_http_WebRequest
	,__properties__: {set_responseType:"set_responseType",get_responseType:"get_responseType",get_readyState:"get_readyState"}
});
var tannus_http__$WebRequest_ResponseType_$Impl_$ = {};
$hxClasses["tannus.http._WebRequest.ResponseType_Impl_"] = tannus_http__$WebRequest_ResponseType_$Impl_$;
tannus_http__$WebRequest_ResponseType_$Impl_$.__name__ = ["tannus","http","_WebRequest","ResponseType_Impl_"];
tannus_http__$WebRequest_ResponseType_$Impl_$.fromString = function(v) {
	switch(v) {
	case "arraybuffer":
		return "arraybuffer";
	case "blob":
		return "blob";
	case "document":
		return "document";
	case "json":
		return "json";
	case "":case "text":
		return "text";
	default:
		return "text";
	}
};
var tannus_internal_CompileTime = function() { };
$hxClasses["tannus.internal.CompileTime"] = tannus_internal_CompileTime;
tannus_internal_CompileTime.__name__ = ["tannus","internal","CompileTime"];
var tannus_internal__$Error_Error_$Impl_$ = {};
$hxClasses["tannus.internal._Error.Error_Impl_"] = tannus_internal__$Error_Error_$Impl_$;
tannus_internal__$Error_Error_$Impl_$.__name__ = ["tannus","internal","_Error","Error_Impl_"];
tannus_internal__$Error_Error_$Impl_$._new = function(msg) {
	var this1 = new Error(msg);
	return this1;
};
tannus_internal__$Error_Error_$Impl_$.fromString = function(s) {
	var this1 = new Error(s);
	return this1;
};
var tannus_internal_TypeTools = $hx_exports["TypeTools"] = function() { };
$hxClasses["tannus.internal.TypeTools"] = tannus_internal_TypeTools;
tannus_internal_TypeTools.__name__ = ["tannus","internal","TypeTools"];
tannus_internal_TypeTools.typename = function(o) {
	var valtype = Type["typeof"](o);
	switch(valtype[1]) {
	case 0:
		return "Null";
	case 1:case 2:
		return "Number";
	case 3:
		return "Bool";
	case 4:
		try {
			var name = Type.getClassName(o);
			if(name != null) {
				return "Class<" + name + ">";
			} else {
				throw new js__$Boot_HaxeError("failed!");
			}
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			if( js_Boot.__instanceof(err,String) ) {
				try {
					var name1 = Type.getEnumName(o);
					if(name1 != null) {
						return "Enum<" + name1 + ">";
					} else {
						throw new js__$Boot_HaxeError("failed!");
					}
				} catch( err1 ) {
					return "Unknown";
				}
			} else throw(err);
		}
		break;
	case 5:
		return "Function";
	case 6:
		var klass = valtype[2];
		try {
			var name2 = Type.getClassName(klass);
			return name2;
		} catch( err2 ) {
			if (err2 instanceof js__$Boot_HaxeError) err2 = err2.val;
			if( js_Boot.__instanceof(err2,String) ) {
				return "Unknown";
			} else throw(err2);
		}
		break;
	case 7:
		var enumer = valtype[2];
		var enumName = Type.getEnumName(enumer);
		var valueNames = enumer.__constructs__.slice();
		var index = o[1];
		var results = "" + enumName + "." + valueNames[index];
		return results;
	case 8:
		return "Unknown";
	}
};
tannus_internal_TypeTools.getClassHierarchy = function(klass) {
	var kl = klass;
	var hierarchy = [];
	var name = Type.getClassName(kl);
	hierarchy.push(name);
	while(true) try {
		kl = Type.getSuperClass(kl);
		name = Type.getClassName(kl);
		hierarchy.push(name);
	} catch( err ) {
		break;
	}
	return hierarchy;
};
tannus_internal_TypeTools.hierarchy = function(o) {
	if(Reflect.isObject(o)) {
		var o1 = o;
		var klass = o1 == null ? null : js_Boot.getClass(o1);
		if(klass != null) {
			return tannus_internal_TypeTools.getClassHierarchy(klass);
		}
	}
	return [];
};
tannus_internal_TypeTools.deepCopy = function(o) {
	if(o == null || typeof(o) == "boolean" || typeof(o) == "number" || typeof(o) == "string") {
		return o;
	} else if(Reflect.isEnumValue(o)) {
		var en = Type.getEnum(o);
		var env = o;
		var clonedParams = env.slice(2).map(tannus_internal_TypeTools.deepCopy);
		return Type.createEnumIndex(en,env[1],clonedParams);
	} else if((o instanceof Array) && o.__enum__ == null) {
		return (js_Boot.__cast(o , Array)).map(tannus_internal_TypeTools.deepCopy);
	} else if(Reflect.isObject(o)) {
		var tmp;
		if(Reflect.isObject(o) && Object.prototype.hasOwnProperty.call(o,"_hxDeepCopy")) {
			var tmp1;
			var tmp2;
			if(o == null) {
				tmp2 = null;
			} else {
				var tmp3;
				if(o.__properties__) {
					tmp1 = o.__properties__["get_" + "_hxDeepCopy"];
					tmp3 = tmp1;
				} else {
					tmp3 = false;
				}
				if(tmp3) {
					tmp2 = o[tmp1]();
				} else {
					tmp2 = o["_hxDeepCopy"];
				}
			}
			tmp = Reflect.isFunction(tmp2);
		} else {
			tmp = false;
		}
		if(tmp) {
			var tmp4;
			var func;
			if(o == null) {
				func = null;
			} else {
				var func1;
				if(o.__properties__) {
					tmp4 = o.__properties__["get_" + "_hxDeepCopy"];
					func1 = tmp4;
				} else {
					func1 = false;
				}
				if(func1) {
					func = o[tmp4]();
				} else {
					func = o["_hxDeepCopy"];
				}
			}
			return func.apply(o,[]);
		} else {
			var klass = o == null ? null : js_Boot.getClass(o);
			if(klass != null) {
				var copy = Type.createEmptyInstance(klass);
				var fieldNames = Type.getInstanceFields(klass);
				var _g = 0;
				while(_g < fieldNames.length) {
					var n = fieldNames[_g];
					++_g;
					var tmp5;
					var val;
					if(o == null) {
						val = null;
					} else {
						var val1;
						if(o.__properties__) {
							tmp5 = o.__properties__["get_" + n];
							val1 = tmp5;
						} else {
							val1 = false;
						}
						if(val1) {
							val = o[tmp5]();
						} else {
							val = o[n];
						}
					}
					var val2 = val;
					if(Reflect.isFunction(val2)) {
						val2 = Reflect.makeVarArgs((function(a1,o1) {
							return function(a2) {
								return Reflect.callMethod(o1[0],a1[0],a2);
							};
						})([val2],[o]));
					} else {
						val2 = tannus_internal_TypeTools.deepCopy(val2);
					}
					var tmp6;
					var tmp7;
					if(copy.__properties__) {
						tmp6 = copy.__properties__["set_" + n];
						tmp7 = tmp6;
					} else {
						tmp7 = false;
					}
					if(tmp7) {
						copy[tmp6](val2);
					} else {
						copy[n] = val2;
					}
				}
				return copy;
			} else {
				return Reflect.copy(o);
			}
		}
	} else if(Reflect.isFunction(o)) {
		var a11 = o;
		return Reflect.makeVarArgs(function(a21) {
			return Reflect.callMethod(null,a11,a21);
		});
	} else {
		var vt = Type["typeof"](o);
		var err = "Error: Could not clone " + Std.string(vt);
		throw new js__$Boot_HaxeError(err);
	}
};
tannus_internal_TypeTools.isPrimitive = function(v) {
	if(!(v == null || typeof(v) == "boolean" || typeof(v) == "number")) {
		return typeof(v) == "string";
	} else {
		return true;
	}
};
tannus_internal_TypeTools.isDeepCopyable = function(v) {
	if(Reflect.isObject(v) && Object.prototype.hasOwnProperty.call(v,"_hxDeepCopy")) {
		var tmp;
		var tmp1;
		if(v == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(v.__properties__) {
				tmp = v.__properties__["get_" + "_hxDeepCopy"];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = v[tmp]();
			} else {
				tmp1 = v["_hxDeepCopy"];
			}
		}
		return Reflect.isFunction(tmp1);
	} else {
		return false;
	}
};
var tannus_io_Asserts = function() { };
$hxClasses["tannus.io.Asserts"] = tannus_io_Asserts;
tannus_io_Asserts.__name__ = ["tannus","io","Asserts"];
var tannus_io_Binary = function(size,_b) {
	this._length = size;
	this.b = _b;
	this.position = 0;
};
$hxClasses["tannus.io.Binary"] = tannus_io_Binary;
tannus_io_Binary.__name__ = ["tannus","io","Binary"];
tannus_io_Binary.__interfaces__ = [tannus_html_Blobable];
tannus_io_Binary.prototype = {
	get: function(index) {
		if(index >= this._length || index < 0) {
			throw new js__$Boot_HaxeError(tannus_io_impl_BinaryError.OutOfBounds);
		}
		return 0;
	}
	,set: function(index,value) {
		if(index >= this._length || index < 0) {
			throw new js__$Boot_HaxeError(tannus_io_impl_BinaryError.OutOfBounds);
		}
		return 0;
	}
	,getInt32: function(i) {
		return this.get(i) | this.get(i + 1) << 8 | this.get(i + 2) << 16 | this.get(i + 3) << 24;
	}
	,setInt32: function(i,v) {
		this.set(i,v);
		this.set(i + 1,v >> 8);
		this.set(i + 2,v >> 16);
		this.set(i + 3,v >> 24);
	}
	,getInt64: function(i) {
		var this1 = new haxe__$Int64__$_$_$Int64(this.getInt32(i + 4),this.getInt32(i));
		return this1;
	}
	,setInt64: function(i,v) {
		this.setInt32(i,v.low);
		this.setInt32(i + 4,v.high);
	}
	,getFloat: function(i) {
		return tannus_math_TMath.i32ToFloat(this.getInt32(i));
	}
	,setFloat: function(i,v) {
		this.setInt32(i,tannus_math_TMath.floatToI32(v));
	}
	,fill: function(c,index,size) {
		if(index == null) {
			index = 0;
		}
		if(size == null) {
			size = this._length;
		}
		var _g1 = index;
		var _g = size;
		while(_g1 < _g) {
			var i = _g1++;
			this.set(i,c);
		}
	}
	,readByte: function() {
		return this.get(this.position++);
	}
	,readInt32: function() {
		var v = this.getInt32(this.position);
		this.position += 4;
		return v;
	}
	,writeInt32: function(i) {
		this.setInt32(this.position,i);
		this.position += 4;
	}
	,readFloat: function() {
		return tannus_math_TMath.i32ToFloat(this.readInt32());
	}
	,writeFloat: function(v) {
		this.writeInt32(tannus_math_TMath.floatToI32(v));
	}
	,writeByte: function(c) {
		this.set(this.position++,c);
	}
	,read: function(len) {
		var res = this.sub(this.position,len);
		this.position += len;
		return res;
	}
	,readString: function(len) {
		var res = this.getString(this.position,len);
		this.position += len;
		return res;
	}
	,write: function(other,len) {
		if(len == null) {
			len = other._length;
		}
		this.blit(this.position,other,0,len);
		this.position += len;
	}
	,writeString: function(s) {
		var o = js_Boot.getClass(this);
		var tmp;
		var tmp1;
		if(o == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + "ofString"];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = o[tmp]();
			} else {
				tmp1 = o["ofString"];
			}
		}
		this.write(tmp1(s));
	}
	,push: function(c) {
		this.position = this._length;
		this.resize(this._length + 1);
		this.setData(this.b);
		this.set(this.position++,c);
		return this.position;
	}
	,pushInt32: function(i) {
		this.position = this._length;
		this.resize(this._length + 4);
		this.setData(this.b);
		this.writeInt32(i);
		return this.position;
	}
	,pushFloat: function(n) {
		return this.pushInt32(tannus_math_TMath.floatToI32(n));
	}
	,pushString: function(s) {
		this.appendString(s);
	}
	,unshift: function(c) {
		this.shiftRight(1);
		this.setData(this.b);
		this.set(0,c);
		return 0;
	}
	,pop: function() {
		var v = this.get(this._length - 1);
		this.position = 0;
		this.resize(this._length - 1);
		this.setData(this.b);
		return v;
	}
	,shift: function() {
		var v = this.get(0);
		this.setData(this.copy().slice(1).b);
		return v;
	}
	,append: function(footer,len) {
		if(len == null) {
			len = footer._length;
		}
		this.position = this._length;
		this.resize(this._length + len);
		this.write(footer);
		return this;
	}
	,appendString: function(foot,len) {
		var o = js_Boot.getClass(this);
		var tmp;
		var tmp1;
		if(o == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + "ofString"];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = o[tmp]();
			} else {
				tmp1 = o["ofString"];
			}
		}
		return this.append(tmp1(foot),len);
	}
	,appendStruct: function(od) {
		var o = tannus_ds_CObj.create(od);
		if(Object.prototype.hasOwnProperty.call(o.o,"_append_ba")) {
			var _e = o.o;
			var f = function(func,args) {
				return func.apply(_e,args);
			};
			var o1 = o.o;
			var tmp;
			var a1;
			if(o1 == null) {
				a1 = null;
			} else {
				var a11;
				if(o1.__properties__) {
					tmp = o1.__properties__["get_" + "_append_ba"];
					a11 = tmp;
				} else {
					a11 = false;
				}
				if(a11) {
					a1 = o1[tmp]();
				} else {
					a1 = o1["_append_ba"];
				}
			}
			var a12 = a1;
			var a = Reflect.makeVarArgs(function(a2) {
				return f(a12,a2);
			});
			var _i = this.position;
			a(this);
			var len = this.position - _i;
			return len;
		} else {
			throw new js__$Boot_HaxeError("Error: " + o.o + " Cannot be written to a ByteArray");
		}
	}
	,readStruct: function(type) {
		var ocl = tannus_ds_CObj.create(type);
		if(Object.prototype.hasOwnProperty.call(ocl.o,"_from_ba")) {
			var _e = ocl.o;
			var f = function(func,args) {
				return func.apply(_e,args);
			};
			var o = ocl.o;
			var tmp;
			var a1;
			if(o == null) {
				a1 = null;
			} else {
				var a11;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + "_from_ba"];
					a11 = tmp;
				} else {
					a11 = false;
				}
				if(a11) {
					a1 = o[tmp]();
				} else {
					a1 = o["_from_ba"];
				}
			}
			var a12 = a1;
			var _from = Reflect.makeVarArgs(function(a2) {
				return f(a12,a2);
			});
			return _from(this);
		} else {
			throw new js__$Boot_HaxeError("Error: " + tannus_internal_TypeTools.typename(type) + " has no \"_from_ba\" method");
		}
	}
	,prepend: function(header,len) {
		if(len == null) {
			len = header._length;
		}
		this.shiftRight(header._length);
		this.position = 0;
		this.write(header);
		return this;
	}
	,prependString: function(head,len) {
		var o = js_Boot.getClass(this);
		var tmp;
		var header;
		if(o == null) {
			header = null;
		} else {
			var header1;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + "ofString"];
				header1 = tmp;
			} else {
				header1 = false;
			}
			if(header1) {
				header = o[tmp]();
			} else {
				header = o["ofString"];
			}
		}
		var header2 = header(head);
		var len1 = len;
		if(len1 == null) {
			len1 = header2._length;
		}
		this.shiftRight(header2._length);
		this.position = 0;
		this.write(header2);
		return this;
	}
	,shiftRight: function(digits) {
		var lpad = this._alloc(digits);
		lpad.fill(0);
		lpad = lpad.concat(this);
		this.resize(this._length + digits);
		this.setData(lpad.b);
	}
	,shiftLeft: function(digits) {
		var rpad = this._alloc(digits);
		rpad.fill(0);
		var backward = this.slice(digits).concat(rpad);
		this.resize(this._length + digits);
		this.setData(backward.b);
	}
	,sub: function(index,size) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,slice: function(min,max) {
		return this.sub(min,(max != null ? max : this._length) - min);
	}
	,blit: function(index,src,srcIndex,size) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,resize: function(size) {
		this._length = size;
	}
	,reverse: function() {
		var _g1 = 0;
		var _g = Math.floor(this._length / 2);
		while(_g1 < _g) {
			var i = _g1++;
			var temp = this.get(i);
			this.set(i,this.get(this._length - i - 1));
			this.set(this._length - i - 1,temp);
		}
	}
	,grow: function(amount) {
		this.resize(this._length + amount);
		return this;
	}
	,concat: function(other) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,copy: function() {
		return this;
	}
	,iterator: function() {
		return new tannus_io_impl_BinaryIterator(this);
	}
	,getString: function(index,len) {
		return "";
	}
	,getData: function() {
		return this.b;
	}
	,seek: function(i) {
		return this.position = i;
	}
	,toString: function() {
		return this.getString(0,this._length);
	}
	,toBytes: function() {
		return new haxe_io_Bytes(new ArrayBuffer(0));
	}
	,toHex: function() {
		var sb_b = "";
		var chars = "0123456789ABCDEF".split("").map(function(s) {
			return HxOverrides.cca(s,0);
		});
		var _g1 = 0;
		var _g = this._length;
		while(_g1 < _g) {
			var i = _g1++;
			var c = this.get(i);
			sb_b += String.fromCharCode(chars[c >> 4]);
			sb_b += String.fromCharCode(chars[c & 15]);
		}
		return sb_b;
	}
	,base64Encode: function() {
		return haxe_crypto_Base64.encode(this.toBytes());
	}
	,toBase64: function() {
		return this.base64Encode();
	}
	,toDataUrl: function(type) {
		if(type == null) {
			type = "text/plain";
		}
		var encoded = this.base64Encode();
		return "data:" + type + ";base64," + encoded;
	}
	,toArray: function() {
		var _g = [];
		var c = this.iterator();
		while(c.hasNext()) {
			var c1 = c.next();
			_g.push(c1);
		}
		return _g;
	}
	,toBlob: function(callback,type) {
		callback(new Blob([this.b],{ type : type}));
	}
	,equals: function(other) {
		if(this._length != other._length) {
			return false;
		} else {
			var _g1 = 0;
			var _g = this._length;
			while(_g1 < _g) {
				var i = _g1++;
				if(this.get(i) != other.get(i)) {
					return false;
				}
			}
			return true;
		}
	}
	,setData: function(data) {
		this.b = data;
	}
	,err: function(e) {
		throw new js__$Boot_HaxeError(e);
	}
	,outOfBounds: function() {
		throw new js__$Boot_HaxeError(tannus_io_impl_BinaryError.OutOfBounds);
	}
	,overflow: function() {
		throw new js__$Boot_HaxeError(tannus_io_impl_BinaryError.Overflow);
	}
	,_alloc: function(size) {
		var o = js_Boot.getClass(this);
		var tmp;
		var allocf;
		if(o == null) {
			allocf = null;
		} else {
			var allocf1;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + "alloc"];
				allocf1 = tmp;
			} else {
				allocf1 = false;
			}
			if(allocf1) {
				allocf = o[tmp]();
			} else {
				allocf = o["alloc"];
			}
		}
		return allocf(size);
	}
	,_ofString: function(s) {
		var o = js_Boot.getClass(this);
		var tmp;
		var tmp1;
		if(o == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + "ofString"];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = o[tmp]();
			} else {
				tmp1 = o["ofString"];
			}
		}
		return tmp1(s);
	}
	,get_length: function() {
		return this._length;
	}
	,get_empty: function() {
		return this._length <= 0;
	}
	,get_first: function() {
		return this.get(0);
	}
	,set_first: function(v) {
		return this.set(0,v);
	}
	,get_last: function() {
		return this.get(this._length - 1);
	}
	,set_last: function(v) {
		return this.set(this._length - 1,v);
	}
	,_length: null
	,b: null
	,position: null
	,__class__: tannus_io_Binary
	,__properties__: {set_last:"set_last",get_last:"get_last",set_first:"set_first",get_first:"get_first",get_empty:"get_empty",get_length:"get_length"}
};
var tannus_io__$Blob_Blob_$Impl_$ = {};
$hxClasses["tannus.io._Blob.Blob_Impl_"] = tannus_io__$Blob_Blob_$Impl_$;
tannus_io__$Blob_Blob_$Impl_$.__name__ = ["tannus","io","_Blob","Blob_Impl_"];
tannus_io__$Blob_Blob_$Impl_$._new = function(name,mime,dat) {
	var this1 = new tannus_io_CBlob(name,mime,dat);
	return this1;
};
tannus_io__$Blob_Blob_$Impl_$.toNativeBlob = function(this1) {
	return new Blob([this1.data.b],{ "type" : this1.type});
};
tannus_io__$Blob_Blob_$Impl_$.toObjectURL = function(this1) {
	return URL.createObjectURL(new Blob([this1.data.b],{ "type" : this1.type}));
};
tannus_io__$Blob_Blob_$Impl_$.fromDataURL = function(durl) {
	return tannus_io_CBlob.fromDataURL(durl);
};
var tannus_io_CBlob = function(nam,mime,dat) {
	this.name = nam;
	if(mime != null) {
		this.type = mime;
	}
	if(this.type == null) {
		var this1 = new tannus_sys_CPath(this.name);
		var np = this1;
		this.type = tannus_sys_Mimes.getMimeType(np.get_extension());
	}
	if(this.type == null) {
		this.type = "text/plain";
	}
	var this2 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
	this.data = this2;
	if(dat != null) {
		this.data = dat;
	}
};
$hxClasses["tannus.io.CBlob"] = tannus_io_CBlob;
tannus_io_CBlob.__name__ = ["tannus","io","CBlob"];
tannus_io_CBlob.__interfaces__ = [tannus_html_Blobable];
tannus_io_CBlob.fromDataURL = function(durl) {
	durl = durl.substring(5);
	var bits = durl.split(";");
	var mime = bits.shift();
	var encoded = durl.substring(durl.indexOf(",") + 1,durl.length - 1);
	var data = tannus_io_impl_NodeBinary.fromBytes(haxe_crypto_Base64.decode(encoded));
	var this1 = new tannus_io_CBlob("file",mime,data);
	return this1;
};
tannus_io_CBlob.prototype = {
	save: function(dirname) {
		var this1 = new tannus_sys_CFile(tannus_sys__$Path_Path_$Impl_$.fromString("" + dirname + "/" + this.name));
		var f = this1;
		tannus_sys_node_NodeFileSystem.write(f._path.s,this.data);
		return f;
	}
	,toDataURL: function() {
		return this.data.toDataUrl(this.type);
	}
	,toBlob: function(cb,type) {
		if(type == null) {
			type = this.type;
		}
		cb(new Blob([this.data.b],{ type : type}));
	}
	,name: null
	,type: null
	,data: null
	,__class__: tannus_io_CBlob
};
var tannus_io__$Byte_Byte_$Impl_$ = {};
$hxClasses["tannus.io._Byte.Byte_Impl_"] = tannus_io__$Byte_Byte_$Impl_$;
tannus_io__$Byte_Byte_$Impl_$.__name__ = ["tannus","io","_Byte","Byte_Impl_"];
tannus_io__$Byte_Byte_$Impl_$.__properties__ = {set_aschar:"set_aschar",get_aschar:"get_aschar",set_asint:"set_asint",get_asint:"get_asint",get_self:"get_self"}
tannus_io__$Byte_Byte_$Impl_$._new = function(n) {
	var this1;
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
		throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
	}
	this1 = n;
	return this1;
};
tannus_io__$Byte_Byte_$Impl_$.get_self = function(this1) {
	return this1;
};
tannus_io__$Byte_Byte_$Impl_$.get_asint = function(this1) {
	return this1;
};
tannus_io__$Byte_Byte_$Impl_$.set_asint = function(this1,n) {
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
		throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
	}
	this1 = n;
	return this1;
};
tannus_io__$Byte_Byte_$Impl_$.get_aschar = function(this1) {
	return String.fromCharCode(this1);
};
tannus_io__$Byte_Byte_$Impl_$.set_aschar = function(this1,s) {
	var n = HxOverrides.cca(s,0);
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
		throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
	}
	this1 = n;
	return String.fromCharCode(this1);
};
tannus_io__$Byte_Byte_$Impl_$.isNumeric = function(this1) {
	if(this1 >= 48) {
		return this1 <= 57;
	} else {
		return false;
	}
};
tannus_io__$Byte_Byte_$Impl_$.isLetter = function(this1) {
	if(!(this1 >= 65 && this1 <= 90)) {
		if(this1 >= 97) {
			return this1 <= 122;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
tannus_io__$Byte_Byte_$Impl_$.isAlphaNumeric = function(this1) {
	if(!(this1 >= 48 && this1 <= 57)) {
		if(!(this1 >= 65 && this1 <= 90)) {
			if(this1 >= 97) {
				return this1 <= 122;
			} else {
				return false;
			}
		} else {
			return true;
		}
	} else {
		return true;
	}
};
tannus_io__$Byte_Byte_$Impl_$.isUppercase = function(this1) {
	if(this1 >= 65) {
		return this1 <= 90;
	} else {
		return false;
	}
};
tannus_io__$Byte_Byte_$Impl_$.isLowercase = function(this1) {
	if(this1 >= 97) {
		return this1 <= 122;
	} else {
		return false;
	}
};
tannus_io__$Byte_Byte_$Impl_$.isWhiteSpace = function(this1) {
	return Lambda.has([9,10,11,12,13,32],this1);
};
tannus_io__$Byte_Byte_$Impl_$.isLineBreaking = function(this1) {
	if(this1 != 10) {
		return this1 == 13;
	} else {
		return true;
	}
};
tannus_io__$Byte_Byte_$Impl_$.isPunctuation = function(this1) {
	return Lambda.has([33,44,45,46,58,59,53],this1);
};
tannus_io__$Byte_Byte_$Impl_$.equalsi = function(this1,other) {
	return this1 == other;
};
tannus_io__$Byte_Byte_$Impl_$.equalss = function(this1,other) {
	return this1 == HxOverrides.cca(other,0);
};
tannus_io__$Byte_Byte_$Impl_$.repeat = function(this1,times) {
	return tannus_ds_StringUtils.times(String.fromCharCode(this1),times);
};
tannus_io__$Byte_Byte_$Impl_$.toString = function(this1) {
	return String.fromCharCode(this1);
};
tannus_io__$Byte_Byte_$Impl_$.toInt = function(this1) {
	return this1;
};
tannus_io__$Byte_Byte_$Impl_$.fromString = function(s) {
	var n = HxOverrides.cca(s,0);
	var this1;
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
		throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
	}
	this1 = n;
	return this1;
};
tannus_io__$Byte_Byte_$Impl_$.isValid = function(n) {
	if(typeof(n) == "number" && ((n | 0) === n) && isFinite(n)) {
		return !isNaN(n);
	} else {
		return false;
	}
};
tannus_io__$Byte_Byte_$Impl_$.assertValid = function(n) {
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
		throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
	}
};
var tannus_io__$ByteArray_ByteArray_$Impl_$ = {};
$hxClasses["tannus.io._ByteArray.ByteArray_Impl_"] = tannus_io__$ByteArray_ByteArray_$Impl_$;
tannus_io__$ByteArray_ByteArray_$Impl_$.__name__ = ["tannus","io","_ByteArray","ByteArray_Impl_"];
tannus_io__$ByteArray_ByteArray_$Impl_$._new = function(size) {
	if(size == null) {
		size = 0;
	}
	var this1 = new tannus_io_impl_NodeBinary(size,new Buffer(size));
	return this1;
};
tannus_io__$ByteArray_ByteArray_$Impl_$.get = function(this1,i) {
	return this1.get(i);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.set = function(this1,i,v) {
	return this1.set(i,v);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_io__$ByteArray_ByteArray_$Impl_$.toBytes = function(this1) {
	return this1.toBytes();
};
tannus_io__$ByteArray_ByteArray_$Impl_$.toBase = function(this1) {
	return this1.b;
};
tannus_io__$ByteArray_ByteArray_$Impl_$.toArray = function(this1) {
	return this1.toArray();
};
tannus_io__$ByteArray_ByteArray_$Impl_$.expandByString = function(this1,s) {
	return this1.appendString(s);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.expand = function(this1,other) {
	return this1.append(other);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.concat = function(this1,other) {
	return this1.concat(other);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.equals = function(this1,o) {
	return this1.equals(o);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.alloc = function(size) {
	return new tannus_io_impl_NodeBinary(size,new Buffer(size));
};
tannus_io__$ByteArray_ByteArray_$Impl_$.ofData = function(d) {
	return tannus_io_impl_NodeBinary.ofData(d);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.ofString = function(s) {
	return new tannus_io_impl_NodeBinary(s.length,new Buffer(s));
};
tannus_io__$ByteArray_ByteArray_$Impl_$.fromBytes = function(b) {
	return tannus_io_impl_NodeBinary.fromBytes(b);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.fromBase64 = function(s) {
	return tannus_io_impl_NodeBinary.fromBytes(haxe_crypto_Base64.decode(s));
};
tannus_io__$ByteArray_ByteArray_$Impl_$.fromVector = function(vec) {
	var size = vec.length;
	var this1 = new tannus_io_impl_NodeBinary(size,new Buffer(size));
	var data = this1;
	var _g1 = 0;
	var _g = vec.length;
	while(_g1 < _g) {
		var index = _g1++;
		data.set(index,vec[index]);
	}
	return data;
};
var tannus_io_Output = function() {
	this.__b = [];
	this.opened = this.closed = this.paused = false;
};
$hxClasses["tannus.io.Output"] = tannus_io_Output;
tannus_io_Output.__name__ = ["tannus","io","Output"];
tannus_io_Output.prototype = {
	open: function(f) {
		this.opened = true;
	}
	,close: function(f) {
		this.closed = true;
	}
	,pause: function() {
		this.paused = true;
	}
	,resume: function() {
		if(this.paused) {
			this.paused = false;
			this.flush();
		}
	}
	,write: function(data,onwritten) {
		if(this.opened && !this.closed) {
			if(this.paused) {
				this.__b.push(data);
			} else {
				if(onwritten == null) {
					onwritten = function() {
					};
				}
				this.__write(data,onwritten);
			}
		} else {
			var this1 = new Error("Cannot write to closed or unopened Stream!");
			throw new js__$Boot_HaxeError(this1);
		}
	}
	,__write: function(data,onwritten) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,flush: function(done) {
		var stack = new tannus_ds_AsyncStack();
		while(this.__b.length > 0) stack.under((function(a1,f) {
			return function(a2) {
				f[0](a1[0],a2);
			};
		})([this.__b.shift()],[$bind(this,this.__write)]));
		stack.run(function() {
			if(done != null) {
				done();
			}
		});
	}
	,buffer: function(data) {
		this.__b.push(data);
	}
	,error: function(e) {
		throw new js__$Boot_HaxeError(e);
	}
	,get_writable: function() {
		if(this.opened) {
			return !this.closed;
		} else {
			return false;
		}
	}
	,__b: null
	,opened: null
	,closed: null
	,paused: null
	,__class__: tannus_io_Output
	,__properties__: {get_writable:"get_writable"}
};
var tannus_io_ByteArrayOutput = function() {
	tannus_io_Output.call(this);
	this.chunkSize = -1;
	this.__chunk = null;
};
$hxClasses["tannus.io.ByteArrayOutput"] = tannus_io_ByteArrayOutput;
tannus_io_ByteArrayOutput.__name__ = ["tannus","io","ByteArrayOutput"];
tannus_io_ByteArrayOutput.__super__ = tannus_io_Output;
tannus_io_ByteArrayOutput.prototype = $extend(tannus_io_Output.prototype,{
	write: function(data,done) {
		if(this.opened && !this.closed) {
			if(this.paused) {
				this.__b.push(data);
			} else {
				if(done == null) {
					done = function() {
					};
				}
				if(this.chunkSize != -1) {
					if(this.__chunk != null) {
						data = this.__chunk.concat(data);
						this.__chunk = null;
					}
					if(data._length > this.chunkSize) {
						data = data.slice(0,this.chunkSize);
						this.__chunk = data.slice(this.chunkSize);
					}
				}
				this.__write(data,done);
			}
		} else {
			var this1 = new Error("Cannot write to closed or unopened Stream!");
			throw new js__$Boot_HaxeError(this1);
		}
	}
	,close: function(done) {
		tannus_io_Output.prototype.close.call(this,done);
		if(done == null) {
			done = function() {
			};
		}
		if(this.__chunk != null) {
			this.__write(this.__chunk,done);
		} else {
			done();
		}
	}
	,truncate: function(len) {
		this.__size(len);
	}
	,seek: function(pos) {
		return this.__position(pos);
	}
	,__size: function(value) {
		return -1;
	}
	,__position: function(value) {
		return -1;
	}
	,get_length: function() {
		return this.__size();
	}
	,set_length: function(v) {
		return this.__size(v);
	}
	,get_position: function() {
		return this.__position();
	}
	,set_position: function(v) {
		return this.__position(v);
	}
	,chunkSize: null
	,__chunk: null
	,__class__: tannus_io_ByteArrayOutput
	,__properties__: $extend(tannus_io_Output.prototype.__properties__,{set_position:"set_position",get_position:"get_position",set_length:"set_length",get_length:"get_length"})
});
var tannus_io_ByteStack = function(data) {
	tannus_ds_Stack.call(this,[]);
	this.b = data;
	this.i = 0;
};
$hxClasses["tannus.io.ByteStack"] = tannus_io_ByteStack;
tannus_io_ByteStack.__name__ = ["tannus","io","ByteStack"];
tannus_io_ByteStack.__super__ = tannus_ds_Stack;
tannus_io_ByteStack.prototype = $extend(tannus_ds_Stack.prototype,{
	read: function(dis) {
		var this1 = new tannus_io_impl_NodeBinary(dis,new Buffer(dis));
		var data = this1;
		var _g1 = 0;
		var _g = dis;
		while(_g1 < _g) {
			var i = _g1++;
			var c = this.pop();
			data.set(data.position++,c);
		}
		return data;
	}
	,readUntil: function(delimiter) {
		var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
		var res = this1;
		while(this.peek() != delimiter) res.push(this.pop());
		return res;
	}
	,peekAhead: function(dis) {
		var this1 = new tannus_io_impl_NodeBinary(dis,new Buffer(dis));
		var data = this1;
		var _g1 = 1;
		var _g = dis + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var c = this.peek(i);
			data.set(data.position++,c);
		}
		return data;
	}
	,copy: function() {
		var c = new tannus_io_ByteStack(this.b);
		c.i = this.i;
		return c;
	}
	,peek: function(dis) {
		if(dis == null) {
			dis = 0;
		}
		return this.b.get(this.i + dis);
	}
	,pop: function() {
		return this.b.get(this.i++);
	}
	,get_empty: function() {
		return this.i >= this.b._length;
	}
	,seek: function(pos) {
		this.i = pos;
	}
	,getByteArray: function() {
		return this.b.copy();
	}
	,remaining: function() {
		return this.b._length - this.i;
	}
	,b: null
	,i: null
	,__class__: tannus_io_ByteStack
});
var tannus_io__$Getter_Getter_$Impl_$ = {};
$hxClasses["tannus.io._Getter.Getter_Impl_"] = tannus_io__$Getter_Getter_$Impl_$;
tannus_io__$Getter_Getter_$Impl_$.__name__ = ["tannus","io","_Getter","Getter_Impl_"];
tannus_io__$Getter_Getter_$Impl_$.__properties__ = {get_v:"get_v"}
tannus_io__$Getter_Getter_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
tannus_io__$Getter_Getter_$Impl_$.get_v = function(this1) {
	return this1();
};
tannus_io__$Getter_Getter_$Impl_$.get = function(this1) {
	return this1();
};
tannus_io__$Getter_Getter_$Impl_$.toString = function(this1) {
	return Std.string(this1());
};
tannus_io__$Getter_Getter_$Impl_$.transform = function(this1,f) {
	var trans_get = function() {
		return f(this1());
	};
	var this2 = trans_get;
	return this2;
};
tannus_io__$Getter_Getter_$Impl_$.addNumber = function(get,val) {
	return get() + val;
};
tannus_io__$Getter_Getter_$Impl_$.addString = function(get,val) {
	return get() + val;
};
var tannus_io_LexerBase = function() { };
$hxClasses["tannus.io.LexerBase"] = tannus_io_LexerBase;
tannus_io_LexerBase.__name__ = ["tannus","io","LexerBase"];
tannus_io_LexerBase.prototype = {
	readGroup: function(start,end,esc,recursive) {
		if(recursive == null) {
			recursive = true;
		}
		var level = 1;
		var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
		var data = this1;
		var escaped = false;
		while(!(this.buffer != null && this.buffer.get_empty()) && level > 0) {
			var c = this.buffer.peek(null);
			if(!escaped) {
				if(c == start) {
					if(start != end) {
						++level;
					} else {
						--level;
					}
				} else if(c == end) {
					--level;
				} else if(esc != null && c == esc) {
					escaped = true;
				}
			} else {
				escaped = false;
			}
			if(level > 0) {
				data.push(c);
			}
			this.buffer.pop();
		}
		return data;
	}
	,readUntil: function(end,esc) {
		var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
		var d = this1;
		var escaped = false;
		while(!(this.buffer != null && this.buffer.get_empty())) {
			var c = this.buffer.peek(null);
			if(!escaped) {
				if(c == end) {
					this.buffer.pop();
					break;
				} else if(esc != null && c == esc) {
					escaped = true;
				}
			} else {
				escaped = false;
			}
			d.push(this.buffer.pop());
		}
		return d;
	}
	,next: function(dis) {
		return this.buffer.peek(dis);
	}
	,advance: function() {
		return this.buffer.pop();
	}
	,get_done: function() {
		if(this.buffer != null) {
			return this.buffer.get_empty();
		} else {
			return false;
		}
	}
	,buffer: null
	,__class__: tannus_io_LexerBase
	,__properties__: {get_done:"get_done"}
};
var tannus_io__$Pointer_Pointer_$Impl_$ = {};
$hxClasses["tannus.io._Pointer.Pointer_Impl_"] = tannus_io__$Pointer_Pointer_$Impl_$;
tannus_io__$Pointer_Pointer_$Impl_$.__name__ = ["tannus","io","_Pointer","Pointer_Impl_"];
tannus_io__$Pointer_Pointer_$Impl_$.__properties__ = {set_deleter:"set_deleter",get_deleter:"get_deleter",get_set:"get_set",get_get:"get_get",get_exists:"get_exists",set__:"set__",get__:"get__",set_setter:"set_setter",get_setter:"get_setter",set_getter:"set_getter",get_getter:"get_getter",set_v:"set_v",get_v:"get_v",set_value:"set_value",get_value:"get_value",get_self:"get_self"}
tannus_io__$Pointer_Pointer_$Impl_$._new = function(g,s,d) {
	var this1 = new tannus_io__$Pointer_Ref(g,s);
	return this1;
};
tannus_io__$Pointer_Pointer_$Impl_$.get_self = function(this1) {
	return this1;
};
tannus_io__$Pointer_Pointer_$Impl_$.get_value = function(this1) {
	return this1.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.set_value = function(this1,nv) {
	return this1.set(nv);
};
tannus_io__$Pointer_Pointer_$Impl_$.get_v = function(this1) {
	return this1.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.set_v = function(this1,nv) {
	return this1.set(nv);
};
tannus_io__$Pointer_Pointer_$Impl_$.get_getter = function(this1) {
	return this1.getter;
};
tannus_io__$Pointer_Pointer_$Impl_$.set_getter = function(this1,ng) {
	return this1.getter = ng;
};
tannus_io__$Pointer_Pointer_$Impl_$.get_setter = function(this1) {
	return this1.setter;
};
tannus_io__$Pointer_Pointer_$Impl_$.set_setter = function(this1,ns) {
	return this1.setter = ns;
};
tannus_io__$Pointer_Pointer_$Impl_$.get__ = function(this1) {
	return this1.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.set__ = function(this1,v) {
	return this1.set(v);
};
tannus_io__$Pointer_Pointer_$Impl_$.get_exists = function(this1) {
	return this1.get() != null;
};
tannus_io__$Pointer_Pointer_$Impl_$.get_get = function(this1) {
	return $bind(this1,this1.get);
};
tannus_io__$Pointer_Pointer_$Impl_$.get_set = function(this1) {
	return $bind(this1,this1.set);
};
tannus_io__$Pointer_Pointer_$Impl_$.get_deleter = function(this1) {
	return this1.deleter;
};
tannus_io__$Pointer_Pointer_$Impl_$.set_deleter = function(this1,nd) {
	return this1.deleter = nd;
};
tannus_io__$Pointer_Pointer_$Impl_$["delete"] = function(this1) {
	this1["delete"]();
};
tannus_io__$Pointer_Pointer_$Impl_$.to_underlying = function(this1) {
	return this1.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.setvalue = function(this1,v) {
	return this1.set(v);
};
tannus_io__$Pointer_Pointer_$Impl_$.setPointer = function(this1,v) {
	return this1.set(v.get());
};
tannus_io__$Pointer_Pointer_$Impl_$.access = function(this1,v) {
	if(v != null) {
		return this1.set(v);
	} else {
		return this1.get();
	}
};
tannus_io__$Pointer_Pointer_$Impl_$.attach_str = function(this1,str) {
	var s = this1.setter;
	this1.setter = tannus_io__$Setter_Setter_$Impl_$.attach(s,str);
};
tannus_io__$Pointer_Pointer_$Impl_$._transform = function(this1,mget,mset) {
	var this2 = new tannus_io__$Pointer_Ref(tannus_io__$Getter_Getter_$Impl_$.transform(this1.getter,mget),tannus_io__$Setter_Setter_$Impl_$.transform(this1.setter,mset));
	return this2;
};
tannus_io__$Pointer_Pointer_$Impl_$.clone = function(this1) {
	var this2 = new tannus_io__$Pointer_Ref(this1.getter,this1.setter);
	return this2;
};
tannus_io__$Pointer_Pointer_$Impl_$.toGetter = function(this1) {
	return this1.getter;
};
tannus_io__$Pointer_Pointer_$Impl_$.toSetter = function(this1) {
	return this1.setter;
};
tannus_io__$Pointer_Pointer_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_io__$Pointer_Pointer_$Impl_$.iterator = function(self) {
	return $iterator(self.get())();
};
tannus_io__$Pointer_Pointer_$Impl_$.pre_decrement = function(a) {
	a.set(a.get() - 1);
	return a.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.pre_increment = function(a) {
	a.set(a.get() + 1);
	return a.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.post_decrement = function(a) {
	var r = a.get();
	a.set(r - 1);
	return r;
};
tannus_io__$Pointer_Pointer_$Impl_$.post_increment = function(a) {
	var r = a.get();
	a.set(r + 1);
	return r;
};
tannus_io__$Pointer_Pointer_$Impl_$.fromAccessor = function(af) {
	var this1;
	var f = af;
	var f1 = af;
	this1 = new tannus_io__$Pointer_Ref(function() {
		return f(null);
	},function(a1) {
		return f1(a1);
	});
	return this1;
};
var tannus_io__$Pointer_Ref = function(g,s,d) {
	var _gthis = this;
	this.getter = g;
	this.setter = s;
	this.deleter = d;
	var prop = function(n) {
		var tmp;
		var prop1;
		if(_gthis == null) {
			prop1 = null;
		} else {
			var prop2;
			if(_gthis.__properties__) {
				tmp = _gthis.__properties__["get_" + "__defineGetter__"];
				prop2 = tmp;
			} else {
				prop2 = false;
			}
			if(prop2) {
				prop1 = _gthis[tmp]();
			} else {
				prop1 = _gthis["__defineGetter__"];
			}
		}
		prop1.call(_gthis,n,$bind(_gthis,_gthis.get));
		var tmp1;
		var prop3;
		if(_gthis == null) {
			prop3 = null;
		} else {
			var prop4;
			if(_gthis.__properties__) {
				tmp1 = _gthis.__properties__["get_" + "__defineSetter__"];
				prop4 = tmp1;
			} else {
				prop4 = false;
			}
			if(prop4) {
				prop3 = _gthis[tmp1]();
			} else {
				prop3 = _gthis["__defineSetter__"];
			}
		}
		prop3.call(_gthis,n,$bind(_gthis,_gthis.set));
	};
	var _g = 0;
	var _g1 = ["value","v","_"];
	while(_g < _g1.length) {
		var n1 = _g1[_g];
		++_g;
		prop(n1);
	}
};
$hxClasses["tannus.io._Pointer.Ref"] = tannus_io__$Pointer_Ref;
tannus_io__$Pointer_Ref.__name__ = ["tannus","io","_Pointer","Ref"];
tannus_io__$Pointer_Ref.prototype = {
	get: function() {
		return this.getter();
	}
	,set: function(v) {
		return this.setter(v);
	}
	,'delete': function() {
		if(this.deleter != null) {
			this.deleter();
		}
	}
	,toString: function() {
		return Std.string(this.get());
	}
	,getter: null
	,setter: null
	,deleter: null
	,__class__: tannus_io__$Pointer_Ref
};
var tannus_io__$RegEx_RegEx_$Impl_$ = {};
$hxClasses["tannus.io._RegEx.RegEx_Impl_"] = tannus_io__$RegEx_RegEx_$Impl_$;
tannus_io__$RegEx_RegEx_$Impl_$.__name__ = ["tannus","io","_RegEx","RegEx_Impl_"];
tannus_io__$RegEx_RegEx_$Impl_$._new = function(pattern) {
	var this1 = pattern;
	return this1;
};
tannus_io__$RegEx_RegEx_$Impl_$.matches = function(this1,text) {
	var ma = [];
	this1.map(text,function(e) {
		var parts = [];
		var i = 0;
		var matched = true;
		while(matched) try {
			var p = e.matched(i);
			if(p == null) {
				matched = false;
				break;
			}
			parts.push(p);
			++i;
		} catch( err ) {
			matched = false;
			break;
		}
		ma.push(parts);
		return "";
	});
	return ma;
};
tannus_io__$RegEx_RegEx_$Impl_$.allMatches = function(this1,text) {
	var all = [];
	this1.map(text,function(e) {
		var p = e.matchedPos();
		var pos = { start : p.pos, len : p.len};
		var groups = [];
		var index = 0;
		var matched = true;
		while(matched) try {
			var s = e.matched(index);
			if(s == null) {
				matched = false;
				break;
			}
			groups.push(s);
			++index;
		} catch( error ) {
			matched = false;
			break;
		}
		var matchedText = groups.shift();
		var matchObject = new tannus_io_impl_RegExMatch(this1,[text,matchedText],pos,groups);
		all.push(matchObject);
		return "";
	});
	return all;
};
tannus_io__$RegEx_RegEx_$Impl_$.mpos = function(this1,p) {
	return { start : p.pos, len : p.len};
};
tannus_io__$RegEx_RegEx_$Impl_$.search = function(this1,s) {
	return tannus_io__$RegEx_RegEx_$Impl_$.matches(this1,s);
};
tannus_io__$RegEx_RegEx_$Impl_$.extract = function(this1,str,n) {
	if(n == null) {
		n = 0;
	}
	return tannus_io__$RegEx_RegEx_$Impl_$.matches(this1,str)[n];
};
tannus_io__$RegEx_RegEx_$Impl_$.extractGroups = function(this1,str,n) {
	if(n == null) {
		n = 0;
	}
	return tannus_io__$RegEx_RegEx_$Impl_$.matches(this1,str)[0].slice(1);
};
tannus_io__$RegEx_RegEx_$Impl_$.findAll = function(this1,s) {
	var all = [];
	this1.map(s,function(e) {
		var pos = e.matchedPos();
		all.push({ "str" : s, "pos" : e.matchedPos()});
		return s;
	});
	return all;
};
tannus_io__$RegEx_RegEx_$Impl_$.replace = function(this1,rtext,text) {
	return this1.map(rtext,function(e) {
		var i = 0;
		var whole = null;
		var subs = [];
		while(true) try {
			var s = this1.matched(i++);
			if(whole == null) {
				whole = s;
			} else {
				subs.push(s);
			}
		} catch( err ) {
			break;
		}
		var _t = text;
		var _g1 = 0;
		var _g = subs.length;
		while(_g1 < _g) {
			var ii = _g1++;
			_t = StringTools.replace(_t,"{{" + ii + "}}",subs[ii]);
		}
		return _t;
	});
};
tannus_io__$RegEx_RegEx_$Impl_$.toTester = function(this1) {
	var f = $bind(this1,this1.match);
	return function(s) {
		return f(s);
	};
};
var tannus_io__$Setter_Setter_$Impl_$ = {};
$hxClasses["tannus.io._Setter.Setter_Impl_"] = tannus_io__$Setter_Setter_$Impl_$;
tannus_io__$Setter_Setter_$Impl_$.__name__ = ["tannus","io","_Setter","Setter_Impl_"];
tannus_io__$Setter_Setter_$Impl_$.__properties__ = {set_v:"set_v"}
tannus_io__$Setter_Setter_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
tannus_io__$Setter_Setter_$Impl_$.set_v = function(this1,nv) {
	return this1(nv);
};
tannus_io__$Setter_Setter_$Impl_$.wrap = function(this1,f) {
	var self = this1;
	this1 = function(v) {
		return f(self,v);
	};
};
tannus_io__$Setter_Setter_$Impl_$.attach = function(this1,other) {
	var f = function(s,val) {
		other(val);
		return s(val);
	};
	var self = this1;
	this1 = function(v) {
		return f(self,v);
	};
	var this2 = this1;
	return this2;
};
tannus_io__$Setter_Setter_$Impl_$.transform = function(this1,f) {
	var this2 = function(o) {
		var v = f(o);
		this1(v);
		return o;
	};
	return this2;
};
tannus_io__$Setter_Setter_$Impl_$.set = function(this1,v) {
	return this1(v);
};
var tannus_io_Signal = function() {
	this.handlers = [];
	this.ondelete = function() {
	};
};
$hxClasses["tannus.io.Signal"] = tannus_io_Signal;
tannus_io_Signal.__name__ = ["tannus","io","Signal"];
tannus_io_Signal.prototype = {
	add: function(handler) {
		this.handlers.push(handler);
	}
	,listen: function(f,once) {
		if(once == null) {
			once = false;
		}
		if(!once) {
			this.handlers.push(tannus_io__$Signal_Handler.Normal(f));
		} else {
			var _fired = false;
			var this1 = function() {
				return _fired;
			};
			var this2 = function(v) {
				_fired = v;
				return _fired;
			};
			var this3 = new tannus_io__$Pointer_Ref(this1,this2);
			var fired = this3;
			this.handlers.push(tannus_io__$Signal_Handler.Once(f,fired));
		}
	}
	,on: function(f,once) {
		if(once == null) {
			once = false;
		}
		this.listen(f,once);
	}
	,once: function(f) {
		this.listen(f,true);
	}
	,when: function(test,f) {
		this.handlers.push(tannus_io__$Signal_Handler.Tested(f,test));
	}
	,times: function(count,f) {
		var _fired = 0;
		var this1 = function() {
			return _fired;
		};
		var this2 = function(v) {
			_fired = v;
			return _fired;
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		var fired = this3;
		this.handlers.push(tannus_io__$Signal_Handler.Counted(f,count,fired));
	}
	,every: function(wait,f) {
		var _rem = 0;
		var this1 = function() {
			return _rem;
		};
		var this2 = function(v) {
			_rem = v;
			return _rem;
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		var rem = this3;
		this.handlers.push(tannus_io__$Signal_Handler.Every(f,wait,rem));
	}
	,ignore: function(func) {
		this.handlers = this.handlers.filter(function(h) {
			switch(h[1]) {
			case 0:
				var f = h[2];
				return !Reflect.compareMethods(f,func);
			case 1:
				var f1 = h[2];
				return !Reflect.compareMethods(f1,func);
			case 2:
				var f2 = h[2];
				return !Reflect.compareMethods(f2,func);
			case 3:
				var f3 = h[2];
				return !Reflect.compareMethods(f3,func);
			case 4:
				var f4 = h[2];
				return !Reflect.compareMethods(f4,func);
			}
		});
	}
	,off: function(f) {
		this.ignore(f);
	}
	,clear: function() {
		this.handlers = [];
	}
	,callHandler: function(h,arg) {
		switch(h[1]) {
		case 0:
			var f = h[2];
			f(arg);
			break;
		case 1:
			var called = h[4];
			var count = h[3];
			var f1 = h[2];
			if(called.get() <= count) {
				f1(arg);
				called.set(called.get() + 1);
			}
			break;
		case 2:
			var rem = h[4];
			var wait = h[3];
			var f2 = h[2];
			if(rem.get() == wait) {
				f2(arg);
				rem.set(0);
			} else {
				rem.set(rem.get() + 1);
			}
			break;
		case 3:
			var fired = h[3];
			var f3 = h[2];
			if(!fired.get()) {
				f3(arg);
				fired.set(true);
			}
			break;
		case 4:
			var test = h[3];
			var f4 = h[2];
			if(test(arg)) {
				f4(arg);
			}
			break;
		}
	}
	,broadcast: function(data) {
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			this.callHandler(h,data);
		}
	}
	,call: function(data) {
		this.broadcast(data);
	}
	,handlers: null
	,ondelete: null
	,__class__: tannus_io_Signal
};
var tannus_io__$Signal_Handler = $hxClasses["tannus.io._Signal.Handler"] = { __ename__ : ["tannus","io","_Signal","Handler"], __constructs__ : ["Normal","Counted","Every","Once","Tested"] };
tannus_io__$Signal_Handler.Normal = function(func) { var $x = ["Normal",0,func]; $x.__enum__ = tannus_io__$Signal_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal_Handler.Counted = function(func,count,fired) { var $x = ["Counted",1,func,count,fired]; $x.__enum__ = tannus_io__$Signal_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal_Handler.Every = function(func,wait,remaining) { var $x = ["Every",2,func,wait,remaining]; $x.__enum__ = tannus_io__$Signal_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal_Handler.Once = function(func,fired) { var $x = ["Once",3,func,fired]; $x.__enum__ = tannus_io__$Signal_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal_Handler.Tested = function(func,test) { var $x = ["Tested",4,func,test]; $x.__enum__ = tannus_io__$Signal_Handler; $x.toString = $estr; return $x; };
var tannus_io_Signal2 = function() {
	this.handlers = [];
};
$hxClasses["tannus.io.Signal2"] = tannus_io_Signal2;
tannus_io_Signal2.__name__ = ["tannus","io","Signal2"];
tannus_io_Signal2.prototype = {
	add: function(handler) {
		this.handlers.push(handler);
	}
	,listen: function(f,once) {
		if(once == null) {
			once = false;
		}
		if(!once) {
			this.handlers.push(tannus_io__$Signal2_Handler.Normal(f));
		} else {
			var _fired = false;
			var this1 = function() {
				return _fired;
			};
			var this2 = function(v) {
				_fired = v;
				return _fired;
			};
			var this3 = new tannus_io__$Pointer_Ref(this1,this2);
			var fired = this3;
			this.handlers.push(tannus_io__$Signal2_Handler.Once(f,fired));
		}
	}
	,on: function(f,once) {
		if(once == null) {
			once = false;
		}
		this.listen(f,once);
	}
	,once: function(f) {
		this.listen(f,true);
	}
	,when: function(test,f) {
		this.handlers.push(tannus_io__$Signal2_Handler.Tested(f,test));
	}
	,times: function(count,f) {
		var _status = 0;
		var this1 = function() {
			return _status;
		};
		var this2 = function(v) {
			_status = v;
			return _status;
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		this.handlers.push(tannus_io__$Signal2_Handler.Counted(f,count,this3));
	}
	,every: function(wait,f) {
		var _s = 0;
		var this1 = function() {
			return _s;
		};
		var this2 = function(v) {
			_s = v;
			return _s;
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		var s = this3;
		this.handlers.push(tannus_io__$Signal2_Handler.Every(f,wait,s));
	}
	,ignore: function(func) {
		var toIgnore = [];
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			switch(h[1]) {
			case 0:
				var f = h[2];
				if(Reflect.compareMethods(f,func)) {
					toIgnore.push(h);
				}
				break;
			case 1:
				var f1 = h[2];
				if(Reflect.compareMethods(f1,func)) {
					toIgnore.push(h);
				}
				break;
			case 2:
				var f2 = h[2];
				if(Reflect.compareMethods(f2,func)) {
					toIgnore.push(h);
				}
				break;
			case 3:
				var f3 = h[2];
				if(Reflect.compareMethods(f3,func)) {
					toIgnore.push(h);
				}
				break;
			case 4:
				var f4 = h[2];
				if(Reflect.compareMethods(f4,func)) {
					toIgnore.push(h);
				}
				break;
			}
		}
		var _g2 = 0;
		while(_g2 < toIgnore.length) {
			var h1 = toIgnore[_g2];
			++_g2;
			HxOverrides.remove(this.handlers,h1);
		}
	}
	,off: function(f) {
		this.ignore(f);
	}
	,callHandler: function(h,a,b) {
		switch(h[1]) {
		case 0:
			var f = h[2];
			f(a,b);
			break;
		case 1:
			var fired = h[3];
			var f1 = h[2];
			if(!fired.get()) {
				f1(a,b);
				fired.set(true);
			}
			break;
		case 2:
			var fired1 = h[4];
			var max = h[3];
			var f2 = h[2];
			if(fired1.get() <= max) {
				f2(a,b);
				fired1.set(fired1.get() + 1);
			}
			break;
		case 3:
			var rem = h[4];
			var wait = h[3];
			var f3 = h[2];
			if(rem.get() == wait) {
				rem.set(0);
				f3(a,b);
			} else {
				rem.set(rem.get() + 1);
			}
			break;
		case 4:
			var test = h[3];
			var f4 = h[2];
			if(test(a,b)) {
				f4(a,b);
			}
			break;
		}
	}
	,broadcast: function(a,b) {
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			this.callHandler(h,a,b);
		}
	}
	,call: function(a,b) {
		this.broadcast(a,b);
	}
	,handlers: null
	,__class__: tannus_io_Signal2
};
var tannus_io__$Signal2_Handler = $hxClasses["tannus.io._Signal2.Handler"] = { __ename__ : ["tannus","io","_Signal2","Handler"], __constructs__ : ["Normal","Once","Counted","Every","Tested"] };
tannus_io__$Signal2_Handler.Normal = function(func) { var $x = ["Normal",0,func]; $x.__enum__ = tannus_io__$Signal2_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal2_Handler.Once = function(func,fired) { var $x = ["Once",1,func,fired]; $x.__enum__ = tannus_io__$Signal2_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal2_Handler.Counted = function(func,count,fired) { var $x = ["Counted",2,func,count,fired]; $x.__enum__ = tannus_io__$Signal2_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal2_Handler.Every = function(func,wait,rem) { var $x = ["Every",3,func,wait,rem]; $x.__enum__ = tannus_io__$Signal2_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal2_Handler.Tested = function(func,test) { var $x = ["Tested",4,func,test]; $x.__enum__ = tannus_io__$Signal2_Handler; $x.toString = $estr; return $x; };
var tannus_io_VoidSignal = function() {
	this.handlers = [];
	this.ondelete = function() {
	};
	this._remove = [];
};
$hxClasses["tannus.io.VoidSignal"] = tannus_io_VoidSignal;
tannus_io_VoidSignal.__name__ = ["tannus","io","VoidSignal"];
tannus_io_VoidSignal.prototype = {
	clone: function() {
		var c = new tannus_io_VoidSignal();
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			switch(h[1]) {
			case 0:
				var f = h[2];
				var h1 = tannus_io__$VoidSignal_Handler.Normal((function(f1) {
					return function() {
						f1[0]();
					};
				})([f]));
				c.handlers.push(h1);
				break;
			case 1:
				var fired = h[4];
				var count = h[3];
				var f2 = h[2];
				var h2 = (function(f3) {
					return function() {
						f3[0]();
					};
				})([f2]);
				var _v = [fired];
				var this1 = (function(_v1) {
					return function() {
						return _v1[0];
					};
				})(_v);
				var this2 = (function(_v2) {
					return function(v) {
						return _v2[0] = v;
					};
				})(_v);
				var this3 = new tannus_io__$Pointer_Ref(this1,this2);
				var h3 = tannus_io__$VoidSignal_Handler.Counted(h2,count,this3.get());
				c.handlers.push(h3);
				break;
			case 2:
				var remaining = h[4];
				var wait = h[3];
				var f4 = h[2];
				var h4 = (function(f5) {
					return function() {
						f5[0]();
					};
				})([f4]);
				var _v3 = [remaining];
				var this4 = (function(_v4) {
					return function() {
						return _v4[0];
					};
				})(_v3);
				var this5 = (function(_v5) {
					return function(v1) {
						return _v5[0] = v1;
					};
				})(_v3);
				var this6 = new tannus_io__$Pointer_Ref(this4,this5);
				var h5 = tannus_io__$VoidSignal_Handler.Every(h4,wait,this6.get());
				c.handlers.push(h5);
				break;
			case 3:
				var fired1 = h[3];
				var f6 = h[2];
				if(!fired1.get()) {
					var h6 = (function(f7) {
						return function() {
							f7[0]();
						};
					})([f6]);
					var _v6 = [false];
					var this7 = (function(_v7) {
						return function() {
							return _v7[0];
						};
					})(_v6);
					var this8 = (function(_v8) {
						return function(v2) {
							return _v8[0] = v2;
						};
					})(_v6);
					var this9 = new tannus_io__$Pointer_Ref(this7,this8);
					c.handlers.push(tannus_io__$VoidSignal_Handler.Once(h6,this9));
				}
				break;
			}
		}
		return c;
	}
	,add: function(h) {
		this.handlers.push(h);
	}
	,on: function(f) {
		this.handlers.push(tannus_io__$VoidSignal_Handler.Normal(f));
	}
	,once: function(f) {
		var _v = false;
		var this1 = function() {
			return _v;
		};
		var this2 = function(v) {
			_v = v;
			return _v;
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		this.handlers.push(tannus_io__$VoidSignal_Handler.Once(f,this3));
	}
	,times: function(count,f) {
		var _v = 0;
		var this1 = function() {
			return _v;
		};
		var this2 = function(v) {
			_v = v;
			return _v;
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		this.handlers.push(tannus_io__$VoidSignal_Handler.Counted(f,count,this3));
	}
	,every: function(interval,f) {
		var _v = interval;
		var this1 = function() {
			return _v;
		};
		var this2 = function(v) {
			_v = v;
			return _v;
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		this.handlers.push(tannus_io__$VoidSignal_Handler.Every(f,interval,this3));
	}
	,ignore: function(func) {
		var ignores = [];
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			switch(h[1]) {
			case 0:
				var f = h[2];
				if(Reflect.compareMethods(f,func)) {
					ignores.push(h);
				}
				break;
			case 1:
				var f1 = h[2];
				if(Reflect.compareMethods(f1,func)) {
					ignores.push(h);
				}
				break;
			case 2:
				var f2 = h[2];
				if(Reflect.compareMethods(f2,func)) {
					ignores.push(h);
				}
				break;
			case 3:
				var f3 = h[2];
				if(Reflect.compareMethods(f3,func)) {
					ignores.push(h);
				}
				break;
			}
		}
		var _g2 = 0;
		while(_g2 < ignores.length) {
			var h1 = ignores[_g2];
			++_g2;
			HxOverrides.remove(this.handlers,h1);
		}
	}
	,off: function(f) {
		this.ignore(f);
	}
	,clear: function() {
		this.handlers = [];
	}
	,callHandler: function(h) {
		switch(h[1]) {
		case 0:
			var f = h[2];
			f();
			break;
		case 1:
			var fired = h[4];
			var count = h[3];
			var f1 = h[2];
			if(fired.get() < count) {
				f1();
				fired.set(fired.get() + 1);
			} else {
				this._remove.push(h);
			}
			break;
		case 2:
			var rem = h[4];
			var wait = h[3];
			var f2 = h[2];
			if(rem.get() == wait) {
				f2();
				rem.set(0);
			} else {
				rem.set(rem.get() + 1);
			}
			break;
		case 3:
			var fired1 = h[3];
			var f3 = h[2];
			if(!fired1.get()) {
				f3();
				this._remove.push(h);
			}
			break;
		}
	}
	,call: function() {
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			this.callHandler(h);
		}
		var _g2 = 0;
		var _g11 = this._remove;
		while(_g2 < _g11.length) {
			var h1 = _g11[_g2];
			++_g2;
			HxOverrides.remove(this.handlers,h1);
		}
		this._remove = [];
	}
	,fire: function() {
		this.call();
	}
	,handlers: null
	,ondelete: null
	,_remove: null
	,__class__: tannus_io_VoidSignal
};
var tannus_io__$VoidSignal_Handler = $hxClasses["tannus.io._VoidSignal.Handler"] = { __ename__ : ["tannus","io","_VoidSignal","Handler"], __constructs__ : ["Normal","Counted","Every","Once"] };
tannus_io__$VoidSignal_Handler.Normal = function(func) { var $x = ["Normal",0,func]; $x.__enum__ = tannus_io__$VoidSignal_Handler; $x.toString = $estr; return $x; };
tannus_io__$VoidSignal_Handler.Counted = function(func,count,fired) { var $x = ["Counted",1,func,count,fired]; $x.__enum__ = tannus_io__$VoidSignal_Handler; $x.toString = $estr; return $x; };
tannus_io__$VoidSignal_Handler.Every = function(func,wait,remaining) { var $x = ["Every",2,func,wait,remaining]; $x.__enum__ = tannus_io__$VoidSignal_Handler; $x.toString = $estr; return $x; };
tannus_io__$VoidSignal_Handler.Once = function(func,fired) { var $x = ["Once",3,func,fired]; $x.__enum__ = tannus_io__$VoidSignal_Handler; $x.toString = $estr; return $x; };
var tannus_io_impl_BinaryError = $hxClasses["tannus.io.impl.BinaryError"] = { __ename__ : ["tannus","io","impl","BinaryError"], __constructs__ : ["Overflow","OutOfBounds","Custom"] };
tannus_io_impl_BinaryError.Overflow = ["Overflow",0];
tannus_io_impl_BinaryError.Overflow.toString = $estr;
tannus_io_impl_BinaryError.Overflow.__enum__ = tannus_io_impl_BinaryError;
tannus_io_impl_BinaryError.OutOfBounds = ["OutOfBounds",1];
tannus_io_impl_BinaryError.OutOfBounds.toString = $estr;
tannus_io_impl_BinaryError.OutOfBounds.__enum__ = tannus_io_impl_BinaryError;
tannus_io_impl_BinaryError.Custom = function(error) { var $x = ["Custom",2,error]; $x.__enum__ = tannus_io_impl_BinaryError; $x.toString = $estr; return $x; };
var tannus_io_impl_BinaryIterator = function(b) {
	this.bin = b;
	this.index = 0;
};
$hxClasses["tannus.io.impl.BinaryIterator"] = tannus_io_impl_BinaryIterator;
tannus_io_impl_BinaryIterator.__name__ = ["tannus","io","impl","BinaryIterator"];
tannus_io_impl_BinaryIterator.prototype = {
	hasNext: function() {
		return this.index <= this.bin._length - 1;
	}
	,next: function() {
		var c = this.bin.get(this.index);
		this.index++;
		return c;
	}
	,index: null
	,bin: null
	,__class__: tannus_io_impl_BinaryIterator
};
var tannus_io_impl_NodeBinary = $hx_exports["Binary"] = function(size,data) {
	tannus_io_Binary.call(this,size,data);
};
$hxClasses["tannus.io.impl.NodeBinary"] = tannus_io_impl_NodeBinary;
tannus_io_impl_NodeBinary.__name__ = ["tannus","io","impl","NodeBinary"];
tannus_io_impl_NodeBinary.alloc = function(size) {
	return new tannus_io_impl_NodeBinary(size,new Buffer(size));
};
tannus_io_impl_NodeBinary.ofData = function(data) {
	var bufferTarget = new Buffer(data.length);
	data.copy(bufferTarget,0,0,data.length);
	return new tannus_io_impl_NodeBinary(data.length,bufferTarget);
};
tannus_io_impl_NodeBinary.ofString = function(s) {
	return new tannus_io_impl_NodeBinary(s.length,new Buffer(s));
};
tannus_io_impl_NodeBinary.fromBytes = function(b) {
	var size = b.length;
	var nb = new tannus_io_impl_NodeBinary(size,new Buffer(size));
	var _g1 = 0;
	var _g = b.length;
	while(_g1 < _g) {
		var index = _g1++;
		nb.set(index,b.b[index]);
	}
	return nb;
};
tannus_io_impl_NodeBinary.fromBase64 = function(s) {
	return tannus_io_impl_NodeBinary.fromBytes(haxe_crypto_Base64.decode(s));
};
tannus_io_impl_NodeBinary.__super__ = tannus_io_Binary;
tannus_io_impl_NodeBinary.prototype = $extend(tannus_io_Binary.prototype,{
	get: function(index) {
		tannus_io_Binary.prototype.get.call(this,index);
		return this.b[index];
	}
	,set: function(index,value) {
		tannus_io_Binary.prototype.set.call(this,index,value);
		return this.b[index] = value;
	}
	,sub: function(index,size) {
		var subdata = this.b.slice(index,index + size);
		return new tannus_io_impl_NodeBinary(size,subdata);
	}
	,slice: function(start,end) {
		if(end == null) {
			end = this._length;
		}
		return new tannus_io_impl_NodeBinary(end - start,this.b.slice(start,end));
	}
	,blit: function(index,src,srcIndex,size) {
		var _g1 = 0;
		var _g = size;
		while(_g1 < _g) {
			var i = _g1++;
			this.set(index + i,src.get(srcIndex + i));
		}
	}
	,getString: function(index,size) {
		return this.b.toString("utf8",index,index + size);
	}
	,resize: function(size) {
		if(size < this._length) {
			this.setData(this.b = this.b.slice(0,size));
		} else {
			var bigger = new tannus_io_impl_NodeBinary(size,new Buffer(size));
			bigger.blit(0,this,0,this._length);
			this.setData(bigger.b);
		}
	}
	,concat: function(other) {
		var len = this._length + other._length;
		var sum = new tannus_io_impl_NodeBinary(len,new Buffer(len));
		sum.blit(0,this,0,this._length);
		sum.blit(this._length,other,0,other._length);
		return sum;
	}
	,setData: function(data) {
		this.b = data;
		this._length = data.length;
	}
	,get_buffer: function() {
		return this.b;
	}
	,__class__: tannus_io_impl_NodeBinary
	,__properties__: $extend(tannus_io_Binary.prototype.__properties__,{get_buffer:"get_buffer"})
});
var tannus_io_impl_RegExMatch = function(re,strings,pos,groups) {
	this.re = re;
	this.source = strings[0];
	this.text = strings[1];
	this.pos = pos;
	this.groups = groups;
};
$hxClasses["tannus.io.impl.RegExMatch"] = tannus_io_impl_RegExMatch;
tannus_io_impl_RegExMatch.__name__ = ["tannus","io","impl","RegExMatch"];
tannus_io_impl_RegExMatch.prototype = {
	re: null
	,source: null
	,text: null
	,groups: null
	,pos: null
	,__class__: tannus_io_impl_RegExMatch
};
var tannus_macro_MacroTools = function() { };
$hxClasses["tannus.macro.MacroTools"] = tannus_macro_MacroTools;
tannus_macro_MacroTools.__name__ = ["tannus","macro","MacroTools"];
tannus_macro_MacroTools.toTypePath = function(s) {
	var path = { name : "", pack : [], params : null, sub : null};
	var bits = s.split(".");
	var _g = 0;
	while(_g < bits.length) {
		var b = bits[_g];
		++_g;
		if(b.toLowerCase() == b) {
			path.pack.push(b);
		} else if(b.charAt(0).toUpperCase() == b.charAt(0)) {
			if(path.name == "") {
				path.name = b;
			} else {
				path.sub = b;
			}
		}
	}
	return path;
};
var tannus_math__$Percent_Percent_$Impl_$ = {};
$hxClasses["tannus.math._Percent.Percent_Impl_"] = tannus_math__$Percent_Percent_$Impl_$;
tannus_math__$Percent_Percent_$Impl_$.__name__ = ["tannus","math","_Percent","Percent_Impl_"];
tannus_math__$Percent_Percent_$Impl_$.__properties__ = {set_delta:"set_delta",get_delta:"get_delta",set_value:"set_value",get_value:"get_value"}
tannus_math__$Percent_Percent_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
tannus_math__$Percent_Percent_$Impl_$.get_value = function(this1) {
	return this1;
};
tannus_math__$Percent_Percent_$Impl_$.set_value = function(this1,nv) {
	this1 = nv;
	return this1;
};
tannus_math__$Percent_Percent_$Impl_$.get_delta = function(this1) {
	return this1 / 100;
};
tannus_math__$Percent_Percent_$Impl_$.set_delta = function(this1,v) {
	this1 = v * 100;
	return this1;
};
tannus_math__$Percent_Percent_$Impl_$.toDelta = function(this1) {
	return this1 / 100;
};
tannus_math__$Percent_Percent_$Impl_$.complement = function(this1) {
	return 100 - this1;
};
tannus_math__$Percent_Percent_$Impl_$.plus = function(this1,other) {
	return this1 + other;
};
tannus_math__$Percent_Percent_$Impl_$.minus = function(this1,other) {
	return this1 - other;
};
tannus_math__$Percent_Percent_$Impl_$.preincrement = function(this1) {
	return ++this1;
};
tannus_math__$Percent_Percent_$Impl_$.postincrement = function(this1) {
	return this1++;
};
tannus_math__$Percent_Percent_$Impl_$.decrement = function(this1) {
	return --this1;
};
tannus_math__$Percent_Percent_$Impl_$.percent = function(what,of) {
	var this1 = what / of * 100;
	return this1;
};
tannus_math__$Percent_Percent_$Impl_$.toString = function(this1) {
	return "" + this1 + "%";
};
var tannus_math_Random = $hx_exports["Random"] = function(seed) {
	this.rng = this.createRandomNumberGenerator(seed);
};
$hxClasses["tannus.math.Random"] = tannus_math_Random;
tannus_math_Random.__name__ = ["tannus","math","Random"];
tannus_math_Random.stringSeed = function(seed) {
	var state = 0;
	var ba = new tannus_io_impl_NodeBinary(seed.length,new Buffer(seed));
	var bit = ba.iterator();
	while(bit.hasNext()) {
		var bit1 = bit.next();
		seed += bit1;
	}
	return new tannus_math_Random(state);
};
tannus_math_Random.prototype = {
	createRandomNumberGenerator: function(seed) {
		return new tannus_math_random_BasicRandomNumberGenerator(seed);
	}
	,nextInt: function() {
		return this.rng.nextInt();
	}
	,nextFloat: function() {
		return this.nextInt() / 2147483647;
	}
	,reset: function(value) {
	}
	,randfloat: function(min,max) {
		return this.nextInt() / 2147483647 * (max - min + 1) + min;
	}
	,randint: function(min,max) {
		return Math.floor(this.nextInt() / 2147483647 * (max - min + 1) + min);
	}
	,chance: function(chances,choices,shuffleAll) {
		if(shuffleAll == null) {
			shuffleAll = true;
		}
		if(tannus_math_TMath.sum_Int(chances) != 100) {
			var this1 = new tannus_utils_JavaScriptError("RandomError: The [chances] parameter for tannus.math.Random::chance must add up to 100");
			throw new js__$Boot_HaxeError(this1);
		} else if(chances.length != choices.length) {
			var this2 = new tannus_utils_JavaScriptError("RandomError: The [chances] and [choices] parameters for tannus.math.Random::chance must be of the same length");
			throw new js__$Boot_HaxeError(this2);
		} else {
			var all = [];
			var _g1 = 0;
			var _g = chances.length;
			while(_g1 < _g) {
				var index = _g1++;
				var count = chances[index];
				var value = choices[index];
				var _g3 = 0;
				var _g2 = count;
				while(_g3 < _g2) {
					var i = _g3++;
					all.push(value);
				}
			}
			if(shuffleAll) {
				all = this.shuffle(all);
			}
			var max = all.length - 1;
			return all[Math.floor(this.nextInt() / 2147483647 * (max + 1))];
		}
	}
	,randchance: function(top,bottom) {
		var _g = [];
		var _g2 = 0;
		var _g1 = bottom;
		while(_g2 < _g1) {
			var i = _g2++;
			_g.push(i);
		}
		var choices = _g;
		var correct = [];
		while(correct.length < top) {
			var max = choices.length - 1;
			var cnum = choices[Math.floor(this.nextInt() / 2147483647 * (max + 1))];
			if(!Lambda.has(correct,cnum)) {
				correct.push(cnum);
			}
		}
		return Lambda.has(correct,Math.floor(this.nextInt() / 2147483647 * (bottom - top + 1) + top));
	}
	,randbool: function() {
		return Math.floor(this.nextInt() / 2147483647 * 2) == 1;
	}
	,choice: function(set) {
		var max = set.length - 1;
		return set[Math.floor(this.nextInt() / 2147483647 * (max + 1))];
	}
	,sample: function(set,size) {
		var sampleSize;
		if(size == null) {
			var max = set.length;
			sampleSize = Math.floor(this.nextInt() / 2147483647 * (max + 1));
		} else {
			sampleSize = size;
		}
		var items = [];
		while(items.length < sampleSize) {
			var max1 = set.length - 1;
			var ritem = set[Math.floor(this.nextInt() / 2147483647 * (max1 + 1))];
			if(!Lambda.has(items,ritem)) {
				items.push(ritem);
			}
		}
		return items;
	}
	,shuffle: function(set) {
		var copy = set.slice();
		var result = [];
		if(copy.length > 0) {
			while(copy.length != 1) {
				var max = copy.length - 1;
				var el = copy[Math.floor(this.nextInt() / 2147483647 * (max + 1))];
				HxOverrides.remove(copy,el);
				result.push(el);
			}
			result.push(copy.pop());
		}
		return result;
	}
	,enumConstruct: function(_enum) {
		var set = _enum.__constructs__.slice();
		var max = set.length - 1;
		var name = set[Math.floor(this.nextInt() / 2147483647 * (max + 1))];
		var e = _enum;
		var a1 = name;
		return function(a2) {
			return Type.createEnum(e,a1,a2);
		};
	}
	,pointInRect: function(rect) {
		var min = Math.floor(rect.x);
		var max = Math.floor(rect.x + rect.width);
		var x = Math.floor(this.nextInt() / 2147483647 * (max - min + 1) + min);
		var min1 = Math.floor(rect.y);
		var max1 = Math.floor(rect.y + rect.height);
		var this1 = new tannus_geom_TPoint(x,Math.floor(this.nextInt() / 2147483647 * (max1 - min1 + 1) + min1),0);
		return this1;
	}
	,rng: null
	,__class__: tannus_math_Random
};
var tannus_math_RandomTools = function() { };
$hxClasses["tannus.math.RandomTools"] = tannus_math_RandomTools;
tannus_math_RandomTools.__name__ = ["tannus","math","RandomTools"];
tannus_math_RandomTools.__properties__ = {get_rand:"get_rand"}
tannus_math_RandomTools.randint = function(range) {
	var _this = new tannus_math_Random();
	var min = range[0];
	return Math.floor(_this.nextInt() / 2147483647 * (range[1] - min + 1) + min);
};
tannus_math_RandomTools.between = function(r) {
	var tmp = r.min - r.min;
	var _this = new tannus_math_Random();
	var min = r.min | 0;
	var max = r.max | 0;
	return tmp + Math.floor(_this.nextInt() / 2147483647 * (max - min + 1) + min);
};
tannus_math_RandomTools.choice = function(set) {
	var _this = new tannus_math_Random();
	var set1 = Lambda.array(set);
	var max = set1.length - 1;
	return set1[Math.floor(_this.nextInt() / 2147483647 * (max + 1))];
};
tannus_math_RandomTools.chance = function(choices,chances,shuffleAll) {
	if(shuffleAll == null) {
		shuffleAll = true;
	}
	return new tannus_math_Random().chance(chances,choices,shuffleAll);
};
tannus_math_RandomTools.sample = function(list,size) {
	return new tannus_math_Random().sample(list,size);
};
tannus_math_RandomTools.shuffle = function(set) {
	return new tannus_math_Random().shuffle(set);
};
tannus_math_RandomTools.randomConstruct = function(enumer) {
	return new tannus_math_Random().enumConstruct(enumer);
};
tannus_math_RandomTools.get_rand = function() {
	return new tannus_math_Random();
};
var tannus_math__$Ratio_Ratio_$Impl_$ = {};
$hxClasses["tannus.math._Ratio.Ratio_Impl_"] = tannus_math__$Ratio_Ratio_$Impl_$;
tannus_math__$Ratio_Ratio_$Impl_$.__name__ = ["tannus","math","_Ratio","Ratio_Impl_"];
tannus_math__$Ratio_Ratio_$Impl_$._new = function(top,bottom) {
	var this1 = new tannus_math_CRatio(top,bottom);
	return this1;
};
tannus_math__$Ratio_Ratio_$Impl_$.equals = function(this1,other) {
	return this1.equals(other);
};
tannus_math__$Ratio_Ratio_$Impl_$.toFloat = function(this1) {
	return this1.toFloat();
};
tannus_math__$Ratio_Ratio_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_math__$Ratio_Ratio_$Impl_$.toPercent = function(this1) {
	return this1.toPercent();
};
tannus_math__$Ratio_Ratio_$Impl_$.fromFloatArray = function(a) {
	var this1 = new tannus_math_CRatio(a[0],a[1]);
	return this1;
};
tannus_math__$Ratio_Ratio_$Impl_$.fromIntArray = function(a) {
	var this1 = new tannus_math_CRatio(a[0],a[1]);
	return this1;
};
var tannus_math_CRatio = function(t,b) {
	this.top = t;
	this.bottom = b;
};
$hxClasses["tannus.math.CRatio"] = tannus_math_CRatio;
tannus_math_CRatio.__name__ = ["tannus","math","CRatio"];
tannus_math_CRatio.prototype = {
	bottomValue: function(topValue) {
		return topValue / this.top * this.bottom;
	}
	,topValue: function(bottomValue) {
		return bottomValue / this.bottom * this.top;
	}
	,toFloat: function() {
		return this.top / this.bottom;
	}
	,toString: function() {
		return "" + this.top + " / " + this.bottom;
	}
	,toPercent: function() {
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.top,this.bottom);
	}
	,equals: function(other) {
		return this.toFloat() == other.toFloat();
	}
	,reciprocal: function() {
		var this1 = new tannus_math_CRatio(1,this.toFloat());
		return this1;
	}
	,get_percent: function() {
		return this.toPercent();
	}
	,top: null
	,bottom: null
	,__class__: tannus_math_CRatio
	,__properties__: {get_percent:"get_percent"}
};
var tannus_math_TMath = $hx_exports["TMath"] = function() { };
$hxClasses["tannus.math.TMath"] = tannus_math_TMath;
tannus_math_TMath.__name__ = ["tannus","math","TMath"];
tannus_math_TMath.sum_Float = function(list) {
	var res = null;
	var _g = 0;
	while(_g < list.length) {
		var item = list[_g];
		++_g;
		if(res == null) {
			res = item;
		} else {
			res = (res != null ? res : res) + item;
		}
	}
	return res;
};
tannus_math_TMath.clamp_Float = function(value,min,max) {
	if(value < min) {
		return min;
	} else if(value > max) {
		return max;
	} else {
		return value;
	}
};
tannus_math_TMath.sum_Int = function(list) {
	var res = null;
	var _g = 0;
	while(_g < list.length) {
		var item = list[_g];
		++_g;
		if(res == null) {
			res = item;
		} else {
			res = (res != null ? res : res) + item;
		}
	}
	return res;
};
tannus_math_TMath.clamp_Int = function(value,min,max) {
	if(value < min) {
		return min;
	} else if(value > max) {
		return max;
	} else {
		return value;
	}
};
tannus_math_TMath.toRadians = function(degrees) {
	return degrees * 3.141592653589793 / 180;
};
tannus_math_TMath.toDegrees = function(radians) {
	return radians * 180 / 3.141592653589793;
};
tannus_math_TMath.angleBetween = function(x1,y1,x2,y2) {
	return Math.atan2(y2 - y1,x2 - x1) * 180 / 3.141592653589793;
};
tannus_math_TMath.distance = function(x1,y1,x2,y2) {
	return Math.sqrt(Math.pow(Math.abs(x2 - x1),2) + Math.pow(Math.abs(y2 - y1),2));
};
tannus_math_TMath.toFixed = function(n,c) {
	if(c == null) {
		c = 0;
	}
	var sn = Std.string(n);
	var bd = tannus_ds_StringUtils.before(sn,".");
	var wn = Std.parseInt(bd);
	var ad = "";
	var res = wn + "";
	if(tannus_ds_StringUtils.has(sn,".")) {
		ad = tannus_ds_StringUtils.after(sn,".");
		var sl = tannus_ds_StringUtils.slice(ad,0,c);
		if(ad.length > sl.length) {
			sl = tannus_ds_StringUtils.slice(ad,0,c + 1);
			var idec = Std.parseInt(sl);
			idec = Math.round(idec / 10);
			res += "." + idec;
		} else {
			res += "." + sl;
		}
	}
	return res;
};
tannus_math_TMath.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
tannus_math_TMath.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
tannus_math_TMath.maxr = function(nums) {
	var m = null;
	var n = $iterator(nums)();
	while(n.hasNext()) {
		var n1 = n.next();
		if(m == null) {
			m = n1;
		}
		m = n1 > m ? n1 : m;
	}
	return m;
};
tannus_math_TMath.minr = function(nums) {
	var m = null;
	var _g = 0;
	while(_g < nums.length) {
		var n = nums[_g];
		++_g;
		if(m == null) {
			m = n;
		}
		m = n < m ? n : m;
	}
	return m;
};
tannus_math_TMath.range = function(nums) {
	var mi = null;
	var ma = null;
	var _g = 0;
	while(_g < nums.length) {
		var n = nums[_g];
		++_g;
		if(mi == null) {
			mi = n;
		}
		if(ma == null) {
			ma = n;
		}
		mi = n < mi ? n : mi;
		ma = n > ma ? n : ma;
	}
	return new tannus_ds_Range(mi,ma);
};
tannus_math_TMath.lerp = function(a,b,x) {
	return a + x * (b - a);
};
tannus_math_TMath.almostEquals = function(n,v,threshold) {
	return Math.abs(n - v) <= threshold;
};
tannus_math_TMath.i = function(f) {
	return f | 0;
};
tannus_math_TMath.roundFloat = function(f,digit) {
	var n = Math.pow(10,digit);
	var r = Math.round(f * n) / n;
	return r;
};
tannus_math_TMath.average = function(values) {
	var sum = 0;
	var _g = 0;
	while(_g < values.length) {
		var n = values[_g];
		++_g;
		sum += n;
	}
	return sum / values.length;
};
tannus_math_TMath.largest = function(items,predicate) {
	var highest = 0;
	var item = $iterator(items)();
	while(item.hasNext()) {
		var item1 = item.next();
		var b = predicate(item1);
		if(highest > b) {
			highest = highest;
		} else {
			highest = b;
		}
	}
	return highest;
};
tannus_math_TMath.smallest = function(items,predicate) {
	var lowest = 0;
	var item = $iterator(items)();
	while(item.hasNext()) {
		var item1 = item.next();
		var b = predicate(item1);
		if(lowest < b) {
			lowest = lowest;
		} else {
			lowest = b;
		}
	}
	return lowest;
};
tannus_math_TMath.largestItem = function(items,predicate) {
	var asarr = Lambda.array(items);
	if(asarr.length == 0) {
		return null;
	} else if(asarr.length == 1) {
		return asarr[0];
	} else if(asarr.length == 2) {
		var px = predicate(asarr[0]);
		var py = predicate(asarr[1]);
		if(px >= py) {
			return asarr[0];
		} else {
			return asarr[1];
		}
	} else {
		var best = null;
		var item = $iterator(items)();
		while(item.hasNext()) {
			var item1 = item.next();
			var score = predicate(item1);
			if(best == null || score > best.score) {
				best = { "item" : item1, "score" : score};
			}
		}
		return best.item;
	}
};
tannus_math_TMath.minmax = function(items,predicate) {
	var res = new tannus_ds_FloatRange(NaN,NaN);
	var item = $iterator(items)();
	while(item.hasNext()) {
		var item1 = item.next();
		var score = predicate(item1);
		if(res.max < score || isNaN(res.max)) {
			res.max = score;
		} else if(res.min > score || isNaN(res.min)) {
			res.min = score;
		}
		if(res.min > res.max) {
			var _t = res.max;
			res.max = res.min;
			res.min = _t;
		}
	}
	return res;
};
tannus_math_TMath.inRange = function(value,min,max) {
	if(value >= min) {
		return value <= max;
	} else {
		return false;
	}
};
tannus_math_TMath.sign = function(value) {
	if(value < 0) {
		return -1;
	} else if(value > 0) {
		return 1;
	} else {
		return 0;
	}
};
tannus_math_TMath.applySign = function(value,sign) {
	return value * sign;
};
tannus_math_TMath.sumf = function(set,extractor) {
	var res = null;
	var item = $iterator(set)();
	while(item.hasNext()) {
		var item1 = item.next();
		if(res != null) {
			res += extractor(item1);
		} else {
			res = extractor(item1);
		}
	}
	return res;
};
tannus_math_TMath.sampleVariance = function(data) {
	var sampleSize = data.length;
	if(sampleSize < 2) {
		return 0;
	}
	var sum = 0;
	var _g = 0;
	while(_g < data.length) {
		var n = data[_g];
		++_g;
		sum += n;
	}
	var mean = sum / data.length;
	return tannus_math_TMath.sum_Float(data.map(function(val) {
		return Math.pow(val - mean,2);
	})) / (sampleSize - 1);
};
tannus_math_TMath.standardDeviation = function(data) {
	return Math.sqrt(tannus_math_TMath.sampleVariance(data));
};
tannus_math_TMath.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
tannus_math_TMath.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608) & 8388607;
	return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
tannus_math_TMath.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) {
		return 0.0;
	}
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
tannus_math_TMath.snap = function(value,min,step,max) {
	if(value < min) {
		return min;
	} else if(max != null && value > max) {
		return max;
	} else {
		var v = min;
		while(true) {
			if(value <= v) {
				var prev = v - step;
				if(value >= prev) {
					if(v - value < value - prev) {
						return v;
					} else {
						return prev;
					}
				}
			}
			v += step;
		}
	}
};
tannus_math_TMath.prettify = function(num,dec) {
	if(dec == null) {
		dec = 0;
	}
	var i = num | 0;
	var si = i == null ? "null" : "" + i;
	console.log(si);
	var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
	var res = this1;
	var index = si.length - 1;
	while(index >= 0) {
		var c;
		if(index <= si.length - 1) {
			var n = HxOverrides.cca(si,index);
			var this2;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			}
			this2 = n;
			c = this2;
		} else {
			throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + index + " is not within range(0, " + (si.length - 1) + ")");
		}
		res.push(c);
		if((index + 1) % 3 == 0) {
			res.push(44);
		}
		--index;
	}
	res.reverse();
	return res.toString();
};
tannus_math_TMath.compareChain = function(nums) {
	var n = $iterator(nums)();
	while(n.hasNext()) {
		var n1 = n.next();
		if(n1 == 0) {
			continue;
		} else {
			return n1;
		}
	}
	return 0;
};
tannus_math_TMath.fcompareChain = function(getters) {
	var get = $iterator(getters)();
	while(get.hasNext()) {
		var get1 = get.next();
		var n = get1();
		if(n == 0) {
			continue;
		} else {
			return n;
		}
	}
	return 0;
};
tannus_math_TMath.abs = function(v) {
	return Math.abs(v);
};
tannus_math_TMath.acos = function(v) {
	return Math.acos(v);
};
tannus_math_TMath.asin = function(v) {
	return Math.asin(v);
};
tannus_math_TMath.atan = function(v) {
	return Math.atan(v);
};
tannus_math_TMath.atan2 = function(x,y) {
	return Math.atan2(x,y);
};
tannus_math_TMath.ceil = function(v) {
	return Math.ceil(v);
};
tannus_math_TMath.floor = function(v) {
	return Math.floor(v);
};
tannus_math_TMath.cos = function(v) {
	return Math.cos(v);
};
tannus_math_TMath.exp = function(v) {
	return Math.exp(v);
};
tannus_math_TMath.fceil = function(v) {
	return Math.ceil(v);
};
tannus_math_TMath.ffloor = function(v) {
	return Math.floor(v);
};
tannus_math_TMath.fround = function(v) {
	return Math.round(v);
};
tannus_math_TMath.isFinite = function(v) {
	return isFinite(v);
};
tannus_math_TMath.isNaN = function(v) {
	return isNaN(v);
};
tannus_math_TMath.log = function(v) {
	return Math.log(v);
};
tannus_math_TMath.pow = function(v,exp) {
	return Math.pow(v,exp);
};
tannus_math_TMath.random = function() {
	return Math.random();
};
tannus_math_TMath.round = function(v) {
	return Math.round(v);
};
tannus_math_TMath.sin = function(v) {
	return Math.sin(v);
};
tannus_math_TMath.sqrt = function(v) {
	return Math.sqrt(v);
};
tannus_math_TMath.tan = function(v) {
	return Math.tan(v);
};
var tannus_math_random_RandomNumberGenerator = function() { };
$hxClasses["tannus.math.random.RandomNumberGenerator"] = tannus_math_random_RandomNumberGenerator;
tannus_math_random_RandomNumberGenerator.__name__ = ["tannus","math","random","RandomNumberGenerator"];
tannus_math_random_RandomNumberGenerator.prototype = {
	getState: null
	,nextInt: null
	,__class__: tannus_math_random_RandomNumberGenerator
};
var tannus_math_random_BasicRandomNumberGenerator = function(seed) {
	this.seed = seed != null ? seed : Math.floor(Math.random() * 2147483647);
	this.state = this.seed;
};
$hxClasses["tannus.math.random.BasicRandomNumberGenerator"] = tannus_math_random_BasicRandomNumberGenerator;
tannus_math_random_BasicRandomNumberGenerator.__name__ = ["tannus","math","random","BasicRandomNumberGenerator"];
tannus_math_random_BasicRandomNumberGenerator.__interfaces__ = [tannus_math_random_RandomNumberGenerator];
tannus_math_random_BasicRandomNumberGenerator.prototype = {
	getState: function() {
		return this.state;
	}
	,nextInt: function() {
		return this.state = (1103515245.0 * this.state + 12345) % 2147483647;
	}
	,seed: null
	,state: null
	,__class__: tannus_math_random_BasicRandomNumberGenerator
};
var tannus_media__$Duration_Duration_$Impl_$ = {};
$hxClasses["tannus.media._Duration.Duration_Impl_"] = tannus_media__$Duration_Duration_$Impl_$;
tannus_media__$Duration_Duration_$Impl_$.__name__ = ["tannus","media","_Duration","Duration_Impl_"];
tannus_media__$Duration_Duration_$Impl_$._new = function(s,m,h) {
	if(h == null) {
		h = 0;
	}
	if(m == null) {
		m = 0;
	}
	if(s == null) {
		s = 0;
	}
	var this1 = new tannus_media_CDur(s,m,h);
	return this1;
};
tannus_media__$Duration_Duration_$Impl_$.equals = function(this1,other) {
	return this1.equals(other);
};
tannus_media__$Duration_Duration_$Impl_$.nequals = function(this1,other) {
	return !this1.equals(other);
};
tannus_media__$Duration_Duration_$Impl_$.gt = function(this1,other) {
	return 3600 * this1.hours + 60 * this1.minutes + this1.seconds > 3600 * other.hours + 60 * other.minutes + other.seconds;
};
tannus_media__$Duration_Duration_$Impl_$.lt = function(this1,other) {
	return 3600 * this1.hours + 60 * this1.minutes + this1.seconds < 3600 * other.hours + 60 * other.minutes + other.seconds;
};
tannus_media__$Duration_Duration_$Impl_$.plus = function(this1,other) {
	return this1.plus(other);
};
tannus_media__$Duration_Duration_$Impl_$.minus = function(this1,other) {
	return this1.minus(other);
};
tannus_media__$Duration_Duration_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_media__$Duration_Duration_$Impl_$.toInt = function(this1) {
	return 3600 * this1.hours + 60 * this1.minutes + this1.seconds;
};
tannus_media__$Duration_Duration_$Impl_$.toFloat = function(this1) {
	return 3600 * this1.hours + 60 * this1.minutes + this1.seconds + 0.0;
};
tannus_media__$Duration_Duration_$Impl_$.fromSecondsI = function(i) {
	return tannus_media_CDur.fromSecondsI(i);
};
tannus_media__$Duration_Duration_$Impl_$.fromSecondsF = function(n) {
	return tannus_media_CDur.fromSecondsI(Math.floor(n));
};
tannus_media__$Duration_Duration_$Impl_$.fromInt = function(i) {
	return tannus_media_CDur.fromSecondsI(i);
};
tannus_media__$Duration_Duration_$Impl_$.fromFloat = function(n) {
	return tannus_media_CDur.fromSecondsI(Math.floor(n));
};
tannus_media__$Duration_Duration_$Impl_$.fromString = function(s) {
	return tannus_media_CDur.fromString(s);
};
tannus_media__$Duration_Duration_$Impl_$.fromIntArray = function(a) {
	return tannus_media__$Duration_Duration_$Impl_$._new(a[0],a[1],a[2]);
};
var tannus_media_CDur = $hx_exports["tannus"]["media"]["Duration"] = function(s,m,h) {
	this.seconds = s;
	this.minutes = m;
	this.hours = h;
};
$hxClasses["tannus.media.CDur"] = tannus_media_CDur;
tannus_media_CDur.__name__ = ["tannus","media","CDur"];
tannus_media_CDur.__interfaces__ = [tannus_ds_Comparable];
tannus_media_CDur.fromSecondsI = function(i) {
	var d = tannus_media__$Duration_Duration_$Impl_$._new();
	d.set_totalSeconds(i);
	return d;
};
tannus_media_CDur.fromInt = function(i) {
	return tannus_media_CDur.fromSecondsI(i);
};
tannus_media_CDur.fromSecondsF = function(n) {
	return tannus_media_CDur.fromSecondsI(Math.floor(n));
};
tannus_media_CDur.fromFloat = function(n) {
	return tannus_media_CDur.fromSecondsI(Math.floor(n));
};
tannus_media_CDur.fromString = function(s) {
	var data = StringTools.trim(s).split(":").map(Std.parseInt);
	switch(data.length) {
	case 1:
		var s1 = data[0];
		return tannus_media__$Duration_Duration_$Impl_$._new(s1);
	case 2:
		var s2 = data[1];
		var m = data[0];
		return tannus_media__$Duration_Duration_$Impl_$._new(s2,m);
	case 3:
		var s3 = data[2];
		var m1 = data[1];
		var h = data[0];
		return tannus_media__$Duration_Duration_$Impl_$._new(s3,m1,h);
	default:
		throw new js__$Boot_HaxeError("Invalid Duration string \"" + s + "\"");
	}
};
tannus_media_CDur.fromIntArray = function(a) {
	return tannus_media__$Duration_Duration_$Impl_$._new(a[0],a[1],a[2]);
};
tannus_media_CDur.prototype = {
	toString: function() {
		var bits = [];
		bits.unshift(this.seconds + "");
		bits.unshift(this.minutes + "");
		if(this.hours > 0) {
			bits.unshift(this.hours + "");
		}
		bits = bits.map(function(s) {
			if(s.length < 2) {
				s = tannus_ds_StringUtils.times("0",2 - s.length) + s;
			}
			return s;
		});
		return bits.join(":");
	}
	,equals: function(other) {
		if(this.seconds == other.seconds && this.minutes == other.minutes) {
			return this.hours == other.hours;
		} else {
			return false;
		}
	}
	,greaterThan: function(other) {
		return 3600 * this.hours + 60 * this.minutes + this.seconds > 3600 * other.hours + 60 * other.minutes + other.seconds;
	}
	,lessThan: function(other) {
		return 3600 * this.hours + 60 * this.minutes + this.seconds < 3600 * other.hours + 60 * other.minutes + other.seconds;
	}
	,compare: function(other) {
		if(this.equals(other)) {
			return 0;
		} else if(3600 * this.hours + 60 * this.minutes + this.seconds > 3600 * other.hours + 60 * other.minutes + other.seconds) {
			return 1;
		} else {
			return -1;
		}
	}
	,plus: function(other) {
		return tannus_media_CDur.fromSecondsI(3600 * this.hours + 60 * this.minutes + this.seconds + (3600 * other.hours + 60 * other.minutes + other.seconds));
	}
	,minus: function(other) {
		return tannus_media_CDur.fromSecondsI(3600 * this.hours + 60 * this.minutes + this.seconds - (3600 * other.hours + 60 * other.minutes + other.seconds));
	}
	,toInt: function() {
		return 3600 * this.hours + 60 * this.minutes + this.seconds;
	}
	,toFloat: function() {
		return 3600 * this.hours + 60 * this.minutes + this.seconds + 0.0;
	}
	,get_totalHours: function() {
		return Math.floor(this.hours + this.minutes / 60.0);
	}
	,get_totalMinutes: function() {
		return Math.floor(60 * this.hours + this.minutes + this.seconds / 60.0);
	}
	,get_totalSeconds: function() {
		return 3600 * this.hours + 60 * this.minutes + this.seconds;
	}
	,set_totalSeconds: function(v) {
		this.hours = Math.floor(v / 3600);
		v -= this.hours * 3600;
		this.minutes = Math.floor(v / 60);
		this.seconds = v - this.minutes * 60;
		return 3600 * this.hours + 60 * this.minutes + this.seconds;
	}
	,seconds: null
	,minutes: null
	,hours: null
	,__class__: tannus_media_CDur
	,__properties__: {set_totalSeconds:"set_totalSeconds",get_totalSeconds:"get_totalSeconds",get_totalMinutes:"get_totalMinutes",get_totalHours:"get_totalHours"}
};
var tannus_media_TimeRange = function(s,e) {
	this.start = s;
	this.end = e;
};
$hxClasses["tannus.media.TimeRange"] = tannus_media_TimeRange;
tannus_media_TimeRange.__name__ = ["tannus","media","TimeRange"];
tannus_media_TimeRange.__interfaces__ = [tannus_ds_Comparable];
tannus_media_TimeRange.prototype = {
	equals: function(other) {
		if(this.start.equals(other.start)) {
			return this.end.equals(other.end);
		} else {
			return false;
		}
	}
	,contains: function(time) {
		var value = 3600 * time.hours + 60 * time.minutes + time.seconds;
		var this1 = this.start;
		var this2 = this.end;
		if(value >= 3600 * this1.hours + 60 * this1.minutes + this1.seconds) {
			return value <= 3600 * this2.hours + 60 * this2.minutes + this2.seconds;
		} else {
			return false;
		}
	}
	,overlapsWith: function(other) {
		var tmp;
		var tmp1;
		var time = other.start;
		var value = 3600 * time.hours + 60 * time.minutes + time.seconds;
		var this1 = this.start;
		var this2 = this.end;
		if(!(value >= 3600 * this1.hours + 60 * this1.minutes + this1.seconds && value <= 3600 * this2.hours + 60 * this2.minutes + this2.seconds)) {
			var time1 = other.end;
			var value1 = 3600 * time1.hours + 60 * time1.minutes + time1.seconds;
			var this3 = this.start;
			var this4 = this.end;
			if(value1 >= 3600 * this3.hours + 60 * this3.minutes + this3.seconds) {
				tmp1 = value1 <= 3600 * this4.hours + 60 * this4.minutes + this4.seconds;
			} else {
				tmp1 = false;
			}
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			var time2 = this.start;
			var value2 = 3600 * time2.hours + 60 * time2.minutes + time2.seconds;
			var this5 = other.start;
			var this6 = other.end;
			if(value2 >= 3600 * this5.hours + 60 * this5.minutes + this5.seconds) {
				tmp = value2 <= 3600 * this6.hours + 60 * this6.minutes + this6.seconds;
			} else {
				tmp = false;
			}
		} else {
			tmp = true;
		}
		if(!tmp) {
			var time3 = this.end;
			var value3 = 3600 * time3.hours + 60 * time3.minutes + time3.seconds;
			var this7 = other.start;
			var this8 = other.end;
			if(value3 >= 3600 * this7.hours + 60 * this7.minutes + this7.seconds) {
				return value3 <= 3600 * this8.hours + 60 * this8.minutes + this8.seconds;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,toIntRange: function() {
		var this1 = this.start;
		var this2 = this.end;
		return new tannus_ds_IntRange(3600 * this1.hours + 60 * this1.minutes + this1.seconds,3600 * this2.hours + 60 * this2.minutes + this2.seconds);
	}
	,toFloatRange: function() {
		var this1 = this.start;
		var this2 = this.end;
		return new tannus_ds_FloatRange(3600 * this1.hours + 60 * this1.minutes + this1.seconds + 0.0,3600 * this2.hours + 60 * this2.minutes + this2.seconds + 0.0);
	}
	,toString: function() {
		return "TimeRange(from " + this.start.toString() + " to " + this.end.toString() + ")";
	}
	,get_duration: function() {
		var this1 = this.end;
		var this2 = this.start;
		return tannus_media_CDur.fromSecondsI(Math.floor(3600 * this1.hours + 60 * this1.minutes + this1.seconds + 0.0 - (3600 * this2.hours + 60 * this2.minutes + this2.seconds + 0.0)));
	}
	,start: null
	,end: null
	,__class__: tannus_media_TimeRange
	,__properties__: {get_duration:"get_duration"}
};
var tannus_media__$TimeRange_OldTimeRange_$Impl_$ = {};
$hxClasses["tannus.media._TimeRange.OldTimeRange_Impl_"] = tannus_media__$TimeRange_OldTimeRange_$Impl_$;
tannus_media__$TimeRange_OldTimeRange_$Impl_$.__name__ = ["tannus","media","_TimeRange","OldTimeRange_Impl_"];
tannus_media__$TimeRange_OldTimeRange_$Impl_$.__properties__ = {set_endn:"set_endn",get_endn:"get_endn",set_startn:"set_startn",get_startn:"get_startn",set_end:"set_end",get_end:"get_end",set_start:"set_start",get_start:"get_start",get_duration:"get_duration"}
tannus_media__$TimeRange_OldTimeRange_$Impl_$._new = function(start,end) {
	var this1;
	var this2 = [start,end];
	this1 = this2;
	return this1;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.equals = function(this1,other) {
	if(this1[0].equals(other.start)) {
		return this1[1].equals(other.end);
	} else {
		return false;
	}
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.contains = function(this1,time) {
	var value = 3600 * time.hours + 60 * time.minutes + time.seconds;
	var this2 = this1[0];
	var this3 = this1[1];
	if(value >= 3600 * this2.hours + 60 * this2.minutes + this2.seconds) {
		return value <= 3600 * this3.hours + 60 * this3.minutes + this3.seconds;
	} else {
		return false;
	}
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.toIntRange = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	return new tannus_ds_IntRange(3600 * this2.hours + 60 * this2.minutes + this2.seconds,3600 * this3.hours + 60 * this3.minutes + this3.seconds);
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.toFloatRange = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	return new tannus_ds_FloatRange(3600 * this2.hours + 60 * this2.minutes + this2.seconds + 0.0,3600 * this3.hours + 60 * this3.minutes + this3.seconds + 0.0);
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.get_duration = function(this1) {
	return this1[1].minus(this1[0]);
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.get_start = function(this1) {
	return this1[0];
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.set_start = function(this1,v) {
	return this1[0] = v;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.get_end = function(this1) {
	return this1[1];
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.set_end = function(this1,v) {
	return this1[1] = v;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.get_startn = function(this1) {
	var _this = this1[0];
	return 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.set_startn = function(this1,v) {
	var _this = this1[0] = tannus_media_CDur.fromSecondsI(Math.floor(v));
	return 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.get_endn = function(this1) {
	var _this = this1[1];
	return 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.set_endn = function(this1,v) {
	var _this = this1[1] = tannus_media_CDur.fromSecondsI(Math.floor(v));
	return 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
};
var tannus_media__$TimeRanges_TimeRanges_$Impl_$ = {};
$hxClasses["tannus.media._TimeRanges.TimeRanges_Impl_"] = tannus_media__$TimeRanges_TimeRanges_$Impl_$;
tannus_media__$TimeRanges_TimeRanges_$Impl_$.__name__ = ["tannus","media","_TimeRanges","TimeRanges_Impl_"];
tannus_media__$TimeRanges_TimeRanges_$Impl_$._new = function(a) {
	var this1 = a;
	return this1;
};
tannus_media__$TimeRanges_TimeRanges_$Impl_$.getTotal = function(this1) {
	return tannus_media_CDur.fromSecondsI(Math.floor(tannus_math_TMath.sumf(this1,function(item) {
		var this2 = item.end;
		var this3 = item.start;
		var this4 = tannus_media_CDur.fromSecondsI(Math.floor(3600 * this2.hours + 60 * this2.minutes + this2.seconds + 0.0 - (3600 * this3.hours + 60 * this3.minutes + this3.seconds + 0.0)));
		return 3600 * this4.hours + 60 * this4.minutes + this4.seconds + 0.0;
	})));
};
tannus_media__$TimeRanges_TimeRanges_$Impl_$.findContainingRange = function(this1,time) {
	return tannus_ds_ArrayTools.firstMatch(this1,function(item) {
		var value = 3600 * time.hours + 60 * time.minutes + time.seconds;
		var this2 = item.start;
		var this3 = item.end;
		if(value >= 3600 * this2.hours + 60 * this2.minutes + this2.seconds) {
			return value <= 3600 * this3.hours + 60 * this3.minutes + this3.seconds;
		} else {
			return false;
		}
	});
};
tannus_media__$TimeRanges_TimeRanges_$Impl_$.inAnyRange = function(this1,time) {
	var time1 = time;
	return tannus_ds_ArrayTools.firstMatch(this1,function(item) {
		var value = 3600 * time1.hours + 60 * time1.minutes + time1.seconds;
		var this2 = item.start;
		var this3 = item.end;
		if(value >= 3600 * this2.hours + 60 * this2.minutes + this2.seconds) {
			return value <= 3600 * this3.hours + 60 * this3.minutes + this3.seconds;
		} else {
			return false;
		}
	}) != null;
};
tannus_media__$TimeRanges_TimeRanges_$Impl_$.sortRanges = function(this1) {
	haxe_ds_ArraySort.sort(this1,function(left,right) {
		var this2 = right.start;
		var this3 = left.start;
		return 3600 * this2.hours + 60 * this2.minutes + this2.seconds - (3600 * this3.hours + 60 * this3.minutes + this3.seconds);
	});
};
tannus_media__$TimeRanges_TimeRanges_$Impl_$.fromJavaScriptTimeRanges = function(trl) {
	var this1 = [];
	var ranges = this1;
	var _g1 = 0;
	var _g = trl.length;
	while(_g1 < _g) {
		var index = _g1++;
		var range = new tannus_media_TimeRange(tannus_media_CDur.fromSecondsI(Math.floor(trl.start(index))),tannus_media_CDur.fromSecondsI(Math.floor(trl.end(index))));
		ranges.push(range);
	}
	return ranges;
};
var tannus_nore_Check = $hxClasses["tannus.nore.Check"] = { __ename__ : ["tannus","nore","Check"], __constructs__ : ["TypeCheck","LooseTypeCheck","ShortTypeCheck","NestedCheck","FieldExistsCheck","FieldValueCheck","FieldValueBlockCheck","FieldValueTypeCheck","HelperCheck","GroupCheck","EitherCheck","InvertedCheck","TernaryCheck"] };
tannus_nore_Check.TypeCheck = function(t) { var $x = ["TypeCheck",0,t]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.LooseTypeCheck = function(t) { var $x = ["LooseTypeCheck",1,t]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.ShortTypeCheck = function(t) { var $x = ["ShortTypeCheck",2,t]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.NestedCheck = function(op,value) { var $x = ["NestedCheck",3,op,value]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.FieldExistsCheck = function(name) { var $x = ["FieldExistsCheck",4,name]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.FieldValueCheck = function(op,name,value) { var $x = ["FieldValueCheck",5,op,name,value]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.FieldValueBlockCheck = function(name,checks) { var $x = ["FieldValueBlockCheck",6,name,checks]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.FieldValueTypeCheck = function(name,type,loose) { var $x = ["FieldValueTypeCheck",7,name,type,loose]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.HelperCheck = function(name,args) { var $x = ["HelperCheck",8,name,args]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.GroupCheck = function(checks) { var $x = ["GroupCheck",9,checks]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.EitherCheck = function(left,right) { var $x = ["EitherCheck",10,left,right]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.InvertedCheck = function(check) { var $x = ["InvertedCheck",11,check]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.TernaryCheck = function(condition,itrue,ifalse) { var $x = ["TernaryCheck",12,condition,itrue,ifalse]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
var tannus_nore_Compiler = function() {
	this.reset();
};
$hxClasses["tannus.nore.Compiler"] = tannus_nore_Compiler;
tannus_nore_Compiler.__name__ = ["tannus","nore","Compiler"];
tannus_nore_Compiler.prototype = {
	compileString: function(s) {
		var l = new tannus_nore_Lexer();
		var s1 = this.operators.keys();
		while(s1.hasNext()) {
			var s2 = s1.next();
			l.operators.push(s2);
		}
		var p = new tannus_nore_Parser();
		var toks = l.lex(s);
		var tree = p.parse(toks);
		return this.compile(tree);
	}
	,compile: function(checkList) {
		this.checks = new tannus_ds_Stack(checkList);
		while(!this.checks.get_empty()) {
			var cf = this.compileCheck(this.checks.pop());
			this.checkFuncs.push(cf);
		}
		var f = $bind(this,this.testAll);
		return function(o) {
			return f(o);
		};
	}
	,compileCheck: function(check) {
		var _gthis = this;
		switch(check[1]) {
		case 0:
			var type = check[2];
			var f = ($_=this.tools,$bind($_,$_.checkType));
			var a1 = type;
			return function(o) {
				return f(o,a1,false);
			};
		case 1:
			var type1 = check[2];
			var f1 = ($_=this.tools,$bind($_,$_.checkType));
			var a11 = type1;
			return function(o1) {
				return f1(o1,a11,true);
			};
		case 2:
			var type2 = check[2];
			var f2 = ($_=this.tools,$bind($_,$_.checkShortType));
			var a12 = type2;
			return function(o2) {
				return f2(o2,a12);
			};
		case 3:
			var value = check[3];
			var sop = check[2];
			if(this.operators.exists(sop)) {
				var op = this.operators.get(sop);
				return function(o3) {
					var tmp = tannus_nore_ValueTools.haxeValue(value,_gthis.tools,o3)();
					return op(o3,tmp);
				};
			} else {
				throw new js__$Boot_HaxeError("CompilationError: Invalid operator \"" + sop + "\"!");
			}
			break;
		case 4:
			var name = check[2];
			var f3 = ($_=this.tools,$bind($_,$_.has));
			var a13 = name;
			return function(o4) {
				return f3(o4,a13);
			};
		case 5:
			var value1 = check[4];
			var name1 = check[3];
			var sop1 = check[2];
			if(this.operators.exists(sop1)) {
				var op1 = this.operators.get(sop1);
				return function(o5) {
					var tmp1 = _gthis.tools.get(o5,name1);
					var tmp2 = tannus_nore_ValueTools.haxeValue(value1,_gthis.tools,o5)();
					return op1(tmp1,tmp2);
				};
			} else {
				throw new js__$Boot_HaxeError("CompilationError: Invalid operator \"" + sop1 + "\"!");
			}
			break;
		case 6:
			var block = check[3];
			var name2 = check[2];
			var f4 = ($_=this.tools,$bind($_,$_.get));
			var a14 = name2;
			var getit = function(o6) {
				return f4(o6,a14);
			};
			var test = this.sub(block);
			return function(o7) {
				var ctx = getit(o7);
				return test(ctx);
			};
		case 7:
			var loose = check[4];
			var type3 = check[3];
			var name3 = check[2];
			return function(o8) {
				return _gthis.tools.checkType(_gthis.tools.get(o8,name3),type3,loose);
			};
		case 8:
			var vargs = check[3];
			var name4 = check[2];
			var f5 = ($_=this.tools,$bind($_,$_.helper_check));
			var a15 = name4;
			var a2 = vargs;
			return function(o9) {
				return f5(o9,a15,a2);
			};
		case 9:
			var list = check[2];
			var state = this.save();
			var child = new tannus_nore_Compiler();
			child.restore(state);
			return child.compile(list);
		case 10:
			var cright = check[3];
			var cleft = check[2];
			var left = this.compileCheck(cleft);
			var right = this.compileCheck(cright);
			return function(o10) {
				if(!left(o10)) {
					return right(o10);
				} else {
					return true;
				}
			};
		case 11:
			var cc = check[2];
			var c = this.compileCheck(cc);
			return function(o11) {
				return !c(o11);
			};
		case 12:
			var cfalse = check[4];
			var ctrue = check[3];
			var ccondition = check[2];
			var cond = this.compileCheck(ccondition);
			var itrue = this.compileCheck(ctrue);
			var ifalse = cfalse != null ? this.compileCheck(cfalse) : null;
			return function(o12) {
				if(cond(o12)) {
					return itrue(o12);
				} else if(ifalse != null) {
					return ifalse(o12);
				} else {
					return true;
				}
			};
		}
	}
	,reset: function() {
		this.checks = new tannus_ds_Stack();
		this.checkFuncs = [];
		try {
			var _this = this.operators;
			if(__map_reserved[""] != null) {
				_this.existsReserved("");
			} else {
				_this.h.hasOwnProperty("");
			}
		} catch( error ) {
			this.operators = new haxe_ds_StringMap();
		}
		try {
			var _this1 = this.helpers;
			if(__map_reserved[""] != null) {
				_this1.existsReserved("");
			} else {
				_this1.h.hasOwnProperty("");
			}
		} catch( error1 ) {
			this.helpers = new haxe_ds_StringMap();
		}
		this.tools = new tannus_nore_CompilerTools(this);
		this.initOperators();
		this.initHelpers();
	}
	,initOperators: function() {
		var _gthis = this;
		var eq = function(x,y) {
			if(tannus_internal_TypeTools.typename(x) == tannus_internal_TypeTools.typename(y)) {
				if(x == y) {
					return true;
				} else {
					var eq1 = _gthis.tools.get(x,"equals");
					if(Reflect.isFunction(eq1)) {
						try {
							var eqv = eq1.apply(x,[y]);
							if(eqv != null) {
								return eqv == true;
							}
						} catch( err ) {
						}
					}
					var eq2 = _gthis.tools.get(y,"equals");
					if(Reflect.isFunction(eq2)) {
						try {
							var eqv1 = eq2.apply(y,[x]);
							if(eqv1 != null) {
								return eqv1 == true;
							}
						} catch( err1 ) {
						}
					}
					return false;
				}
			} else {
				return false;
			}
		};
		this.operators.set("==",eq);
		this.operators.set("!=",function(x1,y1) {
			return !eq(x1,y1);
		});
		var greaterThan = function(x2,y2) {
			if(tannus_internal_TypeTools.typename(x2) == "Number" && tannus_internal_TypeTools.typename(y2) == "Number") {
				return x2 > y2;
			} else {
				return false;
			}
		};
		var lessThan = function(x3,y3) {
			if(tannus_internal_TypeTools.typename(x3) == "Number" && tannus_internal_TypeTools.typename(y3) == "Number") {
				return x3 < y3;
			} else {
				return false;
			}
		};
		this.operators.set(">",greaterThan);
		this.operators.set("<",lessThan);
		this.operators.set(">=",function(x4,y4) {
			if(!greaterThan(x4,y4)) {
				return eq(x4,y4);
			} else {
				return true;
			}
		});
		this.operators.set("<=",function(x5,y5) {
			if(!lessThan(x5,y5)) {
				return eq(x5,y5);
			} else {
				return true;
			}
		});
		var has = function(x6,y6) {
			if(typeof(x6) == "string") {
				return tannus_ds_StringUtils.has(js_Boot.__cast(x6 , String),Std.string(y6));
			} else if((x6 instanceof Array) && x6.__enum__ == null) {
				return Lambda.has(js_Boot.__cast(x6 , Array),y6);
			} else {
				return false;
			}
		};
		this.operators.set("has",has);
		this.operators.set("contains",has);
		var regtest = function(x7,y7) {
			var _g = [x7,y7].map(function(o) {
				return tannus_internal_TypeTools.typename(o);
			});
			if(_g.length == 2) {
				if(_g[1] == "String") {
					var reg = new EReg(Std.string(y7),"");
					return reg.match(Std.string(x7));
				} else {
					return false;
				}
			} else {
				return false;
			}
		};
		this.operators.set("~=",regtest);
	}
	,initHelpers: function() {
	}
	,operator: function(name,f) {
		var _this = this.operators;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,f);
		} else {
			_this.h[name] = f;
		}
	}
	,helper: function(name,f) {
		var _this = this.helpers;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,f);
		} else {
			_this.h[name] = f;
		}
	}
	,save: function() {
		return { "checks" : this.checks.copy(), checkFuncs : this.checkFuncs.slice(), "operators" : this.copyOperators(), "helpers" : this.copyHelpers(), "tools" : this.tools};
	}
	,restore: function(s) {
		this.checks = s.checks;
		this.checkFuncs = s.checkFuncs;
		this.operators = s.operators;
		this.helpers = s.helpers;
		this.tools = s.tools;
	}
	,sub: function(checkList) {
		var subc = new tannus_nore_Compiler();
		subc.tools = this.tools;
		subc.operators = this.copyOperators();
		subc.helpers = this.copyHelpers();
		var f = subc.compile(checkList);
		return f;
	}
	,copyOperators: function() {
		var copy = new haxe_ds_StringMap();
		var key = this.operators.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			var _this = this.operators;
			var value = __map_reserved[key1] != null ? _this.getReserved(key1) : _this.h[key1];
			if(__map_reserved[key1] != null) {
				copy.setReserved(key1,value);
			} else {
				copy.h[key1] = value;
			}
		}
		return copy;
	}
	,copyHelpers: function() {
		var copy = new haxe_ds_StringMap();
		var key = this.helpers.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			var _this = this.helpers;
			var value = __map_reserved[key1] != null ? _this.getReserved(key1) : _this.h[key1];
			if(__map_reserved[key1] != null) {
				copy.setReserved(key1,value);
			} else {
				copy.h[key1] = value;
			}
		}
		return copy;
	}
	,testAll: function(o) {
		var _g = 0;
		var _g1 = this.checkFuncs;
		while(_g < _g1.length) {
			var check = _g1[_g];
			++_g;
			if(!check(o)) {
				return false;
			}
		}
		return true;
	}
	,get_end: function() {
		return this.checks.get_empty();
	}
	,checks: null
	,checkFuncs: null
	,operators: null
	,helpers: null
	,tools: null
	,__class__: tannus_nore_Compiler
	,__properties__: {get_end:"get_end"}
};
var tannus_nore_CompilerTools = function(owner) {
	this.c = owner;
};
$hxClasses["tannus.nore.CompilerTools"] = tannus_nore_CompilerTools;
tannus_nore_CompilerTools.__name__ = ["tannus","nore","CompilerTools"];
tannus_nore_CompilerTools.prototype = {
	has: function(o,name) {
		return Object.prototype.hasOwnProperty.call(o,name);
	}
	,get: function(o,name) {
		var tmp;
		var tmp1;
		if(o == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + name];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = o[tmp]();
			} else {
				tmp1 = o[name];
			}
		}
		return tmp1;
	}
	,checkType: function(o,type,loose) {
		if(loose == null) {
			loose = false;
		}
		if(!loose) {
			return tannus_internal_TypeTools.typename(o) == type;
		} else {
			var tc = Type.resolveClass(type);
			return js_Boot.__instanceof(o,tc);
		}
	}
	,checkShortType: function(o,type) {
		var className = tannus_ds_ArrayTools.last(tannus_internal_TypeTools.typename(o).split("."));
		return className == type;
	}
	,helper_check: function(o,name,vargs) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < vargs.length) {
			var v = vargs[_g1];
			++_g1;
			_g.push(tannus_nore_ValueTools.haxeValue(v,this,o)());
		}
		var args = _g;
		var _this = this.c.helpers;
		if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
			var _this1 = this.c.helpers;
			var help = __map_reserved[name] != null ? _this1.getReserved(name) : _this1.h[name];
			return help(o,args);
		} else if(this.has(o,name)) {
			var v1 = this.get(o,name);
			if(typeof(v1) == "boolean") {
				return v1;
			} else if(Reflect.isFunction(v1)) {
				return this.get(o,name).apply(o,args) == true;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,c: null
	,__class__: tannus_nore_CompilerTools
};
var tannus_nore_Lexer = function() {
	this.tokens = [];
	this.canCall = false;
	this.inTernary = false;
	var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
	this.bytes = new tannus_io_ByteStack(this1);
	this.operators = [];
	this.operators.push("=>");
	this.operators.push("is");
	this.operators.push("has");
	this.operators.push("contains");
};
$hxClasses["tannus.nore.Lexer"] = tannus_nore_Lexer;
tannus_nore_Lexer.__name__ = ["tannus","nore","Lexer"];
tannus_nore_Lexer.lexString = function(s) {
	return new tannus_nore_Lexer().lex(s);
};
tannus_nore_Lexer.prototype = {
	operator: function(op) {
		this.operators.push(op);
	}
	,lex: function(s) {
		this.tokens = [];
		this.canCall = false;
		this.inTernary = false;
		var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
		this.bytes = new tannus_io_ByteStack(this1);
		this.bytes = new tannus_io_ByteStack(new tannus_io_impl_NodeBinary(s.length,new Buffer(s)));
		while(!this.bytes.get_empty()) {
			var t = this.lexNext();
			if(t != null) {
				this.tokens.push(t);
			}
		}
		return this.tokens;
	}
	,lexNext: function() {
		var c = this.bytes.peek();
		if(Lambda.has([9,10,11,12,13,32],c)) {
			this.bytes.pop();
			if(!this.bytes.get_empty()) {
				return this.lexNext();
			} else {
				return null;
			}
		} else if(c >= 65 && c <= 90 || c >= 97 && c <= 122 || c == 95) {
			var id = String.fromCharCode(c);
			this.bytes.pop();
			while(!this.bytes.get_empty() && this.isIdent(this.bytes.peek())) id += String.fromCharCode(this.bytes.pop());
			if(Lambda.has(this.operators,id)) {
				return tannus_nore_Token.TOperator(id);
			}
			if(Lambda.has(["if"],id.toLowerCase())) {
				return this.lexStructure(id.toLowerCase());
			} else {
				return tannus_nore_Token.TConst(tannus_nore_Const.CIdent(id));
			}
		} else if(c == 64) {
			this.bytes.pop();
			var id1 = "";
			while(!this.bytes.get_empty() && this.isIdent(this.bytes.peek())) id1 += String.fromCharCode(this.bytes.pop());
			return tannus_nore_Token.TConst(tannus_nore_Const.CReference(id1));
		} else if(Lambda.has([34,39,96],c)) {
			var delimiter = this.bytes.pop();
			var level;
			switch(delimiter) {
			case 34:
				level = 2;
				break;
			case 39:
				level = 1;
				break;
			case 96:
				level = 3;
				break;
			default:
				level = -1;
			}
			var str = this.bytes.readUntil(delimiter).toString();
			this.bytes.pop();
			return tannus_nore_Token.TConst(tannus_nore_Const.CString(str,level));
		} else if(c >= 48 && c <= 57) {
			var snum = String.fromCharCode(this.bytes.pop());
			while(true) {
				var tmp;
				if(!this.bytes.get_empty()) {
					var this1 = this.bytes.peek();
					if(!(this1 >= 48 && this1 <= 57)) {
						tmp = this.bytes.peek() == HxOverrides.cca(".",0);
					} else {
						tmp = true;
					}
				} else {
					tmp = false;
				}
				if(!tmp) {
					break;
				}
				snum += String.fromCharCode(this.bytes.pop());
			}
			return tannus_nore_Token.TConst(tannus_nore_Const.CNumber(parseFloat(snum)));
		} else if(c == 91) {
			var n = HxOverrides.cca("[",0);
			var this2;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			}
			this2 = n;
			var n1 = HxOverrides.cca("]",0);
			var this3;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n1)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n1 + ")!");
			}
			this3 = n1;
			var sgroup = this.readGroup(this2,this3).toString();
			var group = this.sub(sgroup);
			return tannus_nore_Token.TBrackets(group);
		} else if(c == 123) {
			var n2 = HxOverrides.cca("{",0);
			var this4;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n2)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n2 + ")!");
			}
			this4 = n2;
			var n3 = HxOverrides.cca("}",0);
			var this5;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n3)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n3 + ")!");
			}
			this5 = n3;
			var sg = this.readGroup(this4,this5).toString();
			var g = this.sub(sg);
			return tannus_nore_Token.TBoxBrackets(g);
		} else if(this.isOpChar(c)) {
			var state = this.save();
			var op = String.fromCharCode(this.bytes.pop());
			while(!this.bytes.get_empty() && this.isOpChar(this.bytes.peek())) op += String.fromCharCode(this.bytes.pop());
			if(Lambda.has(this.operators,op)) {
				return tannus_nore_Token.TOperator(op);
			} else if(op == "!") {
				return tannus_nore_Token.TNot;
			} else {
				throw new js__$Boot_HaxeError("SyntaxError: Invalid operator \"" + op + "\"!");
			}
		} else if(c == 40) {
			var n4 = HxOverrides.cca("(",0);
			var this6;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n4)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n4 + ")!");
			}
			this6 = n4;
			var n5 = HxOverrides.cca(")",0);
			var this7;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n5)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n5 + ")!");
			}
			this7 = n5;
			var s = this.readGroup(this6,this7);
			var toklist = s._length <= 0 ? [] : this.sub(s.toString());
			var treeStack = new tannus_ds_Stack(toklist.slice());
			var tree = [];
			var hasComma = false;
			while(!treeStack.get_empty()) {
				var t = treeStack.pop();
				if(t[1] != 9) {
					tree.push(t);
				} else {
					hasComma = true;
				}
			}
			if(hasComma) {
				return tannus_nore_Token.TTuple(tree);
			} else {
				return tannus_nore_Token.TGroup(toklist);
			}
		} else if(c == 44) {
			this.bytes.pop();
			return tannus_nore_Token.TComma;
		} else if(c == 124) {
			this.bytes.pop();
			return tannus_nore_Token.TOr;
		} else if(c == 58) {
			this.bytes.pop();
			this.canCall = true;
			var name = this.lexNext();
			if(name == null) {
				throw new js__$Boot_HaxeError("SyntaxError: Expected identifier, got " + Std.string(name));
			} else if(name[1] == 0) {
				if(name[2][1] == 0) {
					var name1 = name[2][2];
					if(!this.bytes.get_empty()) {
						var state1 = this.save();
						var targs = this.lexNext();
						if(targs == null) {
							this.restore(state1);
							console.log("helper");
							return tannus_nore_Token.THelper(name1,[]);
						} else {
							switch(targs[1]) {
							case 4:
								var _hx_tmp = targs[2][0];
								var arg = _hx_tmp;
								console.log("helper");
								return tannus_nore_Token.THelper(name1,[arg]);
							case 5:
								var args = targs[2];
								console.log("helper");
								return tannus_nore_Token.THelper(name1,args);
							default:
								this.restore(state1);
								console.log("helper");
								return tannus_nore_Token.THelper(name1,[]);
							}
						}
					} else {
						console.log("helper");
						return tannus_nore_Token.THelper(name1,[]);
					}
				} else {
					throw new js__$Boot_HaxeError("SyntaxError: Expected identifier, got " + Std.string(name));
				}
			} else {
				throw new js__$Boot_HaxeError("SyntaxError: Expected identifier, got " + Std.string(name));
			}
		} else if(c == 46) {
			this.bytes.pop();
			if(this.bytes.peek() == 46) {
				this.bytes.pop();
				return tannus_nore_Token.TDoubleDot;
			} else {
				throw new js__$Boot_HaxeError("SyntaxError: Expected \".\", got " + String.fromCharCode(this.bytes.peek()));
			}
		} else if(c == 126) {
			this.bytes.pop();
			return tannus_nore_Token.TApprox;
		} else {
			throw new js__$Boot_HaxeError("SyntaxError: Unexpected \"" + String.fromCharCode(c) + "\"!");
		}
	}
	,lexStructure: function(kw) {
		if(kw == "if") {
			var cond = this.lexNext();
			console.log(cond);
			var then = this.lexNext();
			console.log(then);
			if(then[1] == 0) {
				if(then[2][1] == 0) {
					if(then[2][2] == "then") {
						var itrue = this.lexNext();
						console.log(itrue);
						var ifalse = null;
						if(!this.bytes.get_empty()) {
							var state = this.save();
							var otherwise = this.lexNext();
							if(otherwise[1] == 0) {
								if(otherwise[2][1] == 0) {
									if(otherwise[2][2] == "else") {
										ifalse = this.lexNext();
										console.log(ifalse);
									} else {
										this.restore(state);
									}
								} else {
									this.restore(state);
								}
							} else {
								this.restore(state);
							}
						}
						if(cond == null) {
							throw new js__$Boot_HaxeError("SyntaxError: Unexpected if!");
						}
						if(itrue == null) {
							throw new js__$Boot_HaxeError("SyntaxError: Unexpected end of input!");
						}
						return tannus_nore_Token.TIf(cond,itrue,ifalse);
					} else {
						throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(then) + "!");
					}
				} else {
					throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(then) + "!");
				}
			} else {
				throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(then) + "!");
			}
		} else {
			throw new js__$Boot_HaxeError("FuckUpError: \"" + kw + "\" is not a keyword");
		}
	}
	,readGroup: function(start,end) {
		var c = this.bytes.peek();
		if(c == start) {
			var level = 1;
			var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
			var data = this1;
			this.bytes.pop();
			while(level > 0) {
				c = this.bytes.peek();
				if(c == start) {
					++level;
				} else if(c == end) {
					--level;
				}
				if(level > 0) {
					data.push(c);
				}
				this.bytes.pop();
			}
			return data;
		}
		var this2 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
		return this2;
	}
	,sub: function(s) {
		var state = this.save();
		var _it = this.inTernary;
		var result = this.lex(s);
		this.restore(state);
		this.inTernary = _it;
		return result;
	}
	,reset: function() {
		this.tokens = [];
		this.canCall = false;
		this.inTernary = false;
		var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
		this.bytes = new tannus_io_ByteStack(this1);
	}
	,save: function() {
		return { tokens : this.tokens.slice(), "bytes" : this.bytes.copy(), "canCall" : this.canCall};
	}
	,restore: function(s) {
		this.bytes = s.bytes;
		this.tokens = s.tokens;
		this.canCall = s.canCall;
	}
	,next: function() {
		return this.bytes.peek();
	}
	,advance: function() {
		return this.bytes.pop();
	}
	,last: function() {
		return this.tokens.pop();
	}
	,isIdent: function(c) {
		if(!(c >= 48 && c <= 57 || (c >= 65 && c <= 90 || c >= 97 && c <= 122) || c == 46)) {
			return c == 95;
		} else {
			return true;
		}
	}
	,isOpChar: function(c) {
		return Lambda.has(["=","!","<",">","$","^"],String.fromCharCode(c));
	}
	,isOperator: function(op) {
		return Lambda.has(this.operators,op);
	}
	,isKeyword: function(id) {
		return Lambda.has(["if"],id.toLowerCase());
	}
	,get_end: function() {
		return this.bytes.get_empty();
	}
	,bytes: null
	,tokens: null
	,operators: null
	,canCall: null
	,inTernary: null
	,__class__: tannus_nore_Lexer
	,__properties__: {get_end:"get_end"}
};
var tannus_nore_ORegEx = function() { };
$hxClasses["tannus.nore.ORegEx"] = tannus_nore_ORegEx;
tannus_nore_ORegEx.__name__ = ["tannus","nore","ORegEx"];
tannus_nore_ORegEx.compile = function(sel,pred) {
	var comp = new tannus_nore_Compiler();
	if(pred != null) {
		pred(comp);
	}
	return comp.compileString(sel);
};
var tannus_nore_Parser = function() {
	this.reset();
};
$hxClasses["tannus.nore.Parser"] = tannus_nore_Parser;
tannus_nore_Parser.__name__ = ["tannus","nore","Parser"];
tannus_nore_Parser.parseTokens = function(tree) {
	return new tannus_nore_Parser().parse(tree);
};
tannus_nore_Parser.parseString = function(s) {
	var tree = new tannus_nore_Lexer().lex(s);
	return new tannus_nore_Parser().parse(tree);
};
tannus_nore_Parser.prototype = {
	parse: function(tokenList) {
		this.reset();
		this.tokens = new tannus_ds_Stack(tokenList);
		while(!this.tokens.get_empty()) this.tree.push(this.nextCheck());
		return this.tree;
	}
	,nextCheck: function() {
		var t = this.tokens.pop();
		switch(t[1]) {
		case 0:
			if(t[2][1] == 0) {
				var type = t[2][2];
				return tannus_nore_Check.TypeCheck(type);
			} else {
				throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
			}
			break;
		case 2:
			var group = t[2];
			switch(group.length) {
			case 1:
				if(group[0][1] == 0) {
					if(group[0][2][1] == 0) {
						var name = group[0][2][2];
						return tannus_nore_Check.FieldExistsCheck(name);
					} else {
						throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
					}
				} else {
					throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
				}
				break;
			case 3:
				if(group[0][1] == 0) {
					if(group[0][2][1] == 0) {
						if(group[1][1] == 1) {
							switch(group[1][2]) {
							case "=>":
								if(group[2][1] == 3) {
									var _hx_tmp;
									var name1 = group[0][2][2];
									_hx_tmp = this.sub(group[2][2]);
									var checks = _hx_tmp;
									return tannus_nore_Check.FieldValueBlockCheck(name1,checks);
								} else if(group[0][2][2] == "this") {
									var op = group[1][2];
									var valueToken = group[2];
									return tannus_nore_Check.NestedCheck(op,tannus_nore_ValueTools.toValue(valueToken));
								} else {
									var op1 = group[1][2];
									var valueToken1 = group[2];
									var name2 = group[0][2][2];
									return tannus_nore_Check.FieldValueCheck(op1,name2,tannus_nore_ValueTools.toValue(valueToken1));
								}
								break;
							case "is":
								if(group[2][1] == 0) {
									if(group[2][2][1] == 0) {
										var name3 = group[0][2][2];
										var type1 = group[2][2][2];
										return tannus_nore_Check.FieldValueTypeCheck(name3,type1,false);
									} else if(group[0][2][2] == "this") {
										var op2 = group[1][2];
										var valueToken2 = group[2];
										return tannus_nore_Check.NestedCheck(op2,tannus_nore_ValueTools.toValue(valueToken2));
									} else {
										var op3 = group[1][2];
										var valueToken3 = group[2];
										var name4 = group[0][2][2];
										return tannus_nore_Check.FieldValueCheck(op3,name4,tannus_nore_ValueTools.toValue(valueToken3));
									}
								} else if(group[0][2][2] == "this") {
									var op4 = group[1][2];
									var valueToken4 = group[2];
									return tannus_nore_Check.NestedCheck(op4,tannus_nore_ValueTools.toValue(valueToken4));
								} else {
									var op5 = group[1][2];
									var valueToken5 = group[2];
									var name5 = group[0][2][2];
									return tannus_nore_Check.FieldValueCheck(op5,name5,tannus_nore_ValueTools.toValue(valueToken5));
								}
								break;
							default:
								if(group[0][2][2] == "this") {
									var valueToken6 = group[2];
									var op6 = group[1][2];
									return tannus_nore_Check.NestedCheck(op6,tannus_nore_ValueTools.toValue(valueToken6));
								} else {
									var valueToken7 = group[2];
									var op7 = group[1][2];
									var name6 = group[0][2][2];
									return tannus_nore_Check.FieldValueCheck(op7,name6,tannus_nore_ValueTools.toValue(valueToken7));
								}
							}
						} else {
							throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
						}
					} else {
						throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
					}
				} else {
					throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
				}
				break;
			case 4:
				if(group[0][1] == 0) {
					if(group[0][2][1] == 0) {
						if(group[1][1] == 1) {
							if(group[1][2] == "is") {
								if(group[2][1] == 12) {
									if(group[3][1] == 0) {
										if(group[3][2][1] == 0) {
											var name7 = group[0][2][2];
											var type2 = group[3][2][2];
											return tannus_nore_Check.FieldValueTypeCheck(name7,type2,true);
										} else {
											throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
										}
									} else {
										throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
									}
								} else {
									throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
								}
							} else {
								throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
							}
						} else {
							throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
						}
					} else {
						throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
					}
				} else {
					throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
			}
			break;
		case 3:
			var group1 = t[2];
			var subChecks = this.sub(group1);
			return tannus_nore_Check.GroupCheck(subChecks);
		case 4:
			var group2 = t[2];
			var subChecks1 = this.sub(group2);
			return tannus_nore_Check.GroupCheck(subChecks1);
		case 7:
			var argTokens = t[3];
			var name8 = t[2];
			var _g = [];
			var _g1 = 0;
			while(_g1 < argTokens.length) {
				var t1 = argTokens[_g1];
				++_g1;
				_g.push(tannus_nore_ValueTools.toValue(t1));
			}
			var args = _g;
			return tannus_nore_Check.HelperCheck(name8,args);
		case 8:
			var telse = t[4];
			var tthen = t[3];
			var ttest = t[2];
			var toks = [ttest,tthen];
			if(telse != null) {
				toks.push(telse);
			}
			var chl = this.sub(toks);
			return Type.createEnum(tannus_nore_Check,"TernaryCheck",chl);
		case 10:
			var left = this.tree.pop();
			var right = this.nextCheck();
			if(left == null) {
				var r = right;
				throw new js__$Boot_HaxeError("SyntaxError: Unexpected \"|\"!");
			} else if(right == null) {
				var l = left;
				throw new js__$Boot_HaxeError("SyntaxError: Unexpected end of input!");
			} else {
				var l1 = left;
				var r1 = right;
				return tannus_nore_Check.EitherCheck(left,right);
			}
			break;
		case 11:
			var check = this.nextCheck();
			if(check != null) {
				return tannus_nore_Check.InvertedCheck(check);
			} else {
				throw new js__$Boot_HaxeError("SyntaxError: Unexpected end of input!");
			}
			break;
		case 12:
			t = this.tokens.pop();
			if(t[1] == 0) {
				if(t[2][1] == 0) {
					var type3 = t[2][2];
					return tannus_nore_Check.LooseTypeCheck(type3);
				} else {
					throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
				}
			} else {
				throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
			}
			break;
		case 13:
			t = this.tokens.pop();
			if(t[1] == 0) {
				if(t[2][1] == 0) {
					var type4 = t[2][2];
					return tannus_nore_Check.ShortTypeCheck(type4);
				} else {
					throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
				}
			} else {
				throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
			}
			break;
		default:
			throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
		}
	}
	,reset: function() {
		this.tokens = new tannus_ds_Stack();
		this.tree = [];
	}
	,token: function() {
		return this.tokens.pop();
	}
	,last: function() {
		return this.tree.pop();
	}
	,save: function() {
		return { "tokens" : this.tokens.copy(), "tree" : this.tree.slice()};
	}
	,restore: function(s) {
		this.tokens = s.tokens;
		this.tree = s.tree;
	}
	,sub: function(toks) {
		var child = new tannus_nore_Parser();
		return child.parse(toks);
	}
	,get_end: function() {
		return this.tokens.get_empty();
	}
	,tokens: null
	,tree: null
	,__class__: tannus_nore_Parser
	,__properties__: {get_end:"get_end"}
};
var tannus_nore__$Selector_Selector_$Impl_$ = {};
$hxClasses["tannus.nore._Selector.Selector_Impl_"] = tannus_nore__$Selector_Selector_$Impl_$;
tannus_nore__$Selector_Selector_$Impl_$.__name__ = ["tannus","nore","_Selector","Selector_Impl_"];
tannus_nore__$Selector_Selector_$Impl_$._new = function(s) {
	var this1 = new tannus_nore_CSelector(s);
	return this1;
};
tannus_nore__$Selector_Selector_$Impl_$.invert = function(this1) {
	return this1.invert();
};
tannus_nore__$Selector_Selector_$Impl_$.sum = function(this1,other) {
	return this1.sum(other);
};
tannus_nore__$Selector_Selector_$Impl_$.diff = function(this1,other) {
	return this1.diff(other);
};
tannus_nore__$Selector_Selector_$Impl_$.toPredicate = function(this1) {
	return this1.f;
};
tannus_nore__$Selector_Selector_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_nore__$Selector_Selector_$Impl_$.fromString = function(s) {
	var this1 = new tannus_nore_CSelector(s);
	return this1;
};
var tannus_nore_CSelector = function(sel) {
	this.selector = sel;
	this.f = tannus_nore_ORegEx.compile(sel);
};
$hxClasses["tannus.nore.CSelector"] = tannus_nore_CSelector;
tannus_nore_CSelector.__name__ = ["tannus","nore","CSelector"];
tannus_nore_CSelector.prototype = {
	test: function(o) {
		return this.f(o);
	}
	,filter: function(list) {
		return list.filter(this.f);
	}
	,clone: function() {
		var this1 = new tannus_nore_CSelector(this.selector);
		return this1;
	}
	,toString: function() {
		return "Selector(" + this.selector + ")";
	}
	,invert: function() {
		var this1 = new tannus_nore_CSelector("!(" + this.selector + ")");
		return this1;
	}
	,sum: function(other) {
		var this1 = new tannus_nore_CSelector(this.selector + other.selector);
		return this1;
	}
	,diff: function(other) {
		var this1 = new tannus_nore_CSelector(this.selector + other.invert().selector);
		return this1;
	}
	,selector: null
	,f: null
	,__class__: tannus_nore_CSelector
};
var tannus_nore_Token = $hxClasses["tannus.nore.Token"] = { __ename__ : ["tannus","nore","Token"], __constructs__ : ["TConst","TOperator","TBrackets","TBoxBrackets","TGroup","TTuple","TCall","THelper","TIf","TComma","TOr","TNot","TApprox","TDoubleDot"] };
tannus_nore_Token.TConst = function(c) { var $x = ["TConst",0,c]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TOperator = function(op) { var $x = ["TOperator",1,op]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TBrackets = function(tree) { var $x = ["TBrackets",2,tree]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TBoxBrackets = function(tree) { var $x = ["TBoxBrackets",3,tree]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TGroup = function(tree) { var $x = ["TGroup",4,tree]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TTuple = function(values) { var $x = ["TTuple",5,values]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TCall = function(id,args) { var $x = ["TCall",6,id,args]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.THelper = function(id,args) { var $x = ["THelper",7,id,args]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TIf = function(test,then,otherwise) { var $x = ["TIf",8,test,then,otherwise]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TComma = ["TComma",9];
tannus_nore_Token.TComma.toString = $estr;
tannus_nore_Token.TComma.__enum__ = tannus_nore_Token;
tannus_nore_Token.TOr = ["TOr",10];
tannus_nore_Token.TOr.toString = $estr;
tannus_nore_Token.TOr.__enum__ = tannus_nore_Token;
tannus_nore_Token.TNot = ["TNot",11];
tannus_nore_Token.TNot.toString = $estr;
tannus_nore_Token.TNot.__enum__ = tannus_nore_Token;
tannus_nore_Token.TApprox = ["TApprox",12];
tannus_nore_Token.TApprox.toString = $estr;
tannus_nore_Token.TApprox.__enum__ = tannus_nore_Token;
tannus_nore_Token.TDoubleDot = ["TDoubleDot",13];
tannus_nore_Token.TDoubleDot.toString = $estr;
tannus_nore_Token.TDoubleDot.__enum__ = tannus_nore_Token;
var tannus_nore_Const = $hxClasses["tannus.nore.Const"] = { __ename__ : ["tannus","nore","Const"], __constructs__ : ["CIdent","CString","CReference","CNumber"] };
tannus_nore_Const.CIdent = function(id) { var $x = ["CIdent",0,id]; $x.__enum__ = tannus_nore_Const; $x.toString = $estr; return $x; };
tannus_nore_Const.CString = function(s,quotes) { var $x = ["CString",1,s,quotes]; $x.__enum__ = tannus_nore_Const; $x.toString = $estr; return $x; };
tannus_nore_Const.CReference = function(name) { var $x = ["CReference",2,name]; $x.__enum__ = tannus_nore_Const; $x.toString = $estr; return $x; };
tannus_nore_Const.CNumber = function(n) { var $x = ["CNumber",3,n]; $x.__enum__ = tannus_nore_Const; $x.toString = $estr; return $x; };
var tannus_nore_Value = $hxClasses["tannus.nore.Value"] = { __ename__ : ["tannus","nore","Value"], __constructs__ : ["VString","VNumber","VArray","VField"] };
tannus_nore_Value.VString = function(str) { var $x = ["VString",0,str]; $x.__enum__ = tannus_nore_Value; $x.toString = $estr; return $x; };
tannus_nore_Value.VNumber = function(num) { var $x = ["VNumber",1,num]; $x.__enum__ = tannus_nore_Value; $x.toString = $estr; return $x; };
tannus_nore_Value.VArray = function(values) { var $x = ["VArray",2,values]; $x.__enum__ = tannus_nore_Value; $x.toString = $estr; return $x; };
tannus_nore_Value.VField = function(name) { var $x = ["VField",3,name]; $x.__enum__ = tannus_nore_Value; $x.toString = $estr; return $x; };
var tannus_nore_ValueTools = function() { };
$hxClasses["tannus.nore.ValueTools"] = tannus_nore_ValueTools;
tannus_nore_ValueTools.__name__ = ["tannus","nore","ValueTools"];
tannus_nore_ValueTools.toValue = function(t) {
	switch(t[1]) {
	case 0:
		switch(t[2][1]) {
		case 1:
			var str = t[2][2];
			return tannus_nore_Value.VString(str);
		case 2:
			var name = t[2][2];
			return tannus_nore_Value.VField(name);
		case 3:
			var num = t[2][2];
			return tannus_nore_Value.VNumber(num);
		default:
			throw new js__$Boot_HaxeError("ValueError: Cannot get a Value from " + Std.string(t) + "!");
		}
		break;
	case 5:
		var vals = t[2];
		var values = vals.map(tannus_nore_ValueTools.toValue);
		return tannus_nore_Value.VArray(values);
	default:
		throw new js__$Boot_HaxeError("ValueError: Cannot get a Value from " + Std.string(t) + "!");
	}
};
tannus_nore_ValueTools.haxeValue = function(val,tools,o) {
	switch(val[1]) {
	case 0:
		var str = val[2];
		var this1 = function() {
			return str;
		};
		return this1;
	case 1:
		var num = val[2];
		var this2 = function() {
			return num;
		};
		return this2;
	case 2:
		var values = val[2];
		var this3 = function() {
			var _g = [];
			var _g1 = 0;
			while(_g1 < values.length) {
				var v = values[_g1];
				++_g1;
				_g.push(tannus_nore_ValueTools.haxeValue(v,tools,o));
			}
			return _g;
		};
		return this3;
	case 3:
		var name = val[2];
		var this4 = function() {
			return tools.get(o,name);
		};
		return this4;
	}
};
var tannus_nw_FileChooser = function() {
	this.multiple = false;
	this.directory = false;
};
$hxClasses["tannus.nw.FileChooser"] = tannus_nw_FileChooser;
tannus_nw_FileChooser.__name__ = ["tannus","nw","FileChooser"];
tannus_nw_FileChooser.prototype = {
	open: function(callback) {
		var i = new tannus_nw_FileInput();
		i.set_multiple(this.multiple);
		i.set_directory(this.directory);
		i.changeEvent.listen(function(val,files) {
			var entries = val.split(";").map(function(_) {
				return tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath(tannus_sys__$Path_Path_$Impl_$.fromString(_));
			});
			var result = new tannus_nw_FileChooseResult(files,entries);
			callback(result);
		},true);
		i.cancelEvent.once(function() {
			callback(null);
		});
		i.inputElement.click();
	}
	,multiple: null
	,directory: null
	,__class__: tannus_nw_FileChooser
};
var tannus_nw_FileChooseResult = function(webFileList,entries) {
	this.webFileList = webFileList;
	this.entries = entries;
};
$hxClasses["tannus.nw.FileChooseResult"] = tannus_nw_FileChooseResult;
tannus_nw_FileChooseResult.__name__ = ["tannus","nw","FileChooseResult"];
tannus_nw_FileChooseResult.prototype = {
	webFileList: null
	,entries: null
	,__class__: tannus_nw_FileChooseResult
};
var tannus_nw_FileInput = function() {
	var this1 = window;
	this.inputElement = this1.document.createElement("input");
	this.inputElement.type = "file";
	this.cancelEvent = new tannus_io_VoidSignal();
	this.changeEvent = new tannus_io_Signal2();
	this.__initevents();
};
$hxClasses["tannus.nw.FileInput"] = tannus_nw_FileInput;
tannus_nw_FileInput.__name__ = ["tannus","nw","FileInput"];
tannus_nw_FileInput.prototype = {
	__initevents: function() {
		var _gthis = this;
		this.inputElement.addEventListener("click",function(event) {
			var this1 = window;
			this1.document.body.onfocus = function(evt) {
				process.nextTick(function() {
					if(_gthis.inputElement.value.length == 0) {
						_gthis.cancelEvent.call();
					} else {
						var value = _gthis.inputElement.value;
						var this2 = _gthis.inputElement.files;
						var files = this2;
						_gthis.changeEvent.broadcast(value,files);
					}
				});
			};
		});
	}
	,click: function() {
		this.inputElement.click();
	}
	,get_e: function() {
		return this.inputElement;
	}
	,get_multiple: function() {
		return this.inputElement.hasAttribute("multiple");
	}
	,set_multiple: function(v) {
		if(v) {
			this.inputElement.setAttribute("multiple","");
		} else {
			this.inputElement.removeAttribute("multiple");
		}
		return this.inputElement.hasAttribute("multiple");
	}
	,get_directory: function() {
		return this.inputElement.hasAttribute("nwdirectory");
	}
	,set_directory: function(v) {
		if(v) {
			this.inputElement.setAttribute("nwdirectory","");
		} else {
			this.inputElement.removeAttribute("nwdirectory");
		}
		return this.inputElement.hasAttribute("nwdirectory");
	}
	,get_save: function() {
		return this.inputElement.hasAttribute("nwsaveas");
	}
	,set_save: function(v) {
		if(v) {
			this.inputElement.setAttribute("nwsaveas","");
		} else {
			this.inputElement.removeAttribute("nwsaveas");
		}
		return this.inputElement.hasAttribute("nwsaveas");
	}
	,get_saveName: function() {
		if(this.inputElement.hasAttribute("nwsaveas")) {
			var nwsa = this.inputElement.getAttribute("nwsaveas");
			if(nwsa != null && StringTools.trim(nwsa).length == 0) {
				nwsa = null;
			}
			return nwsa;
		} else {
			return null;
		}
	}
	,set_saveName: function(v) {
		this.inputElement.setAttribute("nwsaveas",v);
		return this.get_saveName();
	}
	,inputElement: null
	,changeEvent: null
	,cancelEvent: null
	,__class__: tannus_nw_FileInput
	,__properties__: {set_saveName:"set_saveName",get_saveName:"get_saveName",set_save:"set_save",get_save:"get_save",set_directory:"set_directory",get_directory:"get_directory",set_multiple:"set_multiple",get_multiple:"get_multiple",get_e:"get_e"}
};
var tannus_sys_CDirectory = function(path,create) {
	if(create == null) {
		create = false;
	}
	this._path = path;
	if(tannus_sys_node_NodeFSModule.existsSync(this._path.s)) {
		if(!tannus_sys_node_NodeFileSystem.isDirectory(this._path.s)) {
			throw new js__$Boot_HaxeError("IOError: " + path.s + " is not a Directory!");
		}
	} else if(create) {
		tannus_sys_node_NodeFSModule.mkdirSync(this._path.s);
	} else {
		throw new js__$Boot_HaxeError("IOError: " + path.s + " is not a File or a Directory!");
	}
};
$hxClasses["tannus.sys.CDirectory"] = tannus_sys_CDirectory;
tannus_sys_CDirectory.__name__ = ["tannus","sys","CDirectory"];
tannus_sys_CDirectory.prototype = {
	getEntry: function(name) {
		if(this.hasEntry(name)) {
			return tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath(tannus_sys_CPath.join([this._path,tannus_sys__$Path_Path_$Impl_$.fromString(name)]));
		} else {
			return null;
		}
	}
	,hasEntry: function(name) {
		var pp = tannus_sys_CPath.join([this._path,tannus_sys__$Path_Path_$Impl_$.fromString(name)]);
		if(this._path.get_absolute()) {
			pp = pp.absolutize();
		}
		return tannus_sys_node_NodeFSModule.existsSync(pp.s);
	}
	,file: function(name) {
		var this1 = new tannus_sys_CFile(tannus_sys__$Path_Path_$Impl_$.fromString((this._path.get_absolute() ? "/" : "") + this._path.s + name));
		return this1;
	}
	,dir: function(name,create) {
		if(create == null) {
			create = false;
		}
		var this1 = new tannus_sys_CDirectory(tannus_sys__$Path_Path_$Impl_$.fromString((this._path.get_absolute() ? "/" : "") + tannus_sys_CPath.join([this._path,tannus_sys__$Path_Path_$Impl_$.fromString(name)]).s),create);
		return this1;
	}
	,iterator: function() {
		return new tannus_sys_DirIter(this);
	}
	,walk: function(f) {
		var _g = new tannus_sys_DirIter(this);
		while(_g.ei.hasNext()) {
			var e = _g.next();
			var _g1 = e;
			switch(_g1[1]) {
			case 0:
				f(e);
				break;
			case 1:
				var dir = _g1[2];
				f(e);
				dir.walk(f);
				break;
			}
		}
	}
	,gather: function(tester) {
		var results = [];
		var _g = 0;
		var _g1 = this.get_entries();
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			var _g2 = e;
			switch(_g2[1]) {
			case 0:
				var f = _g2[2];
				if(tester == null) {
					results.push(f);
				} else if(tester(f)) {
					results.push(f);
				}
				break;
			case 1:
				var d = _g2[2];
				var sub = d.gather(tester);
				results = results.concat(sub);
				break;
			}
		}
		return results;
	}
	,search: function(pattern,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(!recursive) {
			var results = [];
			var _g = 0;
			var _g1 = this.get_entries();
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				var tmp;
				if(tannus_sys__$FSEntry_FSEntry_$Impl_$.isFile(e)) {
					var tmp1 = tannus_sys__$FSEntry_FSEntry_$Impl_$.get_path(e).s;
					tmp = pattern.test(tmp1);
				} else {
					tmp = false;
				}
				if(tmp) {
					results.push(tannus_sys__$FSEntry_FSEntry_$Impl_$.file(e));
				}
			}
			return results;
		} else {
			return this.gather(function(f) {
				return pattern.test(f._path.s);
			});
		}
	}
	,'delete': function(force) {
		if(force == null) {
			force = false;
		}
		if(!force) {
			tannus_sys_node_NodeFSModule.rmdirSync(this._path.s);
		} else {
			tannus_sys_node_NodeFSModule.rmdirSync(this._path.s);
		}
	}
	,rename: function(npath) {
		tannus_sys_node_NodeFSModule.renameSync(this._path.s,npath.s);
		this._path = npath;
	}
	,toString: function() {
		return "Directory(" + this._path.s + ")";
	}
	,get_path: function() {
		return this._path;
	}
	,get_exists: function() {
		return tannus_sys_node_NodeFSModule.existsSync(this._path.s);
	}
	,get_subpaths: function() {
		var _gthis = this;
		return tannus_sys_node_NodeFSModule.readdirSync(this._path.get_str()).map(tannus_sys__$Path_Path_$Impl_$.fromString).map(function(sp) {
			sp.set_directory(_gthis._path);
			return sp;
		});
	}
	,get_entries: function() {
		return this.get_subpaths().map(tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath);
	}
	,_path: null
	,__class__: tannus_sys_CDirectory
	,__properties__: {get_entries:"get_entries",get_subpaths:"get_subpaths",get_exists:"get_exists",get_path:"get_path"}
};
var tannus_sys_DirIter = function(cd) {
	var this1 = new tannus_sys_CPath(cd._path.s);
	this.pp = this1;
	this.ei = HxOverrides.iter(tannus_sys_node_NodeFSModule.readdirSync(this.pp.get_str()));
};
$hxClasses["tannus.sys.DirIter"] = tannus_sys_DirIter;
tannus_sys_DirIter.__name__ = ["tannus","sys","DirIter"];
tannus_sys_DirIter.prototype = {
	hasNext: function() {
		return this.ei.hasNext();
	}
	,next: function() {
		var epath = tannus_sys_CPath.join([this.pp,tannus_sys__$Path_Path_$Impl_$.fromString(this.ei.next())]);
		return tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath(epath);
	}
	,ei: null
	,pp: null
	,__class__: tannus_sys_DirIter
};
var tannus_sys__$Directory_Directory_$Impl_$ = {};
$hxClasses["tannus.sys._Directory.Directory_Impl_"] = tannus_sys__$Directory_Directory_$Impl_$;
tannus_sys__$Directory_Directory_$Impl_$.__name__ = ["tannus","sys","_Directory","Directory_Impl_"];
tannus_sys__$Directory_Directory_$Impl_$._new = function(p,create) {
	if(create == null) {
		create = false;
	}
	var this1 = new tannus_sys_CDirectory(p,create);
	return this1;
};
tannus_sys__$Directory_Directory_$Impl_$.get = function(this1,name) {
	if(this1.hasEntry(name)) {
		return tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath(tannus_sys_CPath.join([this1._path,tannus_sys__$Path_Path_$Impl_$.fromString(name)]));
	} else {
		return null;
	}
};
tannus_sys__$Directory_Directory_$Impl_$.fromPath = function(path) {
	var this1 = new tannus_sys_CDirectory(path,false);
	return this1;
};
tannus_sys__$Directory_Directory_$Impl_$.fromString = function(s) {
	var this1 = new tannus_sys_CDirectory(tannus_sys__$Path_Path_$Impl_$.fromString(s),false);
	return this1;
};
var tannus_sys__$FSEntry_FSEntry_$Impl_$ = {};
$hxClasses["tannus.sys._FSEntry.FSEntry_Impl_"] = tannus_sys__$FSEntry_FSEntry_$Impl_$;
tannus_sys__$FSEntry_FSEntry_$Impl_$.__name__ = ["tannus","sys","_FSEntry","FSEntry_Impl_"];
tannus_sys__$FSEntry_FSEntry_$Impl_$.__properties__ = {get_name:"get_name",get_path:"get_path",get_type:"get_type"}
tannus_sys__$FSEntry_FSEntry_$Impl_$._new = function(et) {
	var this1 = et;
	return this1;
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.get_type = function(this1) {
	return this1;
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.get_path = function(this1) {
	var _g = this1;
	switch(_g[1]) {
	case 0:
		var f = _g[2];
		return f._path;
	case 1:
		var f1 = _g[2];
		return f1._path;
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.get_name = function(this1) {
	return tannus_sys__$FSEntry_FSEntry_$Impl_$.get_path(this1).get_name();
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.rename = function(this1,ndir) {
	var _g = this1;
	switch(_g[1]) {
	case 0:
		var f = _g[2];
		f.set_path(ndir);
		break;
	case 1:
		var f1 = _g[2];
		f1.rename(ndir);
		break;
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$["delete"] = function(this1) {
	var _g = this1;
	switch(_g[1]) {
	case 0:
		var f = _g[2];
		tannus_sys_node_NodeFileSystem.deleteFile(f._path.s);
		break;
	case 1:
		var f1 = _g[2];
		f1["delete"]();
		break;
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.file = function(this1) {
	var _g = this1;
	switch(_g[1]) {
	case 0:
		var f = _g[2];
		return f;
	case 1:
		var d = _g[2];
		throw new js__$Boot_HaxeError("IOError: Cannot cast a Directory to a File!");
		break;
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.isFile = function(this1) {
	var _g = this1;
	switch(_g[1]) {
	case 0:
		var f = _g[2];
		return true;
	case 1:
		var d = _g[2];
		return false;
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.isDirectory = function(this1) {
	var _g = this1;
	switch(_g[1]) {
	case 0:
		var f = _g[2];
		return false;
	case 1:
		var d = _g[2];
		return true;
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.folder = function(this1) {
	var _g = this1;
	switch(_g[1]) {
	case 0:
		var f = _g[2];
		throw new js__$Boot_HaxeError("IOError: Cannot cast a File to a Directory!");
		break;
	case 1:
		var d = _g[2];
		return d;
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath = function(p) {
	if(tannus_sys_node_NodeFSModule.existsSync(p.s)) {
		if(tannus_sys_node_NodeFileSystem.isDirectory(p.s)) {
			var this1 = new tannus_sys_CDirectory(p,false);
			var this2 = tannus_sys_FSEntryType.Folder(this1);
			return this2;
		} else {
			var this3 = new tannus_sys_CFile(p);
			var this4 = tannus_sys_FSEntryType.File(this3);
			return this4;
		}
	} else {
		var err = "IOError: Cannot create FSEntry instance for non-existent Path(\"" + p.s + "\")";
		console.log(err);
		throw new js__$Boot_HaxeError(err);
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.fromString = function(s) {
	return tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath(tannus_sys__$Path_Path_$Impl_$.fromString(s));
};
var tannus_sys_FSEntryType = $hxClasses["tannus.sys.FSEntryType"] = { __ename__ : ["tannus","sys","FSEntryType"], __constructs__ : ["File","Folder"] };
tannus_sys_FSEntryType.File = function(f) { var $x = ["File",0,f]; $x.__enum__ = tannus_sys_FSEntryType; $x.toString = $estr; return $x; };
tannus_sys_FSEntryType.Folder = function(d) { var $x = ["Folder",1,d]; $x.__enum__ = tannus_sys_FSEntryType; $x.toString = $estr; return $x; };
var tannus_sys__$File_File_$Impl_$ = {};
$hxClasses["tannus.sys._File.File_Impl_"] = tannus_sys__$File_File_$Impl_$;
tannus_sys__$File_File_$Impl_$.__name__ = ["tannus","sys","_File","File_Impl_"];
tannus_sys__$File_File_$Impl_$._new = function(p) {
	var this1 = new tannus_sys_CFile(p);
	return this1;
};
tannus_sys__$File_File_$Impl_$.fromString = function(p) {
	var this1 = new tannus_sys_CFile(tannus_sys__$Path_Path_$Impl_$.fromString(p));
	return this1;
};
tannus_sys__$File_File_$Impl_$.fromPath = function(p) {
	var this1 = new tannus_sys_CFile(p);
	return this1;
};
tannus_sys__$File_File_$Impl_$.fromByteArray = function(p) {
	var this1 = new tannus_sys_CFile(tannus_sys__$Path_Path_$Impl_$.fromString(p.toString()));
	return this1;
};
var tannus_sys_CFile = function(p) {
	this._path = p;
	if(tannus_sys_node_NodeFSModule.existsSync(this._path.s) && tannus_sys_node_NodeFileSystem.isDirectory(this._path.s)) {
		throw new js__$Boot_HaxeError("FileError: " + ("\"" + this._path.s + "\" is a directory!"));
	}
};
$hxClasses["tannus.sys.CFile"] = tannus_sys_CFile;
tannus_sys_CFile.__name__ = ["tannus","sys","CFile"];
tannus_sys_CFile.ferror = function(msg) {
	throw new js__$Boot_HaxeError("FileError: " + msg);
};
tannus_sys_CFile.prototype = {
	read: function() {
		return tannus_sys_node_NodeFileSystem.read(this._path.s);
	}
	,write: function(data) {
		tannus_sys_node_NodeFileSystem.write(this._path.s,data);
	}
	,append: function(data) {
		tannus_sys_node_NodeFileSystem.append(this._path.s,data);
	}
	,writeString: function(s) {
		tannus_sys_node_NodeFileSystem.write(this._path.s,new tannus_io_impl_NodeBinary(s.length,new Buffer(s)));
	}
	,rename: function(newpath) {
		this.set_path(newpath);
	}
	,'delete': function() {
		tannus_sys_node_NodeFileSystem.deleteFile(this._path.s);
	}
	,toString: function() {
		return "File(" + this._path.s + ")";
	}
	,lines: function(list) {
		if(list == null) {
			var res = [];
			var buf = "";
			var data = tannus_sys_node_NodeFileSystem.read(this._path.s);
			var $byte = data.iterator();
			while($byte.hasNext()) {
				var byte1 = $byte.next();
				if(byte1 == 10 || byte1 == 13) {
					res.push(buf);
					buf = "";
				} else {
					buf += String.fromCharCode(byte1);
				}
			}
			if(buf.length != 0) {
				res.push(buf);
			}
			return res;
		} else {
			var s = list.join("\n");
			var data1 = new tannus_io_impl_NodeBinary(s.length,new Buffer(s));
			tannus_sys_node_NodeFileSystem.write(this._path.s,data1);
			return list;
		}
	}
	,get_exists: function() {
		return tannus_sys_node_NodeFSModule.existsSync(this._path.s);
	}
	,get_size: function() {
		var stats = tannus_sys_node_NodeFileSystem.stat(this._path.s);
		return stats.size;
	}
	,get_data: function() {
		return tannus_sys_node_NodeFileSystem.read(this._path.s);
	}
	,set_data: function(nd) {
		tannus_sys_node_NodeFileSystem.write(this._path.s,nd);
		return tannus_sys_node_NodeFileSystem.read(this._path.s);
	}
	,get_content: function() {
		var f = this;
		var this1 = function() {
			return f;
		};
		var this2 = function(v) {
			f = v;
			return f;
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		var this4 = this3;
		return this4;
	}
	,get_path: function() {
		return this._path;
	}
	,set_path: function(np) {
		tannus_sys_node_NodeFSModule.renameSync(this._path.s,np.s);
		return this._path = np;
	}
	,get_directory: function() {
		var this1 = new tannus_sys_CDirectory(this._path.get_directory(),false);
		return this1;
	}
	,get_input: function() {
		var inp = new haxe_io_BytesInput(this.get_data().toBytes());
		return inp;
	}
	,get_stats: function() {
		return tannus_sys_node_NodeFileSystem.stat(this._path.s);
	}
	,_path: null
	,__class__: tannus_sys_CFile
	,__properties__: {get_stats:"get_stats",get_input:"get_input",get_directory:"get_directory",set_path:"set_path",get_path:"get_path",get_content:"get_content",set_data:"set_data",get_data:"get_data",get_size:"get_size",get_exists:"get_exists"}
};
var tannus_sys__$GlobStar_GlobStar_$Impl_$ = {};
$hxClasses["tannus.sys._GlobStar.GlobStar_Impl_"] = tannus_sys__$GlobStar_GlobStar_$Impl_$;
tannus_sys__$GlobStar_GlobStar_$Impl_$.__name__ = ["tannus","sys","_GlobStar","GlobStar_Impl_"];
tannus_sys__$GlobStar_GlobStar_$Impl_$._new = function(s,flags) {
	if(flags == null) {
		flags = "";
	}
	var this1 = new tannus_sys_CGlobStar(s,flags);
	return this1;
};
tannus_sys__$GlobStar_GlobStar_$Impl_$.fromString = function(s) {
	var this1 = new tannus_sys_CGlobStar(s,"");
	return this1;
};
var tannus_sys_CGlobStar = $hx_exports["globstar"] = function(pat,flags) {
	this.spat = pat;
	var data = tannus_sys_gs_Printer.compile(pat,flags);
	this.pattern = data.regex;
	this.pind = data.params;
};
$hxClasses["tannus.sys.CGlobStar"] = tannus_sys_CGlobStar;
tannus_sys_CGlobStar.__name__ = ["tannus","sys","CGlobStar"];
tannus_sys_CGlobStar.prototype = {
	test: function(path) {
		return this.pattern.match(path);
	}
	,match: function(s) {
		var dat = tannus_io__$RegEx_RegEx_$Impl_$.matches(this.pattern,s);
		if(dat.length == 0) {
			return null;
		} else {
			var m = dat[0];
			var res = { };
			var k = this.pind.keys();
			while(k.hasNext()) {
				var k1 = k.next();
				var _this = this.pind;
				var i = __map_reserved[k1] != null ? _this.getReserved(k1) : _this.h[k1];
				var value = m[i + 1];
				var tmp;
				var tmp1;
				if(res.__properties__) {
					tmp = res.__properties__["set_" + k1];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					res[tmp](value);
				} else {
					res[k1] = value;
				}
				var tmp2;
				if(res == null) {
					null;
				} else {
					var tmp3;
					if(res.__properties__) {
						tmp2 = res.__properties__["get_" + k1];
						tmp3 = tmp2;
					} else {
						tmp3 = false;
					}
					if(tmp3) {
						res[tmp2]();
					}
				}
			}
			return res;
		}
	}
	,toString: function() {
		var s = "GlobStar(" + this.spat + " => " + this.patternString() + ")";
		return s;
	}
	,patternString: function() {
		return this.pattern.r.toString();
	}
	,spat: null
	,pattern: null
	,pind: null
	,printer: null
	,__class__: tannus_sys_CGlobStar
};
var tannus_sys_Token = $hxClasses["tannus.sys.Token"] = { __ename__ : ["tannus","sys","Token"], __constructs__ : ["TLiteral","TExpan"] };
tannus_sys_Token.TLiteral = function(s) { var $x = ["TLiteral",0,s]; $x.__enum__ = tannus_sys_Token; $x.toString = $estr; return $x; };
tannus_sys_Token.TExpan = function(bits) { var $x = ["TExpan",1,bits]; $x.__enum__ = tannus_sys_Token; $x.toString = $estr; return $x; };
var tannus_sys__$Mime_Mime_$Impl_$ = {};
$hxClasses["tannus.sys._Mime.Mime_Impl_"] = tannus_sys__$Mime_Mime_$Impl_$;
tannus_sys__$Mime_Mime_$Impl_$.__name__ = ["tannus","sys","_Mime","Mime_Impl_"];
tannus_sys__$Mime_Mime_$Impl_$.__properties__ = {get_subtype:"get_subtype",get_type:"get_type"}
tannus_sys__$Mime_Mime_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
tannus_sys__$Mime_Mime_$Impl_$.get_type = function(this1) {
	if(tannus_ds_StringUtils.has(this1,"/")) {
		return this1.substring(0,this1.indexOf("/"));
	} else {
		return this1;
	}
};
tannus_sys__$Mime_Mime_$Impl_$.get_subtype = function(this1) {
	var st = tannus_ds_StringUtils.has(this1,"/") ? this1.substring(this1.indexOf("/") + 1) : null;
	if(st == null) {
		return null;
	}
	return tannus_ds_StringUtils.before(tannus_ds_StringUtils.after(st,"."),"+");
};
tannus_sys__$Mime_Mime_$Impl_$.getSegments = function(this1) {
	var res = [];
	res = res.concat(this1.split("/"));
	var last;
	if(res.length == 2) {
		last = res.pop();
		var subs = last.split(".");
		res = res.concat(subs);
		last = res.pop();
		if(tannus_ds_StringUtils.has(last,"+")) {
			var suff = last.split("+");
			res = res.concat(suff);
		} else {
			res.push(last);
		}
	}
	return res;
};
tannus_sys__$Mime_Mime_$Impl_$.getMainType = function(this1) {
	if(tannus_ds_StringUtils.has(this1,"/")) {
		return this1.substring(0,this1.indexOf("/"));
	} else {
		return this1;
	}
};
tannus_sys__$Mime_Mime_$Impl_$.getSubType = function(this1) {
	if(tannus_ds_StringUtils.has(this1,"/")) {
		return this1.substring(this1.indexOf("/") + 1);
	} else {
		return null;
	}
};
tannus_sys__$Mime_Mime_$Impl_$.getTree = function(this1) {
	var st = tannus_ds_StringUtils.has(this1,"/") ? this1.substring(this1.indexOf("/") + 1) : null;
	if(st == null) {
		return null;
	} else if(tannus_ds_StringUtils.has(st,".")) {
		return st.substring(0,st.indexOf("."));
	} else {
		return null;
	}
};
var tannus_sys_Mimes = $hx_exports["tannus"]["sys"]["Mimes"] = function() { };
$hxClasses["tannus.sys.Mimes"] = tannus_sys_Mimes;
tannus_sys_Mimes.__name__ = ["tannus","sys","Mimes"];
tannus_sys_Mimes.minit = function() {
	if(!tannus_sys_Mimes.initted) {
		tannus_sys_Mimes.__init();
	}
};
tannus_sys_Mimes.getMimeType = function(ext) {
	if(!tannus_sys_Mimes.initted) {
		tannus_sys_Mimes.__init();
	}
	if(StringTools.startsWith(ext,".")) {
		ext = ext.substring(1);
	}
	var _this = tannus_sys_Mimes.extensions;
	if(__map_reserved[ext] != null ? _this.existsReserved(ext) : _this.h.hasOwnProperty(ext)) {
		var _this1 = tannus_sys_Mimes.extensions;
		if(__map_reserved[ext] != null) {
			return _this1.getReserved(ext);
		} else {
			return _this1.h[ext];
		}
	} else {
		return "application/octet-stream";
	}
};
tannus_sys_Mimes.getExtensionList = function(mime) {
	if(!tannus_sys_Mimes.initted) {
		tannus_sys_Mimes.__init();
	}
	var _this = tannus_sys_Mimes.types;
	if(__map_reserved[mime] != null ? _this.existsReserved(mime) : _this.h.hasOwnProperty(mime)) {
		var _this1 = tannus_sys_Mimes.types;
		if(__map_reserved[mime] != null) {
			return _this1.getReserved(mime);
		} else {
			return _this1.h[mime];
		}
	} else {
		return [];
	}
};
tannus_sys_Mimes.__init = function() {
	tannus_sys_Mimes.types = new haxe_ds_StringMap();
	tannus_sys_Mimes.extensions = new haxe_ds_StringMap();
	var all = Reflect.fields(tannus_sys_Mimes.primitive);
	var _g = 0;
	while(_g < all.length) {
		var ext = all[_g];
		++_g;
		var this1 = tannus_sys_Mimes.primitive;
		var tmp;
		var type;
		if(this1 == null) {
			type = null;
		} else {
			var type1;
			if(this1.__properties__) {
				tmp = this1.__properties__["get_" + ext];
				type1 = tmp;
			} else {
				type1 = false;
			}
			if(type1) {
				type = this1[tmp]();
			} else {
				type = this1[ext];
			}
		}
		var type2 = Std.string(type);
		var _this = tannus_sys_Mimes.extensions;
		if(__map_reserved[ext] != null) {
			_this.setReserved(ext,type2);
		} else {
			_this.h[ext] = type2;
		}
		var _this1 = tannus_sys_Mimes.types;
		if((__map_reserved[type2] != null ? _this1.getReserved(type2) : _this1.h[type2]) == null) {
			var this2 = tannus_sys_Mimes.types;
			var v = [];
			var _this2 = this2;
			if(__map_reserved[type2] != null) {
				_this2.setReserved(type2,v);
			} else {
				_this2.h[type2] = v;
			}
		}
		var _this3 = tannus_sys_Mimes.types;
		(__map_reserved[type2] != null ? _this3.getReserved(type2) : _this3.h[type2]).push(ext);
	}
	tannus_sys_Mimes.initted = true;
};
tannus_sys_Mimes.getTypeToExtensionsMap = function() {
	if(!tannus_sys_Mimes.initted) {
		tannus_sys_Mimes.__init();
	}
	var m = new haxe_ds_StringMap();
	var mime = tannus_sys_Mimes.types.keys();
	while(mime.hasNext()) {
		var mime1 = mime.next();
		var _this = tannus_sys_Mimes.types;
		var value = (__map_reserved[mime1] != null ? _this.getReserved(mime1) : _this.h[mime1]).slice();
		if(__map_reserved[mime1] != null) {
			m.setReserved(mime1,value);
		} else {
			m.h[mime1] = value;
		}
	}
	return m;
};
var tannus_sys__$Path_Path_$Impl_$ = {};
$hxClasses["tannus.sys._Path.Path_Impl_"] = tannus_sys__$Path_Path_$Impl_$;
tannus_sys__$Path_Path_$Impl_$.__name__ = ["tannus","sys","_Path","Path_Impl_"];
tannus_sys__$Path_Path_$Impl_$._new = function(s) {
	var this1 = new tannus_sys_CPath(s);
	return this1;
};
tannus_sys__$Path_Path_$Impl_$.sum = function(x,y) {
	var this1 = new tannus_sys_CPath(tannus_sys_CPath.join([tannus_sys__$Path_Path_$Impl_$.fromString(x.s),tannus_sys__$Path_Path_$Impl_$.fromString(y.s)]).s);
	return this1;
};
tannus_sys__$Path_Path_$Impl_$.plusPath = function(this1,other) {
	return tannus_sys_CPath.join([this1,other]);
};
tannus_sys__$Path_Path_$Impl_$.plusString = function(this1,other) {
	return tannus_sys_CPath.join([this1,tannus_sys__$Path_Path_$Impl_$.fromString(other)]);
};
tannus_sys__$Path_Path_$Impl_$.toString = function(this1) {
	return this1.s;
};
tannus_sys__$Path_Path_$Impl_$.fromString = function(s) {
	var this1 = new tannus_sys_CPath(s);
	return this1;
};
tannus_sys__$Path_Path_$Impl_$.toByteArray = function(this1) {
	var s = this1.s;
	return new tannus_io_impl_NodeBinary(s.length,new Buffer(s));
};
tannus_sys__$Path_Path_$Impl_$.fromByteArray = function(b) {
	return tannus_sys__$Path_Path_$Impl_$.fromString(b.toString());
};
var tannus_sys_CPath = function(str) {
	this.s = str;
};
$hxClasses["tannus.sys.CPath"] = tannus_sys_CPath;
tannus_sys_CPath.__name__ = ["tannus","sys","CPath"];
tannus_sys_CPath.join = function(list) {
	var bits = [];
	var resroot = list[0] != null && list[0].get_absolute();
	var _g = 0;
	while(_g < list.length) {
		var path = list[_g];
		++_g;
		bits = bits.concat(path.get_pieces());
	}
	bits = bits.filter(function(s) {
		if(s != null) {
			return s.length != 0;
		} else {
			return false;
		}
	});
	var this1 = new tannus_sys_CPath(bits.join("/"));
	var sum = this1.normalize();
	if(resroot) {
		sum = sum.absolutize();
	}
	return sum;
};
tannus_sys_CPath.sjoin = function(slist) {
	return tannus_sys_CPath.join(slist.map(function(s) {
		var this1 = new tannus_sys_CPath(s);
		return this1;
	}));
};
tannus_sys_CPath._expand = function(p) {
	var segments = p.get_pieces();
	var pieces = [];
	var _g = 0;
	while(_g < segments.length) {
		var s = segments[_g];
		++_g;
		switch(s) {
		case "":case ".":
			continue;
			break;
		case "..":
			pieces.pop();
			break;
		default:
			pieces.push(s);
		}
	}
	var result = tannus_sys_CPath.sjoin(pieces).normalize();
	return result;
};
tannus_sys_CPath.err = function(msg) {
	throw new js__$Boot_HaxeError("PathError: " + msg);
};
tannus_sys_CPath.prototype = {
	toString: function() {
		return this.s;
	}
	,normalize: function() {
		var norm = this.s;
		norm = StringTools.replace(norm.split("\\").join("/"),"//","/");
		var _root = StringTools.startsWith(norm,"/");
		if(_root) {
			norm = tannus_ds_StringUtils.after(norm,"/");
		}
		var this1 = new tannus_sys_CPath(norm);
		var r = this1;
		if(this.get_absolute()) {
			r = r.absolutize();
		}
		return r;
	}
	,absolutize: function() {
		var spath = this.s + "";
		if(!StringTools.startsWith(spath,"/")) {
			spath = "/" + spath;
		}
		var this1 = new tannus_sys_CPath(spath);
		return this1;
	}
	,expand: function() {
		var pieces = this.get_pieces();
		var res = [];
		var _g = 0;
		while(_g < pieces.length) {
			var n = pieces[_g];
			++_g;
			switch(n) {
			case "":case ".":
				break;
			case "..":
				res.pop();
				break;
			default:
				res.push(n);
			}
		}
		var this1 = new tannus_sys_CPath(res.join("/"));
		var p = this1;
		if(this.get_absolute()) {
			p = p.absolutize();
		}
		return p;
	}
	,resolve: function(other) {
		var res = tannus_sys_CPath.join([this,other]).expand();
		if(this.get_absolute()) {
			res = res.absolutize();
		}
		return res;
	}
	,relative: function(other) {
		if(this.get_absolute() && other.get_absolute()) {
			var a = this.get_pieces();
			var b = other.get_pieces();
			var keep = [];
			var diffs = 0;
			var additions = [];
			var diffhit = false;
			var _g1 = 0;
			var _g = a.length;
			while(_g1 < _g) {
				var i = _g1++;
				var mine = a[i];
				var yurs = b[i];
				if(mine != yurs) {
					diffhit = true;
				}
				if(!diffhit) {
					keep.push(mine);
				} else {
					++diffs;
					if(yurs != null) {
						additions.push(yurs);
					}
				}
			}
			var respieces = tannus_ds_ArrayTools.times([".."],diffs).concat(additions);
			return tannus_sys_CPath.sjoin(respieces);
		} else {
			throw new js__$Boot_HaxeError("PathError: " + "Both Paths must be absolute!");
		}
	}
	,get_sdir: function() {
		return haxe_io_Path.directory(this.s);
	}
	,get_str: function() {
		return this.s;
	}
	,set_str: function(v) {
		return this.s = v;
	}
	,get_directory: function() {
		var this1 = new tannus_sys_CPath(this.get_sdir());
		return this1;
	}
	,set_directory: function(v) {
		this.s = tannus_sys_CPath.sjoin([v.s,this.get_name()]).s;
		if(v.get_absolute() && !StringTools.startsWith(this.s,"/")) {
			this.s = "/" + this.s;
		}
		return this.get_directory();
	}
	,get_name: function() {
		return haxe_io_Path.withoutDirectory(this.s);
	}
	,set_name: function(v) {
		this.s = tannus_sys_CPath.join([tannus_sys__$Path_Path_$Impl_$.fromString(this.get_sdir()),tannus_sys__$Path_Path_$Impl_$.fromString(v)]).s;
		return this.get_name();
	}
	,get_basename: function() {
		return haxe_io_Path.withoutExtension(this.s);
	}
	,set_basename: function(v) {
		this.set_name(v + ("." + this.get_extension()));
		return this.get_basename();
	}
	,get_extension: function() {
		return haxe_io_Path.extension(this.s);
	}
	,set_extension: function(v) {
		this.s = tannus_ds_StringUtils.beforeLast(this.s,".") + ("." + v);
		return this.get_extension();
	}
	,get_mime: function() {
		if(this.get_extension().length != 0) {
			var this1 = tannus_sys_Mimes.getMimeType(this.get_extension());
			return this1;
		} else {
			return null;
		}
	}
	,get_root: function() {
		return this.get_sdir().length == 0;
	}
	,get_absolute: function() {
		return haxe_io_Path.isAbsolute(this.s);
	}
	,get_pieces: function() {
		return this.s.split("/");
	}
	,set_pieces: function(v) {
		this.s = tannus_sys_CPath.sjoin(v).s;
		return this.get_pieces();
	}
	,s: null
	,__class__: tannus_sys_CPath
	,__properties__: {set_pieces:"set_pieces",get_pieces:"get_pieces",get_absolute:"get_absolute",get_root:"get_root",get_mime:"get_mime",set_extension:"set_extension",get_extension:"get_extension",set_basename:"set_basename",get_basename:"get_basename",set_name:"set_name",get_name:"get_name",set_directory:"set_directory",get_directory:"get_directory",set_str:"set_str",get_str:"get_str",get_sdir:"get_sdir"}
};
var tannus_sys_gs_Lexer = function() {
	this.reserved = [];
	var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
	this.buffer = new tannus_io_ByteStack(this1);
	this.tree = [];
	var set = new tannus_io_impl_NodeBinary("*{[,:<".length,new Buffer("*{[,:<"));
	this.reserved = this.reserved.concat(set.toArray());
};
$hxClasses["tannus.sys.gs.Lexer"] = tannus_sys_gs_Lexer;
tannus_sys_gs_Lexer.__name__ = ["tannus","sys","gs","Lexer"];
tannus_sys_gs_Lexer.prototype = {
	lex: function(s) {
		var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
		this.buffer = new tannus_io_ByteStack(this1);
		this.tree = [];
		this.buffer = new tannus_io_ByteStack(new tannus_io_impl_NodeBinary(s.length,new Buffer(s)));
		while(true) {
			var t = this.lexNext();
			if(t == null) {
				break;
			} else {
				this.tree.push(t);
			}
		}
		return this.tree;
	}
	,lexNext: function() {
		if(this.buffer.get_empty()) {
			return null;
		}
		var c = this.buffer.peek();
		if(c == 42) {
			this.advance();
			if(!this.buffer.get_empty() && this.buffer.peek() == 42) {
				this.advance();
				return tannus_sys_gs_Token.DoubleStar;
			} else {
				return tannus_sys_gs_Token.Star;
			}
		} else if(c == 44) {
			this.advance();
			return tannus_sys_gs_Token.Comma;
		} else if(c == 123) {
			var n = HxOverrides.cca("{",0);
			var this1;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			}
			this1 = n;
			var n1 = HxOverrides.cca("}",0);
			var this2;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n1)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n1 + ")!");
			}
			this2 = n1;
			var betw = this.between(this1,this2);
			var etree = this.ilex(betw);
			var list = [];
			var ct = [];
			var _g = 0;
			while(_g < etree.length) {
				var tk = etree[_g];
				++_g;
				if(tk[1] == 6) {
					list.push(ct);
					ct = [];
				} else {
					ct.push(tk);
				}
			}
			list.push(ct);
			return tannus_sys_gs_Token.Expand(list);
		} else if(c == 91) {
			var n2 = HxOverrides.cca("[",0);
			var this3;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n2)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n2 + ")!");
			}
			this3 = n2;
			var n3 = HxOverrides.cca("]",0);
			var this4;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n3)) {
				throw new js__$Boot_HaxeError("Invalid Byte Value (" + n3 + ")!");
			}
			this4 = n3;
			var opt = this.ilex(this.between(this3,this4));
			return tannus_sys_gs_Token.Optional(opt);
		} else if(c == 58) {
			this.advance();
			return tannus_sys_gs_Token.Colon;
		} else if(c == 60) {
			this.advance();
			var code = "";
			while(!this.buffer.get_empty() && this.buffer.peek() != 62) code += String.fromCharCode(this.advance());
			this.advance();
			var param = this.ilex(code);
			var name = "";
			var check = tannus_sys_gs_Token.Star;
			var bits = [param.shift(),param.shift(),param.shift()];
			if(bits.length == 3) {
				if(bits[0][1] == 0) {
					if(bits[1] == null) {
						if(bits[2] == null) {
							var sname = bits[0][2];
							name = StringTools.trim(sname);
						} else {
							throw new js__$Boot_HaxeError("Unexpected " + Std.string(bits));
						}
					} else if(bits[1][1] == 7) {
						var tcheck = bits[2];
						var sname1 = bits[0][2];
						if(tcheck != null) {
							name = sname1;
							check = tcheck;
						} else {
							throw new js__$Boot_HaxeError("Unexpected " + Std.string(bits));
						}
					} else {
						throw new js__$Boot_HaxeError("Unexpected " + Std.string(bits));
					}
				} else {
					throw new js__$Boot_HaxeError("Unexpected " + Std.string(bits));
				}
			} else {
				throw new js__$Boot_HaxeError("Unexpected " + Std.string(bits));
			}
			return tannus_sys_gs_Token.Param(name,check);
		} else {
			var txt = String.fromCharCode(c);
			this.advance();
			while(!this.buffer.get_empty() && !Lambda.has(this.reserved,this.buffer.peek())) {
				c = this.advance();
				txt += String.fromCharCode(c);
			}
			return tannus_sys_gs_Token.Literal(txt);
		}
	}
	,ilex: function(s) {
		var current = this.save();
		this.tree = [];
		var res = this.lex(s);
		this.restore(current);
		return res;
	}
	,between: function(start,end,recursive) {
		if(recursive == null) {
			recursive = true;
		}
		var c = this.buffer.peek();
		var str = "";
		if(c == start) {
			this.advance();
			var lvl = 1;
			while(!this.buffer.get_empty() && lvl > 0) {
				c = this.buffer.peek();
				if(c == start && recursive) {
					++lvl;
				} else if(c == end) {
					--lvl;
				}
				if(lvl > 0) {
					str += String.fromCharCode(c);
				}
				this.advance();
			}
		} else {
			throw new js__$Boot_HaxeError("Structure not present!");
		}
		return str;
	}
	,reset: function() {
		var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
		this.buffer = new tannus_io_ByteStack(this1);
		this.tree = [];
	}
	,next: function() {
		return this.buffer.peek();
	}
	,advance: function() {
		return this.buffer.pop();
	}
	,reserve: function(set) {
		this.reserved = this.reserved.concat(set.toArray());
	}
	,save: function() {
		return { "buffer" : this.buffer.copy(), "tree" : this.tree};
	}
	,restore: function(s) {
		this.buffer = s.buffer;
		this.tree = s.tree;
	}
	,get_eoi: function() {
		return this.buffer.get_empty();
	}
	,buffer: null
	,tree: null
	,reserved: null
	,__class__: tannus_sys_gs_Lexer
	,__properties__: {get_eoi:"get_eoi"}
};
var tannus_sys_gs_Printer = function() {
	this.groupCount = 0;
	this.params = new haxe_ds_StringMap();
};
$hxClasses["tannus.sys.gs.Printer"] = tannus_sys_gs_Printer;
tannus_sys_gs_Printer.__name__ = ["tannus","sys","gs","Printer"];
tannus_sys_gs_Printer.compile = function(s,flags) {
	var p = new tannus_sys_gs_Printer();
	var t = new tannus_sys_gs_Lexer().lex(s);
	return { "regex" : p.pattern(t,flags), "params" : p.params};
};
tannus_sys_gs_Printer.prototype = {
	pattern: function(tree,flags) {
		if(flags == null) {
			flags = "";
		}
		return new EReg(this.print(tree),flags);
	}
	,print: function(tree) {
		var s = "";
		var _g = 0;
		while(_g < tree.length) {
			var t = tree[_g];
			++_g;
			s += this.printToken(t);
		}
		return s;
	}
	,printToken: function(t,parent) {
		switch(t[1]) {
		case 0:
			var txt = t[2];
			return this.escape(txt);
		case 1:
			var choices = t[2];
			this.groupCount++;
			var f = $bind(this,this.printToken);
			var a1 = t;
			var sprint = function(t1) {
				return f(t1,a1);
			};
			var _g = [];
			var _g1 = 0;
			while(_g1 < choices.length) {
				var c = choices[_g1];
				++_g1;
				_g.push(c.map(sprint).join(""));
			}
			var schoices = _g;
			var canBeEmpty = HxOverrides.remove(schoices,"");
			var res = tannus_ds_StringUtils.wrap(schoices.join("|"),"(",")");
			if(canBeEmpty) {
				res += "?";
			}
			return res;
		case 2:
			var tree = t[2];
			this.groupCount++;
			var f1 = $bind(this,this.printToken);
			var a11 = t;
			var sprint1 = function(t2) {
				return f1(t2,a11);
			};
			return tannus_ds_StringUtils.wrap(tree.map(sprint1).join(""),"(",")") + "?";
		case 3:
			var check = t[3];
			var name = t[2];
			var v = this.groupCount;
			this.params.set(name,v);
			return this.printToken(check,t);
		case 4:
			this.groupCount++;
			return "([^/]+)";
		case 5:
			this.groupCount++;
			return "(.+)";
		default:
			console.log(Std.string(t) + "");
			throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t));
		}
	}
	,escape: function(txt) {
		var esc = [".","^","$","+","(",")","?"];
		var _g = 0;
		while(_g < esc.length) {
			var c = esc[_g];
			++_g;
			txt = StringTools.replace(txt,c,"\\" + c);
		}
		return txt;
	}
	,groupCount: null
	,params: null
	,__class__: tannus_sys_gs_Printer
};
var tannus_sys_gs_Token = $hxClasses["tannus.sys.gs.Token"] = { __ename__ : ["tannus","sys","gs","Token"], __constructs__ : ["Literal","Expand","Optional","Param","Star","DoubleStar","Comma","Colon"] };
tannus_sys_gs_Token.Literal = function(txt) { var $x = ["Literal",0,txt]; $x.__enum__ = tannus_sys_gs_Token; $x.toString = $estr; return $x; };
tannus_sys_gs_Token.Expand = function(pieces) { var $x = ["Expand",1,pieces]; $x.__enum__ = tannus_sys_gs_Token; $x.toString = $estr; return $x; };
tannus_sys_gs_Token.Optional = function(sub) { var $x = ["Optional",2,sub]; $x.__enum__ = tannus_sys_gs_Token; $x.toString = $estr; return $x; };
tannus_sys_gs_Token.Param = function(name,check) { var $x = ["Param",3,name,check]; $x.__enum__ = tannus_sys_gs_Token; $x.toString = $estr; return $x; };
tannus_sys_gs_Token.Star = ["Star",4];
tannus_sys_gs_Token.Star.toString = $estr;
tannus_sys_gs_Token.Star.__enum__ = tannus_sys_gs_Token;
tannus_sys_gs_Token.DoubleStar = ["DoubleStar",5];
tannus_sys_gs_Token.DoubleStar.toString = $estr;
tannus_sys_gs_Token.DoubleStar.__enum__ = tannus_sys_gs_Token;
tannus_sys_gs_Token.Comma = ["Comma",6];
tannus_sys_gs_Token.Comma.toString = $estr;
tannus_sys_gs_Token.Comma.__enum__ = tannus_sys_gs_Token;
tannus_sys_gs_Token.Colon = ["Colon",7];
tannus_sys_gs_Token.Colon.toString = $estr;
tannus_sys_gs_Token.Colon.__enum__ = tannus_sys_gs_Token;
var tannus_sys_internal__$FileContent_FileContent_$Impl_$ = {};
$hxClasses["tannus.sys.internal._FileContent.FileContent_Impl_"] = tannus_sys_internal__$FileContent_FileContent_$Impl_$;
tannus_sys_internal__$FileContent_FileContent_$Impl_$.__name__ = ["tannus","sys","internal","_FileContent","FileContent_Impl_"];
tannus_sys_internal__$FileContent_FileContent_$Impl_$.__properties__ = {get_f:"get_f"}
tannus_sys_internal__$FileContent_FileContent_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
tannus_sys_internal__$FileContent_FileContent_$Impl_$.get_f = function(this1) {
	return this1.get();
};
tannus_sys_internal__$FileContent_FileContent_$Impl_$.append = function(this1,data) {
	tannus_sys_node_NodeFileSystem.append(this1.get()._path.s,data);
};
tannus_sys_internal__$FileContent_FileContent_$Impl_$.toByteArray = function(this1) {
	return tannus_sys_node_NodeFileSystem.read(this1.get()._path.s);
};
tannus_sys_internal__$FileContent_FileContent_$Impl_$.toString = function(this1) {
	return tannus_sys_node_NodeFileSystem.read(this1.get()._path.s).toString();
};
var tannus_sys_node_NodeFSModule = require("fs");
var tannus_sys_node_NodeFileSystem = function() { };
$hxClasses["tannus.sys.node.NodeFileSystem"] = tannus_sys_node_NodeFileSystem;
tannus_sys_node_NodeFileSystem.__name__ = ["tannus","sys","node","NodeFileSystem"];
tannus_sys_node_NodeFileSystem.exists = function(path) {
	return tannus_sys_node_NodeFSModule.existsSync(path);
};
tannus_sys_node_NodeFileSystem.isDirectory = function(path) {
	var stats = tannus_sys_node_NodeFSModule.statSync(path);
	return stats.isDirectory();
};
tannus_sys_node_NodeFileSystem.createDirectory = function(path) {
	tannus_sys_node_NodeFSModule.mkdirSync(path);
};
tannus_sys_node_NodeFileSystem.deleteDirectory = function(path) {
	tannus_sys_node_NodeFSModule.rmdirSync(path);
};
tannus_sys_node_NodeFileSystem.readDirectory = function(path,recursive) {
	if(recursive == null) {
		recursive = false;
	}
	return tannus_sys_node_NodeFSModule.readdirSync(path);
};
tannus_sys_node_NodeFileSystem.write = function(path,data) {
	tannus_sys_node_NodeFSModule.writeFileSync(path,data.b);
};
tannus_sys_node_NodeFileSystem.read = function(path,length) {
	var buf = tannus_sys_node_NodeFSModule.readFileSync(path);
	return tannus_io_impl_NodeBinary.ofData(buf);
};
tannus_sys_node_NodeFileSystem.copy = function(src,dest,cb) {
	var cbCalled = false;
	var done = function(err) {
		if(!cbCalled) {
			cbCalled = true;
			cb(err);
		}
	};
	var rd = tannus_sys_node_NodeFSModule.createReadStream(src.s,{ });
	var f = done;
	rd.on("error",function(a1) {
		f(a1);
	});
	var wr = tannus_sys_node_NodeFSModule.createWriteStream(dest.s,{ });
	var f1 = done;
	wr.on("error",function(a11) {
		f1(a11);
	});
	wr.on("close",function() {
		done();
	});
	rd.pipe(wr);
};
tannus_sys_node_NodeFileSystem.append = function(path,data) {
	var c = tannus_sys_node_NodeFileSystem.read(path);
	c = c.concat(data);
	tannus_sys_node_NodeFileSystem.write(path,c);
};
tannus_sys_node_NodeFileSystem.deleteFile = function(path) {
	tannus_sys_node_NodeFSModule.unlinkSync(path);
};
tannus_sys_node_NodeFileSystem.rename = function(o,n) {
	tannus_sys_node_NodeFSModule.renameSync(o,n);
};
tannus_sys_node_NodeFileSystem.stat = function(path) {
	var s = tannus_sys_node_NodeFSModule.statSync(path);
	return { "size" : s.size, "mtime" : tannus_sys_node_NodeFileSystem.fromJSDate(s.mtime), "ctime" : tannus_sys_node_NodeFileSystem.fromJSDate(s.ctime)};
};
tannus_sys_node_NodeFileSystem.dateFromString = function(s) {
	var bits = s.split("T");
	var dat = bits[0];
	var tim = bits[1];
	tim = StringTools.replace(tim,"Z","");
	bits = dat.split("-");
	var year = Std.parseInt(bits[0]);
	var month = Std.parseInt(bits[1]);
	var day = Std.parseInt(bits[2]);
	bits = tim.split(":");
	var hour = Std.parseInt(bits[0]);
	var minute = Std.parseInt(bits[1]);
	var second = Std.parseInt(bits[2]);
	return new Date(year,month,day,hour,minute,second);
};
tannus_sys_node_NodeFileSystem.fromJSDate = function(s) {
	var year = s.getFullYear();
	var month = s.getMonth();
	var day = s.getDate();
	var hour = s.getHours();
	var minute = s.getMinutes();
	var second = s.getSeconds();
	return new Date(year,month,day,hour,minute,second);
};
var tannus_utils__$Error_Error_$Impl_$ = {};
$hxClasses["tannus.utils._Error.Error_Impl_"] = tannus_utils__$Error_Error_$Impl_$;
tannus_utils__$Error_Error_$Impl_$.__name__ = ["tannus","utils","_Error","Error_Impl_"];
tannus_utils__$Error_Error_$Impl_$._new = function(message) {
	var this1 = new tannus_utils_JavaScriptError(message);
	return this1;
};
tannus_utils__$Error_Error_$Impl_$.toString = function(this1) {
	return Std.string(this1);
};
var tannus_utils_JavaScriptError = function(message) {
	Error.call(this,message);
};
$hxClasses["tannus.utils.JavaScriptError"] = tannus_utils_JavaScriptError;
tannus_utils_JavaScriptError.__name__ = ["tannus","utils","JavaScriptError"];
tannus_utils_JavaScriptError.__super__ = Error;
tannus_utils_JavaScriptError.prototype = $extend(Error.prototype,{
	__class__: tannus_utils_JavaScriptError
});
var tannus_xml_Elem = function(type,parent) {
	this.tag = type;
	this.text = "";
	this.attributes = { };
	this.children = [];
	if(parent != null) {
		parent.addChild(this);
	}
};
$hxClasses["tannus.xml.Elem"] = tannus_xml_Elem;
tannus_xml_Elem.__name__ = ["tannus","xml","Elem"];
tannus_xml_Elem.create = function(t) {
	return new tannus_xml_Elem(t);
};
tannus_xml_Elem.fromXml = function(x) {
	if(x.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + x.nodeType);
	}
	var el = new tannus_xml_Elem(x.nodeName);
	try {
		if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + x.nodeType);
		}
		var firstNode = x.children[0];
		if(firstNode != null) {
			if(firstNode.nodeType == Xml.Document || firstNode.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + firstNode.nodeType);
			}
			el.text = firstNode.nodeValue;
		} else {
			el.text = "";
		}
	} catch( err ) {
		if (err instanceof js__$Boot_HaxeError) err = err.val;
		if( js_Boot.__instanceof(err,String) ) {
		} else throw(err);
	}
	var k = x.attributes();
	while(k.hasNext()) {
		var k1 = k.next();
		el.set(k1,x.get(k1));
	}
	var e = x.elements();
	while(e.hasNext()) {
		var e1 = e.next();
		el.addChild(tannus_xml_Elem.fromXml(e1));
	}
	return el;
};
tannus_xml_Elem.parse = function(code) {
	var _this = Xml.parse(code);
	if(_this.nodeType != Xml.Document && _this.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _this.nodeType);
	}
	return tannus_xml_Elem.fromXml(_this.children[0]);
};
tannus_xml_Elem.prototype = {
	addChild: function(child) {
		this.children.push(child);
		child.parent = this;
	}
	,removeChild: function(child) {
		HxOverrides.remove(this.children,child);
	}
	,insertChild: function(child,index) {
		this.children.splice(index,0,child);
	}
	,replaceChild: function(oldChild,newChild) {
		this.children[this.children.indexOf(oldChild)] = newChild;
	}
	,indexOfChild: function(child) {
		var _g1 = 0;
		var _g = this.children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.children[i] == child) {
				return i;
			}
		}
		return -1;
	}
	,index: function() {
		if(this.parent != null) {
			return this.parent.indexOfChild(this);
		} else {
			return -1;
		}
	}
	,replaceWith: function(other) {
		if(this.parent != null) {
			this.parent.replaceChild(this,other);
		}
	}
	,append: function(child) {
		this.addChild(child);
	}
	,prepend: function(child) {
		this.addChild(child);
		HxOverrides.remove(this.children,child);
		this.children.splice(0,0,child);
	}
	,insertBefore: function(what,before) {
		this.addChild(what);
		HxOverrides.remove(this.children,what);
		var _this = this.children;
		var pos = this.indexOfChild(before);
		_this.splice(pos,0,what);
	}
	,insertAfter: function(what,after) {
		this.addChild(what);
		HxOverrides.remove(this.children,what);
		var _this = this.children;
		var pos = this.indexOfChild(after) + 1;
		_this.splice(pos,0,what);
	}
	,after: function(what) {
		if(this.parent != null) {
			this.parent.insertAfter(what,this);
		}
	}
	,before: function(what) {
		if(this.parent != null) {
			this.parent.insertBefore(what,this);
		}
	}
	,hasChild: function(child) {
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e == child) {
				return true;
			}
		}
		return false;
	}
	,hasDescendendant: function(child) {
		var _g = 0;
		var _g1 = this.descend();
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e == child) {
				return true;
			}
		}
		return false;
	}
	,childOf: function(par) {
		return par.hasChild(this);
	}
	,descendantOf: function(par) {
		return par.hasDescendendant(this);
	}
	,get: function(key) {
		var this1 = this.attributes;
		var tmp;
		var this2;
		if(this1 == null) {
			this2 = null;
		} else {
			var this3;
			if(this1.__properties__) {
				tmp = this1.__properties__["get_" + key];
				this3 = tmp;
			} else {
				this3 = false;
			}
			if(this3) {
				this2 = this1[tmp]();
			} else {
				this2 = this1[key];
			}
		}
		var this4 = this2;
		if(this4 != null) {
			return this4;
		} else {
			return this4;
		}
	}
	,set: function(key,val) {
		var this1 = this.attributes;
		var tmp;
		var tmp1;
		if(this1.__properties__) {
			tmp = this1.__properties__["set_" + key];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			this1[tmp](val);
		} else {
			this1[key] = val;
		}
		var tmp2;
		if(this1 == null) {
			null;
		} else {
			var tmp3;
			if(this1.__properties__) {
				tmp2 = this1.__properties__["get_" + key];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				this1[tmp2]();
			}
		}
		return this.get(key);
	}
	,exists: function(key) {
		return Object.prototype.hasOwnProperty.call(this.attributes,key);
	}
	,attr: function(_batch) {
		var batch = tannus_ds_CObj.create(_batch);
		var _g = 0;
		var _g1 = batch.keys();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var o = batch.o;
			var tmp;
			var tmp1;
			if(o == null) {
				tmp1 = null;
			} else {
				var tmp2;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + key];
					tmp2 = tmp;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					tmp1 = o[tmp]();
				} else {
					tmp1 = o[key];
				}
			}
			this.set(key,Std.string(tmp1));
		}
		return this;
	}
	,walk: function(f) {
		if(this.parent != null) {
			f(this);
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var kid = _g1[_g];
			++_g;
			f(kid);
		}
	}
	,descend: function() {
		var all = [];
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			all.push(c);
			all = all.concat(c.descend());
		}
		return all;
	}
	,query: function(test) {
		var res = [];
		this.walk(function(el) {
			if(test(el)) {
				res.push(el);
			}
		});
		return res;
	}
	,find: function(name) {
		var res = [];
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.tag == name) {
				res.push(e);
			}
		}
		return res;
	}
	,findByName: function(name) {
		return this.query(function(e) {
			return e.tag.toLowerCase() == name.toLowerCase();
		});
	}
	,findByAttribute: function(key,val) {
		return this.query(function(e) {
			var this1 = e.attributes;
			var tmp;
			var this2;
			if(this1 == null) {
				this2 = null;
			} else {
				var this3;
				if(this1.__properties__) {
					tmp = this1.__properties__["get_" + key];
					this3 = tmp;
				} else {
					this3 = false;
				}
				if(this3) {
					this2 = this1[tmp]();
				} else {
					this2 = this1[key];
				}
			}
			var this4 = this2;
			return (this4 != null ? this4 : this4) == val;
		});
	}
	,toXml: function() {
		var xm = Xml.createElement(this.tag);
		if(this.text != "") {
			xm.addChild(Xml.createPCData(this.text));
		}
		var _g = 0;
		var _g1 = Reflect.fields(this.attributes);
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			xm.set(k,this.get(k));
		}
		var _g2 = 0;
		var _g11 = this.children;
		while(_g2 < _g11.length) {
			var child = _g11[_g2];
			++_g2;
			xm.addChild(child.toXml());
		}
		return xm;
	}
	,print: function(pretty) {
		if(pretty == null) {
			pretty = false;
		}
		return tannus_xml_Printer.print(this,pretty);
	}
	,_pre_print: function() {
	}
	,tag: null
	,text: null
	,attributes: null
	,children: null
	,parent: null
	,__class__: tannus_xml_Elem
};
var tannus_xml_Printer = function() {
	this.buffer = "";
	this.history = new tannus_ds_Stack();
	this.space = "   ";
	this.pretty = false;
};
$hxClasses["tannus.xml.Printer"] = tannus_xml_Printer;
tannus_xml_Printer.__name__ = ["tannus","xml","Printer"];
tannus_xml_Printer.print = function(e,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var p = new tannus_xml_Printer();
	p.pretty = pretty;
	return p.generate(e);
};
tannus_xml_Printer.prototype = {
	generate: function(e) {
		this.buffer = "";
		this.history = new tannus_ds_Stack();
		this.preprocess(e);
		this.genElem(e);
		return this.buffer;
	}
	,genElem: function(e,indent) {
		if(indent == null) {
			indent = 0;
		}
		var pre = tannus_ds_StringUtils.times(this.space,indent);
		if(this.pretty) {
			++indent;
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = Reflect.fields(e.attributes);
		while(_g1 < _g2.length) {
			var name = _g2[_g1];
			++_g1;
			var this1 = e.attributes;
			var tmp;
			var tmp1;
			if(this1 == null) {
				tmp1 = null;
			} else {
				var tmp2;
				if(this1.__properties__) {
					tmp = this1.__properties__["get_" + name];
					tmp2 = tmp;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					tmp1 = this1[tmp]();
				} else {
					tmp1 = this1[name];
				}
			}
			_g.push(name + "=\"" + Std.string(tmp1) + "\"");
		}
		var parts = _g;
		var open = "<" + e.tag;
		if(parts.length > 0) {
			open += " ";
			open += parts.join(" ");
		}
		open += ">";
		var close = "</" + e.tag + ">";
		var lines = e.text.split("\n");
		var txt = this.getElemText(e,indent);
		if(e.children.length > 0) {
			this.write(pre + open + txt + "\n");
			var _g11 = 0;
			var _g21 = e.children;
			while(_g11 < _g21.length) {
				var child = _g21[_g11];
				++_g11;
				this.genElem(child,indent);
			}
			this.write(pre + close + "\n");
		} else {
			this.write(pre + open);
			this.write(txt);
			if(lines.length > 1) {
				this.write(pre + close + "\n");
			} else {
				this.write(close + "\n");
			}
		}
	}
	,preprocess: function(e) {
		e._pre_print();
		var _g = 0;
		var _g1 = e.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.preprocess(child);
		}
	}
	,getElemText: function(e,indent) {
		var lines = e.text.split("\n");
		var pre = tannus_ds_StringUtils.times(this.space,indent);
		if(lines.length > 1) {
			var res = "\n";
			var _g = 0;
			while(_g < lines.length) {
				var l = lines[_g];
				++_g;
				res += pre + l + "\n";
			}
			return res;
		} else {
			return e.text;
		}
	}
	,save: function() {
		this.history.add(this.buffer);
	}
	,restore: function() {
		this.buffer = this.history.pop();
	}
	,write: function(s) {
		this.buffer += s;
	}
	,writeln: function(s) {
		this.write(s + "\n");
	}
	,history: null
	,buffer: null
	,space: null
	,pretty: null
	,__class__: tannus_xml_Printer
};
var vex_core_BaseElement = function() {
	this.id = tannus_ds_Memory.allocRandomId(6);
};
$hxClasses["vex.core.BaseElement"] = vex_core_BaseElement;
vex_core_BaseElement.__name__ = ["vex","core","BaseElement"];
vex_core_BaseElement.prototype = {
	appendTo: function(parent) {
	}
	,append: function(child) {
	}
	,remove: function() {
	}
	,removeElement: function(child) {
		return true;
	}
	,hasChild: function(child) {
		return true;
	}
	,attr: function(name,value) {
		if(value == null) {
			return this.getAttribute(name);
		} else {
			return this.setAttribute(name,value);
		}
	}
	,getAttribute: function(key) {
		return "";
	}
	,setAttribute: function(name,value) {
		return Std.string(value);
	}
	,removeAttribute: function(name) {
		return false;
	}
	,hasAttribute: function(name) {
		return false;
	}
	,id: null
	,__class__: vex_core_BaseElement
};
var vex_svg_SVGElement = function() {
	vex_core_BaseElement.call(this);
	this._children = [];
	this.o = tannus_ds_CObj.create(this);
	this.style = new vex_svg_SVGStyle(this);
};
$hxClasses["vex.svg.SVGElement"] = vex_svg_SVGElement;
vex_svg_SVGElement.__name__ = ["vex","svg","SVGElement"];
vex_svg_SVGElement.createElement = function(type) {
	return window.document.createElementNS("http://www.w3.org/2000/svg",type);
};
vex_svg_SVGElement.__super__ = vex_core_BaseElement;
vex_svg_SVGElement.prototype = $extend(vex_core_BaseElement.prototype,{
	appendTo: function(parent) {
		parent.appendChild(this.e);
	}
	,append: function(child) {
		if(js_Boot.__instanceof(child,vex_svg_SVGElement)) {
			this.e.appendChild((js_Boot.__cast(child , vex_svg_SVGElement)).e);
			this._children.push(child);
		} else {
			vex_core_BaseElement.prototype.append.call(this,child);
		}
	}
	,removeElement: function(child) {
		if(js_Boot.__instanceof(child,vex_svg_SVGElement)) {
			var had = this.hasChild(child);
			this.e.removeChild(child.e);
			return had;
		} else {
			return vex_core_BaseElement.prototype.removeElement.call(this,child);
		}
	}
	,remove: function() {
		this.e.remove();
	}
	,hasChild: function(child) {
		return Lambda.has(this._children,child);
	}
	,getAttribute: function(name) {
		return this.e.getAttribute(name);
	}
	,setAttribute: function(name,value) {
		this.e.setAttribute(name,Std.string(value));
		return this.getAttribute(name);
	}
	,removeAttribute: function(name) {
		var had = this.e.hasAttribute(name);
		this.e.removeAttribute(name);
		return had;
	}
	,hasAttribute: function(name) {
		return this.e.hasAttribute(name);
	}
	,addEventListener: function(name,handler,transformer) {
		this.e.addEventListener(name,function(event) {
			if(transformer != null) {
				event = transformer(event);
			}
			handler(event);
		});
	}
	,removeEventListener: function(name,handler) {
		this.e.removeEventListener(name,handler);
	}
	,clone: function() {
		var c = new vex_svg_SVGElement();
		if(this.e != null) {
			c.e = this.e.cloneNode();
			c.style.cloneFrom(this.style);
		}
		return c;
	}
	,toString: function() {
		return this.e.outerHTML;
	}
	,toXml: function() {
		return tannus_xml_Elem.parse(this.toString());
	}
	,print: function(pretty) {
		if(pretty == null) {
			pretty = false;
		}
		var s = "<?xml version=\"1.0\" encoding=\"utf-8\"?>";
		if(pretty) {
			s += "\n";
		}
		s += "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">";
		if(pretty) {
			s += "\n";
		}
		s += this.toXml().print(pretty);
		return s;
	}
	,e: null
	,_children: null
	,o: null
	,style: null
	,__class__: vex_svg_SVGElement
});
var vex_core_BaseDocument = function() {
	vex_svg_SVGElement.call(this);
};
$hxClasses["vex.core.BaseDocument"] = vex_core_BaseDocument;
vex_core_BaseDocument.__name__ = ["vex","core","BaseDocument"];
vex_core_BaseDocument.__super__ = vex_svg_SVGElement;
vex_core_BaseDocument.prototype = $extend(vex_svg_SVGElement.prototype,{
	get_x: function() {
		return 0;
	}
	,set_x: function(v) {
		return 0;
	}
	,get_y: function() {
		return 0;
	}
	,set_y: function(v) {
		return 0;
	}
	,get_width: function() {
		return 0;
	}
	,set_width: function(v) {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,set_height: function(v) {
		return 0;
	}
	,__class__: vex_core_BaseDocument
	,__properties__: {set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
});
var vex_svg_SVGDocument = function() {
	vex_core_BaseDocument.call(this);
	this.e = window.document.createElementNS("http://www.w3.org/2000/svg","svg");
	this.attr("xmlns","http://www.w3.org/2000/svg");
	this.attr("xmlns:xlink","http://www.w3.org/1999/xlink");
	this.attr("version","1.1");
};
$hxClasses["vex.svg.SVGDocument"] = vex_svg_SVGDocument;
vex_svg_SVGDocument.__name__ = ["vex","svg","SVGDocument"];
vex_svg_SVGDocument.__super__ = vex_core_BaseDocument;
vex_svg_SVGDocument.prototype = $extend(vex_core_BaseDocument.prototype,{
	toBlob: function() {
		var s = this.print(true);
		var this1 = new tannus_io_CBlob("image.svg","image/svg+xml",new tannus_io_impl_NodeBinary(s.length,new Buffer(s)));
		return this1;
	}
	,toImage: function() {
		var blob = this.toBlob();
		return gryffin_display_Image.load(URL.createObjectURL(new Blob([blob.data.b],{ "type" : blob.type})));
	}
	,get_x: function() {
		if(this.hasAttribute("x")) {
			return parseFloat(this.getAttribute("x"));
		} else {
			return 0;
		}
	}
	,set_x: function(v) {
		return parseFloat(this.setAttribute("x",v));
	}
	,get_y: function() {
		if(this.hasAttribute("y")) {
			return parseFloat(this.getAttribute("y"));
		} else {
			return 0;
		}
	}
	,set_y: function(v) {
		return parseFloat(this.setAttribute("y",v));
	}
	,get_width: function() {
		if(this.hasAttribute("width")) {
			return parseFloat(this.getAttribute("width"));
		} else {
			return 0;
		}
	}
	,set_width: function(v) {
		return parseFloat(this.setAttribute("width",v));
	}
	,get_height: function() {
		if(this.hasAttribute("height")) {
			return parseFloat(this.getAttribute("height"));
		} else {
			return 0;
		}
	}
	,set_height: function(v) {
		return parseFloat(this.setAttribute("height",v));
	}
	,get_viewBox: function() {
		if(this.hasAttribute("viewBox")) {
			var nums = StringTools.replace(this.getAttribute("viewBox"),","," ").split(" ").filter(function(item) {
				return StringTools.trim(item).length != 0;
			}).map(Std.parseFloat);
			return tannus_geom__$Rectangle_Rectangle_$Impl_$.fromArray(nums);
		} else {
			var this1 = new tannus_geom_CRectangle(this.get_x(),this.get_y(),this.get_width(),this.get_height());
			return this1;
		}
	}
	,set_viewBox: function(v) {
		this.setAttribute("viewBox",[v.x,v.y,v.width,v.height].map(Std.string).join(","));
		return v.clone();
	}
	,get_svg: function() {
		return this.e;
	}
	,__class__: vex_svg_SVGDocument
	,__properties__: $extend(vex_core_BaseDocument.prototype.__properties__,{get_svg:"get_svg",set_viewBox:"set_viewBox",get_viewBox:"get_viewBox"})
});
var vex_svg_SVGPath = $hx_exports["Path"] = function() {
	vex_svg_SVGElement.call(this);
	this.e = window.document.createElementNS("http://www.w3.org/2000/svg","path");
};
$hxClasses["vex.svg.SVGPath"] = vex_svg_SVGPath;
vex_svg_SVGPath.__name__ = ["vex","svg","SVGPath"];
vex_svg_SVGPath.fromCommandString = function(s) {
	var path = new vex_svg_SVGPath();
	path.attr("d",s);
	return path;
};
vex_svg_SVGPath.__super__ = vex_svg_SVGElement;
vex_svg_SVGPath.prototype = $extend(vex_svg_SVGElement.prototype,{
	edit: function() {
		return new vex_svg_path_Editor(this);
	}
	,clone: function() {
		var c = new vex_svg_SVGPath();
		c.set_commands(this.get_commands());
		c.style.cloneFrom(this.style);
		return c;
	}
	,toGeomPath: function() {
		return [];
	}
	,get_d: function() {
		if(this.hasAttribute("d")) {
			return this.attr("d");
		} else {
			return "";
		}
	}
	,set_d: function(v) {
		return this.attr("d",v);
	}
	,get_commands: function() {
		return vex_svg_path_Parser.parseString(this.hasAttribute("d") ? this.attr("d") : "");
	}
	,set_commands: function(list) {
		this.attr("d",vex_svg_path_Printer.print(list));
		return list.slice();
	}
	,__class__: vex_svg_SVGPath
	,__properties__: {set_commands:"set_commands",get_commands:"get_commands",set_d:"set_d",get_d:"get_d"}
});
var vex_svg_SVGStyle = function(element) {
	this.e = element;
	var _gthis = this;
	var o = tannus_ds_CObj.create(this);
	var this1 = function() {
		if(_gthis.e.hasAttribute("stroke")) {
			return _gthis.e.getAttribute("stroke");
		} else {
			return null;
		}
	};
	var this2 = function(v) {
		return _gthis.set_stroke(v);
	};
	var this3 = new tannus_io__$Pointer_Ref(this1,this2);
	var pointer = this3;
	var getter = pointer.getter;
	var o1 = o.o;
	var o2 = o.o;
	var tmp;
	var func;
	if(o2 == null) {
		func = null;
	} else {
		var func1;
		if(o2.__properties__) {
			tmp = o2.__properties__["get_" + "__defineGetter__"];
			func1 = tmp;
		} else {
			func1 = false;
		}
		if(func1) {
			func = o2[tmp]();
		} else {
			func = o2["__defineGetter__"];
		}
	}
	func.apply(o1,["stroke",getter]);
	var setter = pointer.setter;
	var o3 = o.o;
	var o4 = o.o;
	var tmp1;
	var func2;
	if(o4 == null) {
		func2 = null;
	} else {
		var func3;
		if(o4.__properties__) {
			tmp1 = o4.__properties__["get_" + "__defineSetter__"];
			func3 = tmp1;
		} else {
			func3 = false;
		}
		if(func3) {
			func2 = o4[tmp1]();
		} else {
			func2 = o4["__defineSetter__"];
		}
	}
	func2.apply(o3,["stroke",setter]);
	var this4 = function() {
		if(_gthis.e.hasAttribute("stroke-width")) {
			return parseFloat(_gthis.e.getAttribute("stroke-width"));
		} else {
			return 1;
		}
	};
	var this5 = function(v1) {
		return parseFloat(_gthis.e.attr("stroke-width",v1));
	};
	var this6 = new tannus_io__$Pointer_Ref(this4,this5);
	var pointer1 = this6;
	var getter1 = pointer1.getter;
	var o5 = o.o;
	var o6 = o.o;
	var tmp2;
	var func4;
	if(o6 == null) {
		func4 = null;
	} else {
		var func5;
		if(o6.__properties__) {
			tmp2 = o6.__properties__["get_" + "__defineGetter__"];
			func5 = tmp2;
		} else {
			func5 = false;
		}
		if(func5) {
			func4 = o6[tmp2]();
		} else {
			func4 = o6["__defineGetter__"];
		}
	}
	func4.apply(o5,["strokeWidth",getter1]);
	var setter1 = pointer1.setter;
	var o7 = o.o;
	var o8 = o.o;
	var tmp3;
	var func6;
	if(o8 == null) {
		func6 = null;
	} else {
		var func7;
		if(o8.__properties__) {
			tmp3 = o8.__properties__["get_" + "__defineSetter__"];
			func7 = tmp3;
		} else {
			func7 = false;
		}
		if(func7) {
			func6 = o8[tmp3]();
		} else {
			func6 = o8["__defineSetter__"];
		}
	}
	func6.apply(o7,["strokeWidth",setter1]);
	var this7 = function() {
		if(_gthis.e.hasAttribute("fill")) {
			return _gthis.e.getAttribute("fill");
		} else {
			return null;
		}
	};
	var this8 = function(v2) {
		return _gthis.set_fill(v2);
	};
	var this9 = new tannus_io__$Pointer_Ref(this7,this8);
	var pointer2 = this9;
	var getter2 = pointer2.getter;
	var o9 = o.o;
	var o10 = o.o;
	var tmp4;
	var func8;
	if(o10 == null) {
		func8 = null;
	} else {
		var func9;
		if(o10.__properties__) {
			tmp4 = o10.__properties__["get_" + "__defineGetter__"];
			func9 = tmp4;
		} else {
			func9 = false;
		}
		if(func9) {
			func8 = o10[tmp4]();
		} else {
			func8 = o10["__defineGetter__"];
		}
	}
	func8.apply(o9,["fill",getter2]);
	var setter2 = pointer2.setter;
	var o11 = o.o;
	var o12 = o.o;
	var tmp5;
	var func10;
	if(o12 == null) {
		func10 = null;
	} else {
		var func11;
		if(o12.__properties__) {
			tmp5 = o12.__properties__["get_" + "__defineSetter__"];
			func11 = tmp5;
		} else {
			func11 = false;
		}
		if(func11) {
			func10 = o12[tmp5]();
		} else {
			func10 = o12["__defineSetter__"];
		}
	}
	func10.apply(o11,["fill",setter2]);
};
$hxClasses["vex.svg.SVGStyle"] = vex_svg_SVGStyle;
vex_svg_SVGStyle.__name__ = ["vex","svg","SVGStyle"];
vex_svg_SVGStyle.prototype = {
	jsify: function() {
		var _gthis = this;
		var o = tannus_ds_CObj.create(this);
		var this1 = function() {
			if(_gthis.e.hasAttribute("stroke")) {
				return _gthis.e.getAttribute("stroke");
			} else {
				return null;
			}
		};
		var this2 = function(v) {
			return _gthis.set_stroke(v);
		};
		var this3 = new tannus_io__$Pointer_Ref(this1,this2);
		var pointer = this3;
		var getter = pointer.getter;
		var o1 = o.o;
		var o2 = o.o;
		var tmp;
		var func;
		if(o2 == null) {
			func = null;
		} else {
			var func1;
			if(o2.__properties__) {
				tmp = o2.__properties__["get_" + "__defineGetter__"];
				func1 = tmp;
			} else {
				func1 = false;
			}
			if(func1) {
				func = o2[tmp]();
			} else {
				func = o2["__defineGetter__"];
			}
		}
		func.apply(o1,["stroke",getter]);
		var setter = pointer.setter;
		var o3 = o.o;
		var o4 = o.o;
		var tmp1;
		var func2;
		if(o4 == null) {
			func2 = null;
		} else {
			var func3;
			if(o4.__properties__) {
				tmp1 = o4.__properties__["get_" + "__defineSetter__"];
				func3 = tmp1;
			} else {
				func3 = false;
			}
			if(func3) {
				func2 = o4[tmp1]();
			} else {
				func2 = o4["__defineSetter__"];
			}
		}
		func2.apply(o3,["stroke",setter]);
		var this4 = function() {
			if(_gthis.e.hasAttribute("stroke-width")) {
				return parseFloat(_gthis.e.getAttribute("stroke-width"));
			} else {
				return 1;
			}
		};
		var this5 = function(v1) {
			return parseFloat(_gthis.e.attr("stroke-width",v1));
		};
		var this6 = new tannus_io__$Pointer_Ref(this4,this5);
		var pointer1 = this6;
		var getter1 = pointer1.getter;
		var o5 = o.o;
		var o6 = o.o;
		var tmp2;
		var func4;
		if(o6 == null) {
			func4 = null;
		} else {
			var func5;
			if(o6.__properties__) {
				tmp2 = o6.__properties__["get_" + "__defineGetter__"];
				func5 = tmp2;
			} else {
				func5 = false;
			}
			if(func5) {
				func4 = o6[tmp2]();
			} else {
				func4 = o6["__defineGetter__"];
			}
		}
		func4.apply(o5,["strokeWidth",getter1]);
		var setter1 = pointer1.setter;
		var o7 = o.o;
		var o8 = o.o;
		var tmp3;
		var func6;
		if(o8 == null) {
			func6 = null;
		} else {
			var func7;
			if(o8.__properties__) {
				tmp3 = o8.__properties__["get_" + "__defineSetter__"];
				func7 = tmp3;
			} else {
				func7 = false;
			}
			if(func7) {
				func6 = o8[tmp3]();
			} else {
				func6 = o8["__defineSetter__"];
			}
		}
		func6.apply(o7,["strokeWidth",setter1]);
		var this7 = function() {
			if(_gthis.e.hasAttribute("fill")) {
				return _gthis.e.getAttribute("fill");
			} else {
				return null;
			}
		};
		var this8 = function(v2) {
			return _gthis.set_fill(v2);
		};
		var this9 = new tannus_io__$Pointer_Ref(this7,this8);
		var pointer2 = this9;
		var getter2 = pointer2.getter;
		var o9 = o.o;
		var o10 = o.o;
		var tmp4;
		var func8;
		if(o10 == null) {
			func8 = null;
		} else {
			var func9;
			if(o10.__properties__) {
				tmp4 = o10.__properties__["get_" + "__defineGetter__"];
				func9 = tmp4;
			} else {
				func9 = false;
			}
			if(func9) {
				func8 = o10[tmp4]();
			} else {
				func8 = o10["__defineGetter__"];
			}
		}
		func8.apply(o9,["fill",getter2]);
		var setter2 = pointer2.setter;
		var o11 = o.o;
		var o12 = o.o;
		var tmp5;
		var func10;
		if(o12 == null) {
			func10 = null;
		} else {
			var func11;
			if(o12.__properties__) {
				tmp5 = o12.__properties__["get_" + "__defineSetter__"];
				func11 = tmp5;
			} else {
				func11 = false;
			}
			if(func11) {
				func10 = o12[tmp5]();
			} else {
				func10 = o12["__defineSetter__"];
			}
		}
		func10.apply(o11,["fill",setter2]);
	}
	,cloneFrom: function(src) {
		this.set_stroke(src.e.hasAttribute("stroke") ? src.e.getAttribute("stroke") : null);
		var v = src.e.hasAttribute("stroke-width") ? parseFloat(src.e.getAttribute("stroke-width")) : 1;
		parseFloat(this.e.attr("stroke-width",v));
		this.set_fill(src.e.hasAttribute("fill") ? src.e.getAttribute("fill") : null);
	}
	,get_stroke: function() {
		if(this.e.hasAttribute("stroke")) {
			return this.e.getAttribute("stroke");
		} else {
			return null;
		}
	}
	,set_stroke: function(v) {
		if(v == null) {
			v = "none";
		}
		return this.e.setAttribute("stroke",v);
	}
	,get_fill: function() {
		if(this.e.hasAttribute("fill")) {
			return this.e.getAttribute("fill");
		} else {
			return null;
		}
	}
	,set_fill: function(v) {
		if(v == null) {
			v = "none";
		}
		return this.e.setAttribute("fill",v);
	}
	,get_fillOpacity: function() {
		if(this.e.hasAttribute("fill-opacity")) {
			return parseFloat(this.e.attr("fill-opacity"));
		} else {
			return 1;
		}
	}
	,set_fillOpacity: function(v) {
		return parseFloat(this.e.attr("fill-opacity",v));
	}
	,get_strokeWidth: function() {
		if(this.e.hasAttribute("stroke-width")) {
			return parseFloat(this.e.getAttribute("stroke-width"));
		} else {
			return 1;
		}
	}
	,set_strokeWidth: function(v) {
		return parseFloat(this.e.attr("stroke-width",v));
	}
	,get_lineJoin: function() {
		if(this.e.hasAttribute("stroke-linejoin")) {
			return this.e.attr("stroke-linejoin");
		} else {
			return null;
		}
	}
	,set_lineJoin: function(v) {
		return this.e.attr("stroke-linejoin",v);
	}
	,e: null
	,__class__: vex_svg_SVGStyle
	,__properties__: {set_lineJoin:"set_lineJoin",get_lineJoin:"get_lineJoin",set_strokeWidth:"set_strokeWidth",get_strokeWidth:"get_strokeWidth",set_fillOpacity:"set_fillOpacity",get_fillOpacity:"get_fillOpacity",set_fill:"set_fill",get_fill:"get_fill",set_stroke:"set_stroke",get_stroke:"get_stroke"}
};
var vex_svg_path_Command = $hxClasses["vex.svg.path.Command"] = { __ename__ : ["vex","svg","path","Command"], __constructs__ : ["CMove","CLine","CVertical","CHorizontal","CBezier","CQuadratic","CArc","CClose"] };
vex_svg_path_Command.CMove = function(p,relative) { var $x = ["CMove",0,p,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CLine = function(p,relative) { var $x = ["CLine",1,p,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CVertical = function(d,relative) { var $x = ["CVertical",2,d,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CHorizontal = function(d,relative) { var $x = ["CHorizontal",3,d,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CBezier = function(ctrl1,ctrl2,p,relative) { var $x = ["CBezier",4,ctrl1,ctrl2,p,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CQuadratic = function(ctrl,p,relative) { var $x = ["CQuadratic",5,ctrl,p,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CArc = function(radius,angle,large,sweep,p,relative) { var $x = ["CArc",6,radius,angle,large,sweep,p,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CClose = ["CClose",7];
vex_svg_path_Command.CClose.toString = $estr;
vex_svg_path_Command.CClose.__enum__ = vex_svg_path_Command;
var vex_svg_path_Editor = function(p) {
	this.path = p;
	this.commands = this.path.get_commands();
};
$hxClasses["vex.svg.path.Editor"] = vex_svg_path_Editor;
vex_svg_path_Editor.__name__ = ["vex","svg","path","Editor"];
vex_svg_path_Editor.prototype = {
	clear: function() {
		this.commands = [];
	}
	,moveToPoint: function(p) {
		this.commands.push(vex_svg_path_Command.CMove(p,false));
	}
	,moveTo: function(x,y) {
		var this1 = new tannus_geom_TPoint(x,y,0);
		this.moveToPoint(this1);
	}
	,movePoint: function(p) {
		this.commands.push(vex_svg_path_Command.CMove(p,true));
	}
	,move: function(x,y) {
		var this1 = new tannus_geom_TPoint(x,y,0);
		this.movePoint(this1);
	}
	,lineToPoint: function(p) {
		this.commands.push(vex_svg_path_Command.CLine(p,false));
	}
	,lineTo: function(x,y) {
		var this1 = new tannus_geom_TPoint(x,y,0);
		this.lineToPoint(this1);
	}
	,linePoint: function(p) {
		this.commands.push(vex_svg_path_Command.CLine(p,true));
	}
	,line: function(x,y) {
		var this1 = new tannus_geom_TPoint(x,y,0);
		this.linePoint(this1);
	}
	,vertical: function(to_y) {
		this.commands.push(vex_svg_path_Command.CVertical(to_y,false));
	}
	,horizontal: function(to_x) {
		this.commands.push(vex_svg_path_Command.CHorizontal(to_x,false));
	}
	,up: function(d) {
		this.commands.push(vex_svg_path_Command.CVertical(-d,true));
	}
	,down: function(d) {
		this.commands.push(vex_svg_path_Command.CVertical(d,true));
	}
	,right: function(d) {
		this.commands.push(vex_svg_path_Command.CHorizontal(d,true));
	}
	,left: function(d) {
		this.right(-d);
	}
	,addBezier: function(b,relative) {
		if(relative == null) {
			relative = false;
		}
		this.commands.push(vex_svg_path_Command.CBezier(b.ctrl1,b.ctrl2,b.end,relative));
	}
	,bezier: function(c1x,c1y,c2x,c2y,x,y,relative) {
		if(relative == null) {
			relative = false;
		}
		var this1 = new tannus_geom_TPoint(0,0,0);
		var this2 = new tannus_geom_TPoint(c1x,c1y,0);
		var this3 = new tannus_geom_TPoint(c2x,c2y,0);
		var this4 = new tannus_geom_TPoint(x,y,0);
		var b = new tannus_geom_Bezier(this1,this2,this3,this4);
		this.addBezier(b);
	}
	,addEllipticalArc: function(goal,radius,angle,large,sweep,relative) {
		if(relative == null) {
			relative = false;
		}
		if(sweep == null) {
			sweep = false;
		}
		if(large == null) {
			large = false;
		}
		this.commands.push(vex_svg_path_Command.CArc(radius,angle,large,sweep,goal,relative));
	}
	,earc: function(tox,toy,radx,rady,angle,large,sweep,relative) {
		if(relative == null) {
			relative = false;
		}
		if(sweep == null) {
			sweep = false;
		}
		if(large == null) {
			large = false;
		}
		var this1 = new tannus_geom_TPoint(tox,toy,0);
		var this2 = new tannus_geom_TPoint(radx,rady,0);
		this.addEllipticalArc(this1,this2,angle,large,sweep,relative);
	}
	,addArc: function(center,radius,startAngle,endAngle) {
		var x1 = center.get_x() + radius * Math.cos(-(startAngle.v * Math.PI / 180));
		var y1 = center.get_y() + radius * Math.sin(-(startAngle.v * Math.PI / 180));
		var x2 = center.get_x() + radius * Math.cos(-(endAngle.v * Math.PI / 180));
		var y2 = center.get_y() + radius * Math.sin(-(endAngle.v * Math.PI / 180));
		this.moveTo(x1,y1);
		this.earc(x2,y2,radius,radius,endAngle.v,endAngle.v - startAngle.v > 180,false,false);
	}
	,arc: function(cx,cy,r,start,end) {
		var this1 = new tannus_geom_TPoint(cx,cy,0);
		var this2 = new tannus_geom_CAngle(start);
		var this3 = new tannus_geom_CAngle(end);
		this.addArc(this1,r,this2,this3);
	}
	,addWedge: function(center,radius,startAngle,endAngle) {
		var x1 = center.get_x() + radius * Math.cos(-(startAngle.v * Math.PI / 180));
		var y1 = center.get_y() + radius * Math.sin(-(startAngle.v * Math.PI / 180));
		var x2 = center.get_x() + radius * Math.cos(-(endAngle.v * Math.PI / 180));
		var y2 = center.get_y() + radius * Math.sin(-(endAngle.v * Math.PI / 180));
		this.moveToPoint(center);
		this.lineTo(x1,y1);
		this.earc(x2,y2,radius,radius,endAngle.v,endAngle.v - startAngle.v > 180,false,false);
		this.lineToPoint(center);
	}
	,wedge: function(cx,cy,r,start,end) {
		var this1 = new tannus_geom_TPoint(cx,cy,0);
		var this2 = new tannus_geom_CAngle(start);
		var this3 = new tannus_geom_CAngle(end);
		this.addWedge(this1,r,this2,this3);
	}
	,close: function() {
		this.commands.push(vex_svg_path_Command.CClose);
	}
	,save: function() {
		this.path.set_commands(this.commands);
	}
	,undo: function() {
		this.commands.pop();
	}
	,cmd: function(c) {
		this.commands.push(c);
	}
	,path: null
	,commands: null
	,__class__: vex_svg_path_Editor
};
var vex_svg_path_Parser = $hx_exports["PathParser"] = function() {
	this.commands = [];
};
$hxClasses["vex.svg.path.Parser"] = vex_svg_path_Parser;
vex_svg_path_Parser.__name__ = ["vex","svg","path","Parser"];
vex_svg_path_Parser.parseString = function(s) {
	if(s.length == 0) {
		return [];
	} else {
		return new vex_svg_path_Parser().parse(new tannus_io_impl_NodeBinary(s.length,new Buffer(s)));
	}
};
vex_svg_path_Parser.__super__ = tannus_io_LexerBase;
vex_svg_path_Parser.prototype = $extend(tannus_io_LexerBase.prototype,{
	parse: function(data) {
		this.buffer = new tannus_io_ByteStack(data);
		this.commands = [];
		while(!(this.buffer != null && this.buffer.get_empty())) this.commands.push(this.parseCommand());
		return this.commands;
	}
	,parseCommand: function() {
		var c = this.buffer.peek(null);
		if(Lambda.has([9,10,11,12,13,32],c)) {
			this.buffer.pop();
			return this.parseCommand();
		} else if(c == 90) {
			this.buffer.pop();
			return vex_svg_path_Command.CClose;
		} else if(c == 77 || c == 109) {
			var rel = c == 109;
			this.buffer.pop();
			var this1 = new tannus_geom_TPoint(this.readInt(),this.readInt(),0);
			var p = this1;
			return vex_svg_path_Command.CMove(p,rel);
		} else if(c == 76 || c == 108) {
			var rel1 = c == 108;
			this.buffer.pop();
			var this2 = new tannus_geom_TPoint(this.readInt(),this.readInt(),0);
			var p1 = this2;
			return vex_svg_path_Command.CLine(p1,rel1);
		} else if(c == 86 || c == 118) {
			var rel2 = c == 118;
			this.buffer.pop();
			return vex_svg_path_Command.CVertical(this.readInt(),rel2);
		} else if(c == 72 || c == 104) {
			var rel3 = c == 104;
			this.buffer.pop();
			return vex_svg_path_Command.CHorizontal(this.readInt(),rel3);
		} else if(c == 67 || c == 99) {
			var rel4 = c == 99;
			this.buffer.pop();
			var this3 = new tannus_geom_TPoint(this.readFloat(),this.readFloat(),0);
			var ctrl1 = this3;
			var this4 = new tannus_geom_TPoint(this.readFloat(),this.readFloat(),0);
			var ctrl2 = this4;
			var this5 = new tannus_geom_TPoint(this.readFloat(),this.readFloat(),0);
			var p2 = this5;
			return vex_svg_path_Command.CBezier(ctrl1,ctrl2,p2,rel4);
		} else if(c == 81 || c == 113) {
			var rel5 = c == 113;
			this.buffer.pop();
			var this6 = new tannus_geom_TPoint(this.readFloat(),this.readFloat(),0);
			var ctrl = this6;
			var this7 = new tannus_geom_TPoint(this.readFloat(),this.readFloat(),0);
			var p3 = this7;
			return vex_svg_path_Command.CQuadratic(ctrl,p3,rel5);
		} else if(c == 65 || c == 97) {
			var rel6 = c == 97;
			this.buffer.pop();
			var this8 = new tannus_geom_TPoint(this.readFloat(),this.readFloat(),0);
			var radius = this8;
			var angle = this.readFloat();
			var large = this.readInt() == 1;
			var sweep = this.readInt() == 1;
			var this9 = new tannus_geom_TPoint(this.readFloat(),this.readFloat(),0);
			var p4 = this9;
			return vex_svg_path_Command.CArc(radius,angle,large,sweep,p4,rel6);
		} else {
			this.buffer.pop();
			return this.parseCommand();
		}
	}
	,readInt: function() {
		var s = "";
		while(true) {
			var tmp;
			if(!(this.buffer != null && this.buffer.get_empty())) {
				var this1 = this.buffer.peek(null);
				tmp = !(this1 >= 48 && this1 <= 57);
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			this.buffer.pop();
		}
		while(true) {
			var tmp1;
			if(!(this.buffer != null && this.buffer.get_empty())) {
				var this2 = this.buffer.peek(null);
				if(this2 >= 48) {
					tmp1 = this2 <= 57;
				} else {
					tmp1 = false;
				}
			} else {
				tmp1 = false;
			}
			if(!tmp1) {
				break;
			}
			s += String.fromCharCode(this.buffer.pop());
		}
		return Std.parseInt(s);
	}
	,readFloat: function() {
		var s = "";
		while(true) {
			var tmp;
			if(!(this.buffer != null && this.buffer.get_empty())) {
				var this1 = this.buffer.peek(null);
				tmp = !(this1 >= 48 && this1 <= 57);
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			this.buffer.pop();
		}
		while(true) {
			var tmp1;
			if(!(this.buffer != null && this.buffer.get_empty())) {
				var this2 = this.buffer.peek(null);
				if(!(this2 >= 48 && this2 <= 57)) {
					tmp1 = this.buffer.peek(null) == 46;
				} else {
					tmp1 = true;
				}
			} else {
				tmp1 = false;
			}
			if(!tmp1) {
				break;
			}
			s += String.fromCharCode(this.buffer.pop());
		}
		console.log(s);
		return parseFloat(s);
	}
	,readPoint: function() {
		var this1 = new tannus_geom_TPoint(this.readFloat(),this.readFloat(),0);
		return this1;
	}
	,readBool: function() {
		return this.readInt() == 1;
	}
	,commands: null
	,__class__: vex_svg_path_Parser
});
var vex_svg_path_Printer = function() {
};
$hxClasses["vex.svg.path.Printer"] = vex_svg_path_Printer;
vex_svg_path_Printer.__name__ = ["vex","svg","path","Printer"];
vex_svg_path_Printer.print = function(list) {
	return new vex_svg_path_Printer().printCommands(list);
};
vex_svg_path_Printer.prototype = {
	printCommands: function(list) {
		var this1 = new tannus_io_impl_NodeBinary(0,new Buffer(0));
		this.buffer = this1;
		this.commands = list;
		var _g = 0;
		var _g1 = this.commands;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.printCommand(c);
		}
		return this.buffer.toString();
	}
	,printCommand: function(c) {
		switch(c[1]) {
		case 0:
			var rel = c[3];
			var pos = c[2];
			var s = "M";
			if(rel) {
				s = s.toLowerCase();
			}
			this.buffer.appendString(s);
			var n = pos.get_x();
			this.buffer.appendString(n + "");
			this.buffer.appendString(" ");
			var n1 = pos.get_y();
			this.buffer.appendString(n1 + "");
			break;
		case 1:
			var rel1 = c[3];
			var pos1 = c[2];
			var s1 = "L";
			if(rel1) {
				s1 = s1.toLowerCase();
			}
			this.buffer.appendString(s1);
			var n2 = pos1.get_x();
			this.buffer.appendString(n2 + "");
			this.buffer.appendString(" ");
			var n3 = pos1.get_y();
			this.buffer.appendString(n3 + "");
			break;
		case 2:
			var rel2 = c[3];
			var d = c[2];
			var s2 = "V";
			if(rel2) {
				s2 = s2.toLowerCase();
			}
			this.buffer.appendString(s2);
			this.buffer.appendString(d + "");
			break;
		case 3:
			var rel3 = c[3];
			var d1 = c[2];
			var s3 = "H";
			if(rel3) {
				s3 = s3.toLowerCase();
			}
			this.buffer.appendString(s3);
			this.buffer.appendString(d1 + "");
			break;
		case 4:
			var rel4 = c[5];
			var pos2 = c[4];
			var two = c[3];
			var one = c[2];
			var s4 = "C";
			if(rel4) {
				s4 = s4.toLowerCase();
			}
			this.buffer.appendString(s4);
			this.points([one,two,pos2]);
			break;
		case 5:
			var rel5 = c[4];
			var pos3 = c[3];
			var ctrl = c[2];
			var s5 = "Q";
			if(rel5) {
				s5 = s5.toLowerCase();
			}
			this.buffer.appendString(s5);
			this.points([ctrl,pos3]);
			break;
		case 6:
			var rel6 = c[7];
			var pos4 = c[6];
			var sweep = c[5];
			var large = c[4];
			var angle = c[3];
			var radius = c[2];
			var s6 = "A";
			if(rel6) {
				s6 = s6.toLowerCase();
			}
			this.buffer.appendString(s6);
			var n4 = radius.get_x();
			this.buffer.appendString(n4 + "");
			this.buffer.appendString(" ");
			var n5 = radius.get_y();
			this.buffer.appendString(n5 + "");
			this.buffer.appendString(" ");
			this.buffer.appendString(angle + "");
			this.buffer.appendString(" ");
			this.buffer.appendString(large ? "1" : "0");
			this.buffer.appendString(" ");
			this.buffer.appendString(sweep ? "1" : "0");
			this.buffer.appendString(" ");
			var n6 = pos4.get_x();
			this.buffer.appendString(n6 + "");
			this.buffer.appendString(" ");
			var n7 = pos4.get_y();
			this.buffer.appendString(n7 + "");
			break;
		case 7:
			this.buffer.appendString("Z");
			break;
		}
	}
	,tag: function(s,lower) {
		if(lower) {
			s = s.toLowerCase();
		}
		this.buffer.appendString(s);
	}
	,points: function(list) {
		var last = list.pop();
		var _g = 0;
		while(_g < list.length) {
			var p = list[_g];
			++_g;
			var n = p.get_x();
			this.buffer.appendString(n + "");
			this.buffer.appendString(" ");
			var n1 = p.get_y();
			this.buffer.appendString(n1 + "");
			this.buffer.appendString(" ");
		}
		var n2 = last.get_x();
		this.buffer.appendString(n2 + "");
		this.buffer.appendString(" ");
		var n3 = last.get_y();
		this.buffer.appendString(n3 + "");
	}
	,point: function(p) {
		var n = p.get_x();
		this.buffer.appendString(n + "");
		this.buffer.appendString(" ");
		var n1 = p.get_y();
		this.buffer.appendString(n1 + "");
	}
	,'float': function(n) {
		this.buffer.appendString(n + "");
	}
	,bool: function(v) {
		this.buffer.appendString(v ? "1" : "0");
	}
	,w: function(s) {
		this.buffer.appendString(s);
	}
	,buffer: null
	,commands: null
	,__class__: vex_svg_path_Printer
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses["Bool"] = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
electron_ext_FileFilter.VIDEO = new electron_ext_FileFilter("video",["mp4","webm","ogg"]);
electron_ext_FileFilter.AUDIO = new electron_ext_FileFilter("audio",["mp3","ogg","wav"]);
var __map_reserved = {}
var q = window.jQuery;
var js = js || {}
js.JQuery = q;
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
pman_display_Icons.icon_data = { pause : "M 26.9167,23.75L 33.25,23.75L 33.25,52.25L 26.9167,52.25L 26.9167,23.75 Z M 42.75,23.75L 49.0833,23.75L 49.0833,52.25L 42.75,52.25L 42.75,23.75 Z", sound3 : "M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z M 57.0079,38.0053C 57.0079,42.8155 55.0582,47.1702 51.906,50.3225L 49.6665,48.083C 52.2456,45.5039 53.8408,41.9409 53.8408,38.0053C 53.8408,34.0279 52.2115,30.431 49.5839,27.8457L 51.4982,25.2933C 54.8892,28.4715 57.0079,32.991 57.0079,38.0053 Z M 50.6737,38.0053C 50.6737,41.4696 49.0845,44.5627 46.5954,46.5954L 44.3398,44.3399C 46.2628,42.8953 47.5066,40.5956 47.5066,38.0053C 47.5066,35.4151 46.2628,33.1153 44.3398,31.6708L 46.5954,29.4152C 49.0845,31.4479 50.6737,34.541 50.6737,38.0053 Z M 44.3395,38.0053C 44.3395,40.1167 42.9621,41.9064 41.0568,42.5248L 39.5889,39.5889C 40.4634,39.5889 41.1724,38.8799 41.1724,38.0053C 41.1724,37.1307 40.4634,36.4218 39.5889,36.4218L 41.0568,33.4858C 42.9621,34.1042 44.3395,35.8939 44.3395,38.0053 Z", sound2 : "M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z M 50.6737,38.0053C 50.6737,41.4696 49.0845,44.5627 46.5954,46.5954L 44.3398,44.3399C 46.2628,42.8953 47.5066,40.5956 47.5066,38.0053C 47.5066,35.4151 46.2628,33.1153 44.3398,31.6708L 46.5954,29.4152C 49.0845,31.4479 50.6737,34.541 50.6737,38.0053 Z M 44.3395,38.0053C 44.3395,40.1167 42.9621,41.9064 41.0568,42.5248L 39.5889,39.5889C 40.4634,39.5889 41.1724,38.8799 41.1724,38.0053C 41.1724,37.1307 40.4634,36.4218 39.5889,36.4218L 41.0568,33.4858C 42.9621,34.1042 44.3395,35.8939 44.3395,38.0053 Z", sound1 : "M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z M 44.3395,38.0053C 44.3395,40.1167 42.9621,41.9064 41.0568,42.5248L 39.5889,39.5889C 40.4634,39.5889 41.1724,38.8799 41.1724,38.0053C 41.1724,37.1307 40.4634,36.4218 39.5889,36.4218L 41.0568,33.4858C 42.9621,34.1042 44.3395,35.8939 44.3395,38.0053 Z", sound0 : "M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z", previous : "M 33.6458,38L 49.4792,53.8333L 38.7917,53.8333L 22.1667,38L 38.7917,22.1667L 49.4792,22.1667L 33.6458,38 Z", 'sound-muted' : "M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z M 40.9242,44.3957L 46.5229,38.797L 40.9242,33.1983L 44.2834,29.8391L 49.8821,35.4378L 55.4807,29.8392L 58.8399,33.1985L 53.2414,38.797L 58.8401,44.3957L 55.4808,47.7549L 49.8821,42.1562L 44.2834,47.7549L 40.9242,44.3957 Z", tag : "M 24.5416,19L 33.25,19L 55.4167,41.1667C 56.6533,42.4033 56.6533,44.4083 55.4167,45.645L 45.645,55.4167C 44.4084,56.6533 42.4033,56.6533 41.1667,55.4167L 19,33.25L 19,24.5417C 19,22.6945 19,20.8472 19.9236,19.9236C 20.8472,19 22.6944,19 24.5416,19 Z M 26.9167,23.75C 25.1678,23.75 23.75,25.1678 23.75,26.9167C 23.75,28.6656 25.1678,30.0833 26.9167,30.0833C 28.6656,30.0833 30.0833,28.6656 30.0833,26.9167C 30.0833,25.1678 28.6656,23.75 26.9167,23.75 Z", cog : "M 27.5314,21.8628L 33.0126,19.4224L 34.7616,23.3507C 36.6693,22.9269 38.6044,22.8903 40.4668,23.2026L 42.0083,19.1868L 47.6098,21.337L 46.0683,25.3528C 47.6612,26.3669 49.0747,27.6889 50.2088,29.2803L 54.1371,27.5313L 56.5776,33.0126L 52.6493,34.7616C 53.0731,36.6693 53.1097,38.6043 52.7974,40.4668L 56.8131,42.0083L 54.6629,47.6097L 50.6472,46.0683C 49.6331,47.6613 48.3111,49.0748 46.7197,50.2089L 48.4686,54.1372L 42.9874,56.5776L 41.2384,52.6493C 39.3307,53.0731 37.3957,53.1097 35.5333,52.7974L 33.9918,56.8131L 28.3903,54.6629L 29.9318,50.6472C 28.3388,49.6331 26.9252,48.3111 25.7911,46.7196L 21.8628,48.4686L 19.4224,42.9873L 23.3507,41.2383C 22.9269,39.3307 22.8903,37.3957 23.2026,35.5332L 19.1869,33.9918L 21.3371,28.3903L 25.3528,29.9318C 26.3669,28.3388 27.6889,26.9252 29.2804,25.7911L 27.5314,21.8628 Z M 34.3394,29.7781C 29.7985,31.7998 27.7564,37.1198 29.7781,41.6606C 31.7998,46.2015 37.1198,48.2436 41.6606,46.2219C 46.2015,44.2002 48.2436,38.8802 46.2219,34.3394C 44.2002,29.7985 38.8802,27.7564 34.3394,29.7781 Z", shuffle : "M 14.25,45.9166L 20.5834,45.9167L 39.1874,23.75L 47.8958,23.75L 41.1667,17.4167L 51.4583,17.4167L 61.75,26.9166L 51.4583,36.4167L 41.1667,36.4167L 47.8958,30.0833L 41.1667,30.0833L 22.1667,52.25L 14.25,52.25L 14.25,45.9166 Z M 14.25,30.0833L 14.25,23.75L 22.1667,23.75L 29.6875,32.5243L 26.1226,36.6834L 20.5833,30.0833L 14.25,30.0833 Z M 41.1667,45.9167L 47.8958,45.9167L 41.1666,39.5833L 51.4583,39.5834L 61.75,49.0834L 51.4583,58.5833L 41.1666,58.5833L 47.8958,52.25L 39.1873,52.25L 31.9416,43.6167L 35.5684,39.3854L 41.1667,45.9167 Z", bluetooth : "M 51,47L 36,61L 36,43L 28.25,50L 25.25,46.75L 35,38L 25.25,29.25L 28.25,26L 36,32L 36,14L 51,29L 42,38L 51,47 Z M 41,43L 41,50.5L 44.5,46.5L 41,43 Z M 41,33L 44.5,29.5L 41,25.3995L 41,33 Z", sort : "M 51.25,40L 38,53.25L 24.75,40L 51.25,40 Z M 51.25,36L 24.75,36L 38,22.75L 51.25,36 Z", plus : "M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z", play : "M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z", next : "M 42.3542,38L 26.5208,53.8333L 37.2083,53.8333L 53.8333,38L 37.2083,22.1667L 26.5208,22.1667L 42.3542,38 Z", close : "M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z", clock : "M 38,23.75C 46.7445,23.75 53.8333,30.8388 53.8333,39.5833C 53.8333,48.3278 46.7445,55.4167 38,55.4167C 29.2555,55.4167 22.1667,48.3278 22.1667,39.5833C 22.1667,30.8388 29.2555,23.75 38,23.75 Z M 38,27.7083C 31.4416,27.7083 26.125,33.025 26.125,39.5833C 26.125,46.1417 31.4416,51.4583 38,51.4583C 44.5584,51.4583 49.875,46.1417 49.875,39.5833C 49.875,33.025 44.5584,27.7083 38,27.7083 Z M 37.6042,30.875C 38.4786,30.875 39.1875,31.5839 39.1875,32.4583L 39.1875,38.3959L 45.125,38.3959C 45.9994,38.3959 46.7083,39.1047 46.7083,39.9792L 46.7083,40.7708C 46.7083,41.6453 45.9994,42.3542 45.125,42.3542L 38,42.3542C 37.2083,42.2222 36.4167,42.0903 35.9548,41.6285C 35.493,41.1667 35.3611,40.375 35.2292,39.5833L 35.2292,32.4583C 35.2292,31.5839 35.938,30.875 36.8125,30.875L 37.6042,30.875 Z M 49.0833,20.5833C 52.5811,20.5833 55.4167,23.4189 55.4167,26.9167C 55.4167,28.4256 54.889,29.8113 54.008,30.8993C 51.9429,27.1006 48.5651,24.1189 44.4835,22.5632C 45.6379,21.3439 47.2718,20.5833 49.0833,20.5833 Z M 26.9167,20.5834C 28.7282,20.5834 30.3621,21.3439 31.5165,22.5632C 27.4349,24.1189 24.0571,27.1006 21.992,30.8993C 21.111,29.8113 20.5833,28.4256 20.5833,26.9167C 20.5833,23.4189 23.4189,20.5834 26.9167,20.5834 Z", clear : "M 18.0147,41.5355C 16.0621,39.5829 16.0621,36.4171 18.0147,34.4645L 26.9646,25.5149C 28.0683,24.4113 29,24 31,24L 52,24C 54.7614,24 57,26.2386 57,29L 57,47C 57,49.7614 54.7614,52 52,52L 31,52C 29,52 28.0683,51.589 26.9646,50.4854L 18.0147,41.5355 Z M 47.5281,42.9497L 42.5784,37.9999L 47.5281,33.0502L 44.9497,30.4717L 40,35.4215L 35.0502,30.4717L 32.4718,33.0502L 37.4215,37.9999L 32.4718,42.9497L 35.0502,45.5281L 40,40.5783L 44.9497,45.5281L 47.5281,42.9497 Z", collapse : "M 54.2499,34L 42,34L 42,21.7501L 45.9999,17.7501L 45.9999,26.7501L 53.9999,18.7501L 57.2499,22.0001L 49.2499,30.0001L 58.2499,30.0001L 54.2499,34 Z M 34,21.7501L 34,34L 21.75,34L 17.75,30.0001L 26.75,30.0001L 18.75,22.0001L 22,18.7501L 30,26.7501L 30,17.7501L 34,21.7501 Z M 21.75,42L 34,42L 34,54.25L 30,58.25L 30,49.25L 22,57.25L 18.75,54L 26.75,46L 17.75,46L 21.75,42 Z M 42,54.25L 42,42L 54.2499,42L 58.2499,46L 49.2499,46.0001L 57.2499,54L 53.9999,57.25L 45.9999,49.25L 45.9999,58.25L 42,54.25 Z", expand : "M 30.25,58L 18,58L 18,45.75L 22,41.75L 22,50.75L 30,42.75L 33.25,46L 25.25,54L 34.25,54L 30.25,58 Z M 58,45.75L 58,58L 45.75,58L 41.75,54L 50.75,54L 42.75,46L 46,42.75L 54,50.75L 54,41.75L 58,45.75 Z M 45.75,18L 58,18L 58,30.25L 54,34.25L 54,25.25L 46,33.25L 42.75,30L 50.75,22L 41.75,22L 45.75,18 Z M 18,30.25L 18,18L 30.25,18L 34.25,22L 25.25,22L 33.25,30L 30,33.25L 22,25.25L 22,34.25L 18,30.25 Z", cast : "M 53,49C 55.2091,49 57,50.7909 57,53C 57,55.2091 55.2091,57 53,57C 50.7909,57 49,55.2091 49,53C 49,50.7909 50.7909,49 53,49 Z M 57,24C 38.7746,24 24,38.7746 24,57L 19,57C 19,36.0132 36.0132,19 57,19L 57,24 Z M 57,34C 44.2974,34 34,44.2975 34,57L 29,57C 29,41.536 41.536,29 57,29L 57,34 Z M 57,44C 49.8203,44 44,49.8203 44,57L 39,57C 39,47.0589 47.0589,39 57,39L 57,44 Z", back : "M 57,42L 57,34L 32.25,34L 42.25,24L 31.75,24L 17.75,38L 31.75,52L 42.25,52L 32.25,42L 57,42 Z"};
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
foundation_Widget.DATAKEY = "haxe-foundation-widget";
electron_ipc_IpcBus.GCN = "ipc::sockets";
foundation_Foundation.mqBreakpoints = ["small","medium","large","xlarge","xxlarge"];
foundation__$Label_LabelPos_$Impl_$.Before = "before";
foundation__$Label_LabelPos_$Impl_$.After = "after";
gryffin_Tools.used_idents = [];
gryffin_audio_Audio.FPS = 30;
gryffin_core_Stage.selectorCache = new haxe_ds_StringMap();
gryffin_display_Image.registry = new haxe_ds_StringMap();
gryffin_display_Video.FPS = 30;
gryffin_fx_Animations.registry = [];
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ds_ObjectMap.count = 0;
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved["lt"] != null) {
		h.setReserved("lt","<");
	} else {
		h.h["lt"] = "<";
	}
	if(__map_reserved["gt"] != null) {
		h.setReserved("gt",">");
	} else {
		h.h["gt"] = ">";
	}
	if(__map_reserved["amp"] != null) {
		h.setReserved("amp","&");
	} else {
		h.h["amp"] = "&";
	}
	if(__map_reserved["quot"] != null) {
		h.setReserved("quot","\"");
	} else {
		h.h["quot"] = "\"";
	}
	if(__map_reserved["apos"] != null) {
		h.setReserved("apos","'");
	} else {
		h.h["apos"] = "'";
	}
	$r = h;
	return $r;
}(this));
js_Boot.__toStr = ({ }).toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
pman_db_PManDatabase.DBNAME = "pman";
pman_db_PManDatabase.DBVERSION = 1;
pman_ui_ctrl__$PlaybackSpeedWidget_NamedSpeed_$Impl_$.Slow = 0.75;
pman_ui_ctrl__$PlaybackSpeedWidget_NamedSpeed_$Impl_$.Normal = 1.00;
pman_ui_ctrl__$PlaybackSpeedWidget_NamedSpeed_$Impl_$.Fast = 1.25;
pman_ui_ctrl__$PlaybackSpeedWidget_NamedSpeed_$Impl_$.VeryFast = 1.75;
tannus_css_vals__$Unit_Unit_$Impl_$.Em = "em";
tannus_css_vals__$Unit_Unit_$Impl_$.Ex = "ex";
tannus_css_vals__$Unit_Unit_$Impl_$.Ch = "ch";
tannus_css_vals__$Unit_Unit_$Impl_$.Rem = "rem";
tannus_css_vals__$Unit_Unit_$Impl_$.Vpw = "vw";
tannus_css_vals__$Unit_Unit_$Impl_$.Vph = "vh";
tannus_css_vals__$Unit_Unit_$Impl_$.Perc = "%";
tannus_css_vals__$Unit_Unit_$Impl_$.Cm = "cm";
tannus_css_vals__$Unit_Unit_$Impl_$.Mm = "mm";
tannus_css_vals__$Unit_Unit_$Impl_$.In = "in";
tannus_css_vals__$Unit_Unit_$Impl_$.Px = "px";
tannus_css_vals__$Unit_Unit_$Impl_$.Pt = "pt";
tannus_css_vals__$Unit_Unit_$Impl_$.Pc = "pc";
tannus_dom_CData.DATAKEY = "__tandata";
tannus_dom_CElement.DATAKEY = "__tandata";
tannus_ds_Memory.state = 0;
tannus_ds_Memory.used = [];
tannus_events__$Key_Key_$Impl_$.CapsLock = 20;
tannus_events__$Key_Key_$Impl_$.NumpadDot = 110;
tannus_events__$Key_Key_$Impl_$.NumpadForwardSlash = 111;
tannus_events__$Key_Key_$Impl_$.Command = 91;
tannus_events__$Key_Key_$Impl_$.ForwardSlash = 191;
tannus_events__$Key_Key_$Impl_$.Enter = 13;
tannus_events__$Key_Key_$Impl_$.Shift = 16;
tannus_events__$Key_Key_$Impl_$.Space = 32;
tannus_events__$Key_Key_$Impl_$.PageUp = 33;
tannus_events__$Key_Key_$Impl_$.Backspace = 8;
tannus_events__$Key_Key_$Impl_$.Tab = 9;
tannus_events__$Key_Key_$Impl_$.NumpadPlus = 107;
tannus_events__$Key_Key_$Impl_$.Dot = 190;
tannus_events__$Key_Key_$Impl_$.OpenBracket = 219;
tannus_events__$Key_Key_$Impl_$.Home = 36;
tannus_events__$Key_Key_$Impl_$.Left = 37;
tannus_events__$Key_Key_$Impl_$.Equals = 187;
tannus_events__$Key_Key_$Impl_$.Apostrophe = 222;
tannus_events__$Key_Key_$Impl_$.Right = 39;
tannus_events__$Key_Key_$Impl_$.CloseBracket = 221;
tannus_events__$Key_Key_$Impl_$.NumLock = 144;
tannus_events__$Key_Key_$Impl_$.BackSlash = 220;
tannus_events__$Key_Key_$Impl_$.PageDown = 34;
tannus_events__$Key_Key_$Impl_$.End = 35;
tannus_events__$Key_Key_$Impl_$.Minus = 189;
tannus_events__$Key_Key_$Impl_$.SemiColon = 186;
tannus_events__$Key_Key_$Impl_$.Down = 40;
tannus_events__$Key_Key_$Impl_$.Esc = 27;
tannus_events__$Key_Key_$Impl_$.Comma = 188;
tannus_events__$Key_Key_$Impl_$.Delete = 46;
tannus_events__$Key_Key_$Impl_$.NumpadAsterisk = 106;
tannus_events__$Key_Key_$Impl_$.BackTick = 192;
tannus_events__$Key_Key_$Impl_$.Ctrl = 17;
tannus_events__$Key_Key_$Impl_$.Insert = 45;
tannus_events__$Key_Key_$Impl_$.ScrollLock = 145;
tannus_events__$Key_Key_$Impl_$.NumpadMinus = 109;
tannus_events__$Key_Key_$Impl_$.Up = 38;
tannus_events__$Key_Key_$Impl_$.Alt = 18;
tannus_events__$Key_Key_$Impl_$.LetterA = 65;
tannus_events__$Key_Key_$Impl_$.LetterB = 66;
tannus_events__$Key_Key_$Impl_$.LetterC = 67;
tannus_events__$Key_Key_$Impl_$.LetterD = 68;
tannus_events__$Key_Key_$Impl_$.LetterE = 69;
tannus_events__$Key_Key_$Impl_$.LetterF = 70;
tannus_events__$Key_Key_$Impl_$.LetterG = 71;
tannus_events__$Key_Key_$Impl_$.LetterH = 72;
tannus_events__$Key_Key_$Impl_$.LetterI = 73;
tannus_events__$Key_Key_$Impl_$.LetterJ = 74;
tannus_events__$Key_Key_$Impl_$.LetterK = 75;
tannus_events__$Key_Key_$Impl_$.LetterL = 76;
tannus_events__$Key_Key_$Impl_$.LetterM = 77;
tannus_events__$Key_Key_$Impl_$.LetterN = 78;
tannus_events__$Key_Key_$Impl_$.LetterO = 79;
tannus_events__$Key_Key_$Impl_$.LetterP = 80;
tannus_events__$Key_Key_$Impl_$.LetterQ = 81;
tannus_events__$Key_Key_$Impl_$.LetterR = 82;
tannus_events__$Key_Key_$Impl_$.LetterS = 83;
tannus_events__$Key_Key_$Impl_$.LetterT = 84;
tannus_events__$Key_Key_$Impl_$.LetterU = 85;
tannus_events__$Key_Key_$Impl_$.LetterV = 86;
tannus_events__$Key_Key_$Impl_$.LetterW = 87;
tannus_events__$Key_Key_$Impl_$.LetterX = 88;
tannus_events__$Key_Key_$Impl_$.LetterY = 89;
tannus_events__$Key_Key_$Impl_$.LetterZ = 90;
tannus_events__$Key_Key_$Impl_$.F1 = 112;
tannus_events__$Key_Key_$Impl_$.F2 = 113;
tannus_events__$Key_Key_$Impl_$.F3 = 114;
tannus_events__$Key_Key_$Impl_$.F4 = 115;
tannus_events__$Key_Key_$Impl_$.F5 = 116;
tannus_events__$Key_Key_$Impl_$.F6 = 117;
tannus_events__$Key_Key_$Impl_$.F7 = 118;
tannus_events__$Key_Key_$Impl_$.F8 = 119;
tannus_events__$Key_Key_$Impl_$.F9 = 120;
tannus_events__$Key_Key_$Impl_$.F10 = 121;
tannus_events__$Key_Key_$Impl_$.F11 = 122;
tannus_events__$Key_Key_$Impl_$.F12 = 123;
tannus_events__$Key_Key_$Impl_$.Number0 = 48;
tannus_events__$Key_Key_$Impl_$.Number1 = 49;
tannus_events__$Key_Key_$Impl_$.Number2 = 50;
tannus_events__$Key_Key_$Impl_$.Number3 = 51;
tannus_events__$Key_Key_$Impl_$.Number4 = 52;
tannus_events__$Key_Key_$Impl_$.Number5 = 53;
tannus_events__$Key_Key_$Impl_$.Number6 = 54;
tannus_events__$Key_Key_$Impl_$.Number7 = 55;
tannus_events__$Key_Key_$Impl_$.Number8 = 56;
tannus_events__$Key_Key_$Impl_$.Number9 = 57;
tannus_geom_Bezier.PRECISION = 100;
tannus_geom_Matrix.__identity = new tannus_geom_Matrix();
tannus_http__$WebRequest_ResponseType_$Impl_$.TText = "text";
tannus_http__$WebRequest_ResponseType_$Impl_$.TJson = "json";
tannus_http__$WebRequest_ResponseType_$Impl_$.TArrayBuffer = "arraybuffer";
tannus_http__$WebRequest_ResponseType_$Impl_$.TBlob = "blob";
tannus_http__$WebRequest_ResponseType_$Impl_$.TDoc = "document";
tannus_math_TMath.E = 2.718281828459045;
tannus_math_TMath.LN2 = 0.6931471805599453;
tannus_math_TMath.LN10 = 2.302585092994046;
tannus_math_TMath.LOG2E = 1.4426950408889634;
tannus_math_TMath.LOG10E = 0.43429448190325176;
tannus_math_TMath.PI = 3.141592653589793;
tannus_math_TMath.SQRT1_2 = 0.7071067811865476;
tannus_math_TMath.SQRT2 = 1.4142135623730951;
tannus_math_TMath.KAPPA = 4 * (Math.sqrt(2) - 1) / 3;
tannus_math_TMath.INT_MIN = -2147483648;
tannus_math_TMath.INT_MAX = 2147483647;
tannus_math_TMath.FLOAT_MIN = -1.79769313486231e+308;
tannus_math_TMath.FLOAT_MAX = 1.79769313486231e+308;
tannus_sys_Mimes.initted = false;
tannus_sys_Mimes.primitive = { "3dml" : "text/vnd.in3d.3dml", "3ds" : "image/x-3ds", "3g2" : "video/3gpp2", "3gp" : "video/3gpp", "7z" : "application/x-7z-compressed", "aab" : "application/x-authorware-bin", "aac" : "audio/x-aac", "aam" : "application/x-authorware-map", "aas" : "application/x-authorware-seg", "abw" : "application/x-abiword", "ac" : "application/pkix-attr-cert", "acc" : "application/vnd.americandynamics.acc", "ace" : "application/x-ace-compressed", "acu" : "application/vnd.acucobol", "acutc" : "application/vnd.acucorp", "adp" : "audio/adpcm", "aep" : "application/vnd.audiograph", "afm" : "application/x-font-type1", "afp" : "application/vnd.ibm.modcap", "ahead" : "application/vnd.ahead.space", "ai" : "application/postscript", "aif" : "audio/x-aiff", "aifc" : "audio/x-aiff", "aiff" : "audio/x-aiff", "air" : "application/vnd.adobe.air-application-installer-package+zip", "ait" : "application/vnd.dvb.ait", "ami" : "application/vnd.amiga.ami", "apk" : "application/vnd.android.package-archive", "appcache" : "text/cache-manifest", "application" : "application/x-ms-application", "apr" : "application/vnd.lotus-approach", "arc" : "application/x-freearc", "asa" : "text/plain", "asax" : "application/octet-stream", "asc" : "application/pgp-signature", "ascx" : "text/plain", "asf" : "video/x-ms-asf", "ashx" : "text/plain", "asm" : "text/x-asm", "asmx" : "text/plain", "aso" : "application/vnd.accpac.simply.aso", "asp" : "text/plain", "aspx" : "text/plain", "asx" : "video/x-ms-asf", "atc" : "application/vnd.acucorp", "atom" : "application/atom+xml", "atomcat" : "application/atomcat+xml", "atomsvc" : "application/atomsvc+xml", "atx" : "application/vnd.antix.game-component", "au" : "audio/basic", "avi" : "video/x-msvideo", "aw" : "application/applixware", "axd" : "text/plain", "azf" : "application/vnd.airzip.filesecure.azf", "azs" : "application/vnd.airzip.filesecure.azs", "azw" : "application/vnd.amazon.ebook", "bat" : "application/x-msdownload", "bcpio" : "application/x-bcpio", "bdf" : "application/x-font-bdf", "bdm" : "application/vnd.syncml.dm+wbxml", "bed" : "application/vnd.realvnc.bed", "bh2" : "application/vnd.fujitsu.oasysprs", "bin" : "application/octet-stream", "blb" : "application/x-blorb", "blorb" : "application/x-blorb", "bmi" : "application/vnd.bmi", "bmp" : "image/bmp", "book" : "application/vnd.framemaker", "box" : "application/vnd.previewsystems.box", "boz" : "application/x-bzip2", "bpk" : "application/octet-stream", "btif" : "image/prs.btif", "bz" : "application/x-bzip", "bz2" : "application/x-bzip2", "c" : "text/x-c", "c11amc" : "application/vnd.cluetrust.cartomobile-config", "c11amz" : "application/vnd.cluetrust.cartomobile-config-pkg", "c4d" : "application/vnd.clonk.c4group", "c4f" : "application/vnd.clonk.c4group", "c4g" : "application/vnd.clonk.c4group", "c4p" : "application/vnd.clonk.c4group", "c4u" : "application/vnd.clonk.c4group", "cab" : "application/vnd.ms-cab-compressed", "caf" : "audio/x-caf", "cap" : "application/vnd.tcpdump.pcap", "car" : "application/vnd.curl.car", "cat" : "application/vnd.ms-pki.seccat", "cb7" : "application/x-cbr", "cba" : "application/x-cbr", "cbr" : "application/x-cbr", "cbt" : "application/x-cbr", "cbz" : "application/x-cbr", "cc" : "text/x-c", "cct" : "application/x-director", "ccxml" : "application/ccxml+xml", "cdbcmsg" : "application/vnd.contact.cmsg", "cdf" : "application/x-netcdf", "cdkey" : "application/vnd.mediastation.cdkey", "cdmia" : "application/cdmi-capability", "cdmic" : "application/cdmi-container", "cdmid" : "application/cdmi-domain", "cdmio" : "application/cdmi-object", "cdmiq" : "application/cdmi-queue", "cdx" : "chemical/x-cdx", "cdxml" : "application/vnd.chemdraw+xml", "cdy" : "application/vnd.cinderella", "cer" : "application/pkix-cert", "cfc" : "application/x-coldfusion", "cfm" : "application/x-coldfusion", "cfs" : "application/x-cfs-compressed", "cgm" : "image/cgm", "chat" : "application/x-chat", "chm" : "application/vnd.ms-htmlhelp", "chrt" : "application/vnd.kde.kchart", "cif" : "chemical/x-cif", "cii" : "application/vnd.anser-web-certificate-issue-initiation", "cil" : "application/vnd.ms-artgalry", "cla" : "application/vnd.claymore", "class" : "application/java-vm", "clkk" : "application/vnd.crick.clicker.keyboard", "clkp" : "application/vnd.crick.clicker.palette", "clkt" : "application/vnd.crick.clicker.template", "clkw" : "application/vnd.crick.clicker.wordbank", "clkx" : "application/vnd.crick.clicker", "clp" : "application/x-msclip", "cmc" : "application/vnd.cosmocaller", "cmdf" : "chemical/x-cmdf", "cml" : "chemical/x-cml", "cmp" : "application/vnd.yellowriver-custom-menu", "cmx" : "image/x-cmx", "cod" : "application/vnd.rim.cod", "coffee" : "text/coffeescript", "com" : "application/x-msdownload", "conf" : "text/plain", "cpio" : "application/x-cpio", "cpp" : "text/x-c", "cpt" : "application/mac-compactpro", "crd" : "application/x-mscardfile", "crl" : "application/pkix-crl", "crt" : "application/x-x509-ca-cert", "crx" : "application/octet-stream", "cryptonote" : "application/vnd.rig.cryptonote", "cs" : "text/plain", "csh" : "application/x-csh", "csml" : "chemical/x-csml", "csp" : "application/vnd.commonspace", "css" : "text/css", "cst" : "application/x-director", "csv" : "text/csv", "cu" : "application/cu-seeme", "curl" : "text/vnd.curl", "cww" : "application/prs.cww", "cxt" : "application/x-director", "cxx" : "text/x-c", "dae" : "model/vnd.collada+xml", "daf" : "application/vnd.mobius.daf", "dart" : "application/vnd.dart", "dataless" : "application/vnd.fdsn.seed", "davmount" : "application/davmount+xml", "dbk" : "application/docbook+xml", "dcr" : "application/x-director", "dcurl" : "text/vnd.curl.dcurl", "dd2" : "application/vnd.oma.dd2+xml", "ddd" : "application/vnd.fujixerox.ddd", "deb" : "application/x-debian-package", "def" : "text/plain", "deploy" : "application/octet-stream", "der" : "application/x-x509-ca-cert", "dfac" : "application/vnd.dreamfactory", "dgc" : "application/x-dgc-compressed", "dic" : "text/x-c", "dir" : "application/x-director", "dis" : "application/vnd.mobius.dis", "dist" : "application/octet-stream", "distz" : "application/octet-stream", "djv" : "image/vnd.djvu", "djvu" : "image/vnd.djvu", "dll" : "application/x-msdownload", "dmg" : "application/x-apple-diskimage", "dmp" : "application/vnd.tcpdump.pcap", "dms" : "application/octet-stream", "dna" : "application/vnd.dna", "doc" : "application/msword", "docm" : "application/vnd.ms-word.document.macroenabled.12", "docx" : "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "dot" : "application/msword", "dotm" : "application/vnd.ms-word.template.macroenabled.12", "dotx" : "application/vnd.openxmlformats-officedocument.wordprocessingml.template", "dp" : "application/vnd.osgi.dp", "dpg" : "application/vnd.dpgraph", "dra" : "audio/vnd.dra", "dsc" : "text/prs.lines.tag", "dssc" : "application/dssc+der", "dtb" : "application/x-dtbook+xml", "dtd" : "application/xml-dtd", "dts" : "audio/vnd.dts", "dtshd" : "audio/vnd.dts.hd", "dump" : "application/octet-stream", "dvb" : "video/vnd.dvb.file", "dvi" : "application/x-dvi", "dwf" : "model/vnd.dwf", "dwg" : "image/vnd.dwg", "dxf" : "image/vnd.dxf", "dxp" : "application/vnd.spotfire.dxp", "dxr" : "application/x-director", "ecelp4800" : "audio/vnd.nuera.ecelp4800", "ecelp7470" : "audio/vnd.nuera.ecelp7470", "ecelp9600" : "audio/vnd.nuera.ecelp9600", "ecma" : "application/ecmascript", "edm" : "application/vnd.novadigm.edm", "edx" : "application/vnd.novadigm.edx", "efif" : "application/vnd.picsel", "ei6" : "application/vnd.pg.osasli", "elc" : "application/octet-stream", "emf" : "application/x-msmetafile", "eml" : "message/rfc822", "emma" : "application/emma+xml", "emz" : "application/x-msmetafile", "eol" : "audio/vnd.digital-winds", "eot" : "application/vnd.ms-fontobject", "eps" : "application/postscript", "epub" : "application/epub+zip", "es3" : "application/vnd.eszigno3+xml", "esa" : "application/vnd.osgi.subsystem", "esf" : "application/vnd.epson.esf", "et3" : "application/vnd.eszigno3+xml", "etx" : "text/x-setext", "eva" : "application/x-eva", "evy" : "application/x-envoy", "exe" : "application/x-msdownload", "exi" : "application/exi", "ext" : "application/vnd.novadigm.ext", "ez" : "application/andrew-inset", "ez2" : "application/vnd.ezpix-album", "ez3" : "application/vnd.ezpix-package", "f" : "text/x-fortran", "f4v" : "video/x-f4v", "f77" : "text/x-fortran", "f90" : "text/x-fortran", "fbs" : "image/vnd.fastbidsheet", "fcdt" : "application/vnd.adobe.formscentral.fcdt", "fcs" : "application/vnd.isac.fcs", "fdf" : "application/vnd.fdf", "fe_launch" : "application/vnd.denovo.fcselayout-link", "fg5" : "application/vnd.fujitsu.oasysgp", "fgd" : "application/x-director", "fh" : "image/x-freehand", "fh4" : "image/x-freehand", "fh5" : "image/x-freehand", "fh7" : "image/x-freehand", "fhc" : "image/x-freehand", "fig" : "application/x-xfig", "flac" : "audio/x-flac", "fli" : "video/x-fli", "flo" : "application/vnd.micrografx.flo", "flv" : "video/x-flv", "flw" : "application/vnd.kde.kivio", "flx" : "text/vnd.fmi.flexstor", "fly" : "text/vnd.fly", "fm" : "application/vnd.framemaker", "fnc" : "application/vnd.frogans.fnc", "for" : "text/x-fortran", "fpx" : "image/vnd.fpx", "frame" : "application/vnd.framemaker", "fsc" : "application/vnd.fsc.weblaunch", "fst" : "image/vnd.fst", "ftc" : "application/vnd.fluxtime.clip", "fti" : "application/vnd.anser-web-funds-transfer-initiation", "fvt" : "video/vnd.fvt", "fxp" : "application/vnd.adobe.fxp", "fxpl" : "application/vnd.adobe.fxp", "fzs" : "application/vnd.fuzzysheet", "g2w" : "application/vnd.geoplan", "g3" : "image/g3fax", "g3w" : "application/vnd.geospace", "gac" : "application/vnd.groove-account", "gam" : "application/x-tads", "gbr" : "application/rpki-ghostbusters", "gca" : "application/x-gca-compressed", "gdl" : "model/vnd.gdl", "geo" : "application/vnd.dynageo", "gex" : "application/vnd.geometry-explorer", "ggb" : "application/vnd.geogebra.file", "ggt" : "application/vnd.geogebra.tool", "ghf" : "application/vnd.groove-help", "gif" : "image/gif", "gim" : "application/vnd.groove-identity-message", "gml" : "application/gml+xml", "gmx" : "application/vnd.gmx", "gnumeric" : "application/x-gnumeric", "gph" : "application/vnd.flographit", "gpx" : "application/gpx+xml", "gqf" : "application/vnd.grafeq", "gqs" : "application/vnd.grafeq", "gram" : "application/srgs", "gramps" : "application/x-gramps-xml", "gre" : "application/vnd.geometry-explorer", "grv" : "application/vnd.groove-injector", "grxml" : "application/srgs+xml", "gsf" : "application/x-font-ghostscript", "gtar" : "application/x-gtar", "gtm" : "application/vnd.groove-tool-message", "gtw" : "model/vnd.gtw", "gv" : "text/vnd.graphviz", "gxf" : "application/gxf", "gxt" : "application/vnd.geonext", "gz" : "application/x-gzip", "h" : "text/x-c", "h261" : "video/h261", "h263" : "video/h263", "h264" : "video/h264", "hal" : "application/vnd.hal+xml", "hbci" : "application/vnd.hbci", "hdf" : "application/x-hdf", "hh" : "text/x-c", "hlp" : "application/winhlp", "hpgl" : "application/vnd.hp-hpgl", "hpid" : "application/vnd.hp-hpid", "hps" : "application/vnd.hp-hps", "hqx" : "application/mac-binhex40", "hta" : "application/octet-stream", "htc" : "text/html", "htke" : "application/vnd.kenameaapp", "htm" : "text/html", "html" : "text/html", "hvd" : "application/vnd.yamaha.hv-dic", "hvp" : "application/vnd.yamaha.hv-voice", "hvs" : "application/vnd.yamaha.hv-script", "hx" : "text/haxe", "hxml" : "text/haxe.hxml", "i2g" : "application/vnd.intergeo", "icc" : "application/vnd.iccprofile", "ice" : "x-conference/x-cooltalk", "icm" : "application/vnd.iccprofile", "ico" : "image/x-icon", "ics" : "text/calendar", "ief" : "image/ief", "ifb" : "text/calendar", "ifm" : "application/vnd.shana.informed.formdata", "iges" : "model/iges", "igl" : "application/vnd.igloader", "igm" : "application/vnd.insors.igm", "igs" : "model/iges", "igx" : "application/vnd.micrografx.igx", "iif" : "application/vnd.shana.informed.interchange", "imp" : "application/vnd.accpac.simply.imp", "ims" : "application/vnd.ms-ims", "in" : "text/plain", "ini" : "text/plain", "ink" : "application/inkml+xml", "inkml" : "application/inkml+xml", "install" : "application/x-install-instructions", "iota" : "application/vnd.astraea-software.iota", "ipa" : "application/octet-stream", "ipfix" : "application/ipfix", "ipk" : "application/vnd.shana.informed.package", "irm" : "application/vnd.ibm.rights-management", "irp" : "application/vnd.irepository.package+xml", "iso" : "application/x-iso9660-image", "itp" : "application/vnd.shana.informed.formtemplate", "ivp" : "application/vnd.immervision-ivp", "ivu" : "application/vnd.immervision-ivu", "jad" : "text/vnd.sun.j2me.app-descriptor", "jam" : "application/vnd.jam", "jar" : "application/java-archive", "java" : "text/x-java-source", "jisp" : "application/vnd.jisp", "jlt" : "application/vnd.hp-jlyt", "jnlp" : "application/x-java-jnlp-file", "joda" : "application/vnd.joost.joda-archive", "jpe" : "image/jpeg", "jpeg" : "image/jpeg", "jpg" : "image/jpeg", "jpgm" : "video/jpm", "jpgv" : "video/jpeg", "jpm" : "video/jpm", "js" : "text/javascript", "json" : "application/json", "jsonml" : "application/jsonml+json", "kar" : "audio/midi", "karbon" : "application/vnd.kde.karbon", "kfo" : "application/vnd.kde.kformula", "kia" : "application/vnd.kidspiration", "kml" : "application/vnd.google-earth.kml+xml", "kmz" : "application/vnd.google-earth.kmz", "kne" : "application/vnd.kinar", "knp" : "application/vnd.kinar", "kon" : "application/vnd.kde.kontour", "kpr" : "application/vnd.kde.kpresenter", "kpt" : "application/vnd.kde.kpresenter", "kpxx" : "application/vnd.ds-keypoint", "ksp" : "application/vnd.kde.kspread", "ktr" : "application/vnd.kahootz", "ktx" : "image/ktx", "ktz" : "application/vnd.kahootz", "kwd" : "application/vnd.kde.kword", "kwt" : "application/vnd.kde.kword", "lasxml" : "application/vnd.las.las+xml", "latex" : "application/x-latex", "lbd" : "application/vnd.llamagraphics.life-balance.desktop", "lbe" : "application/vnd.llamagraphics.life-balance.exchange+xml", "les" : "application/vnd.hhe.lesson-player", "less" : "text/less", "lha" : "application/x-lzh-compressed", "link66" : "application/vnd.route66.link66+xml", "list" : "text/plain", "list3820" : "application/vnd.ibm.modcap", "listafp" : "application/vnd.ibm.modcap", "lnk" : "application/x-ms-shortcut", "log" : "text/plain", "lostxml" : "application/lost+xml", "lrf" : "application/octet-stream", "lrm" : "application/vnd.ms-lrm", "ltf" : "application/vnd.frogans.ltf", "lvp" : "audio/vnd.lucent.voice", "lwp" : "application/vnd.lotus-wordpro", "lz" : "application/x-lzip", "lzh" : "application/x-lzh-compressed", "lzma" : "application/x-lzma", "lzo" : "application/x-lzop", "m13" : "application/x-msmediaview", "m14" : "application/x-msmediaview", "m1v" : "video/mpeg", "m21" : "application/mp21", "m2a" : "audio/mpeg", "m2v" : "video/mpeg", "m3a" : "audio/mpeg", "m3u" : "audio/x-mpegurl", "m3u8" : "application/vnd.apple.mpegurl", "m4a" : "audio/mp4", "m4u" : "video/vnd.mpegurl", "m4v" : "video/mp4", "ma" : "application/mathematica", "mads" : "application/mads+xml", "mag" : "application/vnd.ecowin.chart", "maker" : "application/vnd.framemaker", "man" : "text/troff", "mar" : "application/octet-stream", "mathml" : "application/mathml+xml", "mb" : "application/mathematica", "mbk" : "application/vnd.mobius.mbk", "mbox" : "application/mbox", "mc1" : "application/vnd.medcalcdata", "mcd" : "application/vnd.mcd", "mcurl" : "text/vnd.curl.mcurl", "mdb" : "application/x-msaccess", "mdi" : "image/vnd.ms-modi", "md" : "text/markdown", "me" : "text/troff", "mesh" : "model/mesh", "meta4" : "application/metalink4+xml", "metalink" : "application/metalink+xml", "mets" : "application/mets+xml", "mfm" : "application/vnd.mfmp", "mft" : "application/rpki-manifest", "mgp" : "application/vnd.osgeo.mapguide.package", "mgz" : "application/vnd.proteus.magazine", "mid" : "audio/midi", "midi" : "audio/midi", "mie" : "application/x-mie", "mif" : "application/vnd.mif", "mime" : "message/rfc822", "mj2" : "video/mj2", "mjp2" : "video/mj2", "mk3d" : "video/x-matroska", "mka" : "audio/x-matroska", "mks" : "video/x-matroska", "mkv" : "video/x-matroska", "mlp" : "application/vnd.dolby.mlp", "mmd" : "application/vnd.chipnuts.karaoke-mmd", "mmf" : "application/vnd.smaf", "mmr" : "image/vnd.fujixerox.edmics-mmr", "mng" : "video/x-mng", "mny" : "application/x-msmoney", "mobi" : "application/x-mobipocket-ebook", "mods" : "application/mods+xml", "mov" : "video/quicktime", "movie" : "video/x-sgi-movie", "mp2" : "audio/mpeg", "mp21" : "application/mp21", "mp2a" : "audio/mpeg", "mp3" : "audio/mpeg", "mp4" : "video/mp4", "mp4a" : "audio/mp4", "mp4s" : "application/mp4", "mp4v" : "video/mp4", "mpc" : "application/vnd.mophun.certificate", "mpe" : "video/mpeg", "mpeg" : "video/mpeg", "mpg" : "video/mpeg", "mpg4" : "video/mp4", "mpga" : "audio/mpeg", "mpkg" : "application/vnd.apple.installer+xml", "mpm" : "application/vnd.blueice.multipass", "mpn" : "application/vnd.mophun.application", "mpp" : "application/vnd.ms-project", "mpt" : "application/vnd.ms-project", "mpy" : "application/vnd.ibm.minipay", "mqy" : "application/vnd.mobius.mqy", "mrc" : "application/marc", "mrcx" : "application/marcxml+xml", "ms" : "text/troff", "mscml" : "application/mediaservercontrol+xml", "mseed" : "application/vnd.fdsn.mseed", "mseq" : "application/vnd.mseq", "msf" : "application/vnd.epson.msf", "msh" : "model/mesh", "msi" : "application/x-msdownload", "msl" : "application/vnd.mobius.msl", "msty" : "application/vnd.muvee.style", "mts" : "model/vnd.mts", "mus" : "application/vnd.musician", "musicxml" : "application/vnd.recordare.musicxml+xml", "mvb" : "application/x-msmediaview", "mwf" : "application/vnd.mfer", "mxf" : "application/mxf", "mxl" : "application/vnd.recordare.musicxml", "mxml" : "application/xv+xml", "mxs" : "application/vnd.triscape.mxs", "mxu" : "video/vnd.mpegurl", "n-gage" : "application/vnd.nokia.n-gage.symbian.install", "n3" : "text/n3", "nb" : "application/mathematica", "nbp" : "application/vnd.wolfram.player", "nc" : "application/x-netcdf", "ncx" : "application/x-dtbncx+xml", "nfo" : "text/x-nfo", "ngdat" : "application/vnd.nokia.n-gage.data", "nitf" : "application/vnd.nitf", "nlu" : "application/vnd.neurolanguage.nlu", "nml" : "application/vnd.enliven", "nnd" : "application/vnd.noblenet-directory", "nns" : "application/vnd.noblenet-sealer", "nnw" : "application/vnd.noblenet-web", "npx" : "image/vnd.net-fpx", "nsc" : "application/x-conference", "nsf" : "application/vnd.lotus-notes", "ntf" : "application/vnd.nitf", "nzb" : "application/x-nzb", "oa2" : "application/vnd.fujitsu.oasys2", "oa3" : "application/vnd.fujitsu.oasys3", "oas" : "application/vnd.fujitsu.oasys", "obd" : "application/x-msbinder", "obj" : "application/x-tgif", "oda" : "application/oda", "odb" : "application/vnd.oasis.opendocument.database", "odc" : "application/vnd.oasis.opendocument.chart", "odf" : "application/vnd.oasis.opendocument.formula", "odft" : "application/vnd.oasis.opendocument.formula-template", "odg" : "application/vnd.oasis.opendocument.graphics", "odi" : "application/vnd.oasis.opendocument.image", "odm" : "application/vnd.oasis.opendocument.text-master", "odp" : "application/vnd.oasis.opendocument.presentation", "ods" : "application/vnd.oasis.opendocument.spreadsheet", "odt" : "application/vnd.oasis.opendocument.text", "oga" : "audio/ogg", "ogg" : "audio/ogg", "ogv" : "video/ogg", "ogx" : "application/ogg", "omdoc" : "application/omdoc+xml", "onepkg" : "application/onenote", "onetmp" : "application/onenote", "onetoc" : "application/onenote", "onetoc2" : "application/onenote", "opf" : "application/oebps-package+xml", "opml" : "text/x-opml", "oprc" : "application/vnd.palm", "org" : "application/vnd.lotus-organizer", "osf" : "application/vnd.yamaha.openscoreformat", "osfpvg" : "application/vnd.yamaha.openscoreformat.osfpvg+xml", "otc" : "application/vnd.oasis.opendocument.chart-template", "otf" : "application/x-font-otf", "otg" : "application/vnd.oasis.opendocument.graphics-template", "oth" : "application/vnd.oasis.opendocument.text-web", "oti" : "application/vnd.oasis.opendocument.image-template", "otp" : "application/vnd.oasis.opendocument.presentation-template", "ots" : "application/vnd.oasis.opendocument.spreadsheet-template", "ott" : "application/vnd.oasis.opendocument.text-template", "oxps" : "application/oxps", "oxt" : "application/vnd.openofficeorg.extension", "p" : "text/x-pascal", "py" : "application/python", "p10" : "application/pkcs10", "p12" : "application/x-pkcs12", "p7b" : "application/x-pkcs7-certificates", "p7c" : "application/pkcs7-mime", "p7m" : "application/pkcs7-mime", "p7r" : "application/x-pkcs7-certreqresp", "p7s" : "application/pkcs7-signature", "p8" : "application/pkcs8", "pas" : "text/x-pascal", "paw" : "application/vnd.pawaafile", "pbd" : "application/vnd.powerbuilder6", "pbm" : "image/x-portable-bitmap", "pcap" : "application/vnd.tcpdump.pcap", "pcf" : "application/x-font-pcf", "pcl" : "application/vnd.hp-pcl", "pclxl" : "application/vnd.hp-pclxl", "pct" : "image/x-pict", "pcurl" : "application/vnd.curl.pcurl", "pcx" : "image/x-pcx", "pdb" : "application/vnd.palm", "pdf" : "application/pdf", "pfa" : "application/x-font-type1", "pfb" : "application/x-font-type1", "pfm" : "application/x-font-type1", "pfr" : "application/font-tdpfr", "pfx" : "application/x-pkcs12", "pgm" : "image/x-portable-graymap", "pgn" : "application/x-chess-pgn", "pgp" : "application/pgp-encrypted", "phar" : "application/octet-stream", "php" : "text/plain", "phps" : "application/x-httpd-phps", "pic" : "image/x-pict", "pkg" : "application/octet-stream", "pki" : "application/pkixcmp", "pkipath" : "application/pkix-pkipath", "plb" : "application/vnd.3gpp.pic-bw-large", "plc" : "application/vnd.mobius.plc", "plf" : "application/vnd.pocketlearn", "plist" : "application/x-plist", "pls" : "application/pls+xml", "pml" : "application/vnd.ctc-posml", "png" : "image/png", "pnm" : "image/x-portable-anymap", "portpkg" : "application/vnd.macports.portpkg", "pot" : "application/vnd.ms-powerpoint", "potm" : "application/vnd.ms-powerpoint.template.macroenabled.12", "potx" : "application/vnd.openxmlformats-officedocument.presentationml.template", "ppam" : "application/vnd.ms-powerpoint.addin.macroenabled.12", "ppd" : "application/vnd.cups-ppd", "ppm" : "image/x-portable-pixmap", "pps" : "application/vnd.ms-powerpoint", "ppsm" : "application/vnd.ms-powerpoint.slideshow.macroenabled.12", "ppsx" : "application/vnd.openxmlformats-officedocument.presentationml.slideshow", "ppt" : "application/vnd.ms-powerpoint", "pptm" : "application/vnd.ms-powerpoint.presentation.macroenabled.12", "pptx" : "application/vnd.openxmlformats-officedocument.presentationml.presentation", "pqa" : "application/vnd.palm", "prc" : "application/x-mobipocket-ebook", "pre" : "application/vnd.lotus-freelance", "prf" : "application/pics-rules", "ps" : "application/postscript", "psb" : "application/vnd.3gpp.pic-bw-small", "psd" : "image/vnd.adobe.photoshop", "psf" : "application/x-font-linux-psf", "pskcxml" : "application/pskc+xml", "ptid" : "application/vnd.pvi.ptid1", "pub" : "application/x-mspublisher", "pvb" : "application/vnd.3gpp.pic-bw-var", "pwn" : "application/vnd.3m.post-it-notes", "pya" : "audio/vnd.ms-playready.media.pya", "pyv" : "video/vnd.ms-playready.media.pyv", "qam" : "application/vnd.epson.quickanime", "qbo" : "application/vnd.intu.qbo", "qfx" : "application/vnd.intu.qfx", "qps" : "application/vnd.publishare-delta-tree", "qt" : "video/quicktime", "qwd" : "application/vnd.quark.quarkxpress", "qwt" : "application/vnd.quark.quarkxpress", "qxb" : "application/vnd.quark.quarkxpress", "qxd" : "application/vnd.quark.quarkxpress", "qxl" : "application/vnd.quark.quarkxpress", "qxt" : "application/vnd.quark.quarkxpress", "ra" : "audio/x-pn-realaudio", "ram" : "audio/x-pn-realaudio", "rar" : "application/x-rar-compressed", "ras" : "image/x-cmu-raster", "rb" : "text/plain", "rcprofile" : "application/vnd.ipunplugged.rcprofile", "rdf" : "application/rdf+xml", "rdz" : "application/vnd.data-vision.rdz", "rep" : "application/vnd.businessobjects", "res" : "application/x-dtbresource+xml", "resx" : "text/xml", "rgb" : "image/x-rgb", "rif" : "application/reginfo+xml", "rip" : "audio/vnd.rip", "ris" : "application/x-research-info-systems", "rl" : "application/resource-lists+xml", "rlc" : "image/vnd.fujixerox.edmics-rlc", "rld" : "application/resource-lists-diff+xml", "rm" : "application/vnd.rn-realmedia", "rmi" : "audio/midi", "rmp" : "audio/x-pn-realaudio-plugin", "rms" : "application/vnd.jcp.javame.midlet-rms", "rmvb" : "application/vnd.rn-realmedia-vbr", "rnc" : "application/relax-ng-compact-syntax", "roa" : "application/rpki-roa", "roff" : "text/troff", "rp9" : "application/vnd.cloanto.rp9", "rpm" : "application/x-rpm", "rpss" : "application/vnd.nokia.radio-presets", "rpst" : "application/vnd.nokia.radio-preset", "rq" : "application/sparql-query", "rs" : "application/rls-services+xml", "rsd" : "application/rsd+xml", "rss" : "application/rss+xml", "rtf" : "application/rtf", "rtx" : "text/richtext", "s" : "text/x-asm", "s3m" : "audio/s3m", "s7z" : "application/x-7z-compressed", "saf" : "application/vnd.yamaha.smaf-audio", "safariextz" : "application/octet-stream", "sass" : "text/x-sass", "sbml" : "application/sbml+xml", "sc" : "application/vnd.ibm.secure-container", "scd" : "application/x-msschedule", "scm" : "application/vnd.lotus-screencam", "scq" : "application/scvp-cv-request", "scs" : "application/scvp-cv-response", "scss" : "text/x-scss", "scurl" : "text/vnd.curl.scurl", "sda" : "application/vnd.stardivision.draw", "sdc" : "application/vnd.stardivision.calc", "sdd" : "application/vnd.stardivision.impress", "sdkd" : "application/vnd.solent.sdkm+xml", "sdkm" : "application/vnd.solent.sdkm+xml", "sdp" : "application/sdp", "sdw" : "application/vnd.stardivision.writer", "see" : "application/vnd.seemail", "seed" : "application/vnd.fdsn.seed", "sema" : "application/vnd.sema", "semd" : "application/vnd.semd", "semf" : "application/vnd.semf", "ser" : "application/java-serialized-object", "setpay" : "application/set-payment-initiation", "setreg" : "application/set-registration-initiation", "sfd-hdstx" : "application/vnd.hydrostatix.sof-data", "sfs" : "application/vnd.spotfire.sfs", "sfv" : "text/x-sfv", "sgi" : "image/sgi", "sgl" : "application/vnd.stardivision.writer-global", "sgm" : "text/sgml", "sgml" : "text/sgml", "sh" : "application/x-sh", "shar" : "application/x-shar", "shf" : "application/shf+xml", "sid" : "image/x-mrsid-image", "sig" : "application/pgp-signature", "sil" : "audio/silk", "silo" : "model/mesh", "sis" : "application/vnd.symbian.install", "sisx" : "application/vnd.symbian.install", "sit" : "application/x-stuffit", "sitx" : "application/x-stuffitx", "skd" : "application/vnd.koan", "skm" : "application/vnd.koan", "skp" : "application/vnd.koan", "skt" : "application/vnd.koan", "sldm" : "application/vnd.ms-powerpoint.slide.macroenabled.12", "sldx" : "application/vnd.openxmlformats-officedocument.presentationml.slide", "slt" : "application/vnd.epson.salt", "sm" : "application/vnd.stepmania.stepchart", "smf" : "application/vnd.stardivision.math", "smi" : "application/smil+xml", "smil" : "application/smil+xml", "smv" : "video/x-smv", "smzip" : "application/vnd.stepmania.package", "snd" : "audio/basic", "snf" : "application/x-font-snf", "so" : "application/octet-stream", "spc" : "application/x-pkcs7-certificates", "spf" : "application/vnd.yamaha.smaf-phrase", "spl" : "application/x-futuresplash", "spot" : "text/vnd.in3d.spot", "spp" : "application/scvp-vp-response", "spq" : "application/scvp-vp-request", "spx" : "audio/ogg", "sql" : "application/x-sql", "src" : "application/x-wais-source", "srt" : "application/x-subrip", "sru" : "application/sru+xml", "srx" : "application/sparql-results+xml", "ssdl" : "application/ssdl+xml", "sse" : "application/vnd.kodak-descriptor", "ssf" : "application/vnd.epson.ssf", "ssml" : "application/ssml+xml", "st" : "application/vnd.sailingtracker.track", "stc" : "application/vnd.sun.xml.calc.template", "std" : "application/vnd.sun.xml.draw.template", "stf" : "application/vnd.wt.stf", "sti" : "application/vnd.sun.xml.impress.template", "stk" : "application/hyperstudio", "stl" : "application/vnd.ms-pki.stl", "str" : "application/vnd.pg.format", "stw" : "application/vnd.sun.xml.writer.template", "styl" : "text/x-styl", "sub" : "image/vnd.dvb.subtitle", "sus" : "application/vnd.sus-calendar", "susp" : "application/vnd.sus-calendar", "sv4cpio" : "application/x-sv4cpio", "sv4crc" : "application/x-sv4crc", "svc" : "application/vnd.dvb.service", "svd" : "application/vnd.svd", "svg" : "image/svg+xml", "svgz" : "image/svg+xml", "swa" : "application/x-director", "swf" : "application/x-shockwave-flash", "swi" : "application/vnd.aristanetworks.swi", "sxc" : "application/vnd.sun.xml.calc", "sxd" : "application/vnd.sun.xml.draw", "sxg" : "application/vnd.sun.xml.writer.global", "sxi" : "application/vnd.sun.xml.impress", "sxm" : "application/vnd.sun.xml.math", "sxw" : "application/vnd.sun.xml.writer", "t" : "text/troff", "t3" : "application/x-t3vm-image", "taglet" : "application/vnd.mynfc", "tao" : "application/vnd.tao.intent-module-archive", "tar" : "application/x-tar", "tcap" : "application/vnd.3gpp2.tcap", "tcl" : "application/x-tcl", "teacher" : "application/vnd.smart.teacher", "tei" : "application/tei+xml", "teicorpus" : "application/tei+xml", "tex" : "application/x-tex", "texi" : "application/x-texinfo", "texinfo" : "application/x-texinfo", "text" : "text/plain", "tfi" : "application/thraud+xml", "tfm" : "application/x-tex-tfm", "tga" : "image/x-tga", "tgz" : "application/x-gzip", "thmx" : "application/vnd.ms-officetheme", "tif" : "image/tiff", "tiff" : "image/tiff", "tmo" : "application/vnd.tmobile-livetv", "torrent" : "application/x-bittorrent", "tpl" : "application/vnd.groove-tool-template", "tpt" : "application/vnd.trid.tpt", "tr" : "text/troff", "tra" : "application/vnd.trueapp", "trm" : "application/x-msterminal", "tsd" : "application/timestamped-data", "tsv" : "text/tab-separated-values", "ttc" : "application/x-font-ttf", "ttf" : "application/x-font-ttf", "ttl" : "text/turtle", "twd" : "application/vnd.simtech-mindmapper", "twds" : "application/vnd.simtech-mindmapper", "txd" : "application/vnd.genomatix.tuxedo", "txf" : "application/vnd.mobius.txf", "txt" : "text/plain", "u32" : "application/x-authorware-bin", "udeb" : "application/x-debian-package", "ufd" : "application/vnd.ufdl", "ufdl" : "application/vnd.ufdl", "ulx" : "application/x-glulx", "umj" : "application/vnd.umajin", "unityweb" : "application/vnd.unity", "uoml" : "application/vnd.uoml+xml", "uri" : "text/uri-list", "uris" : "text/uri-list", "urls" : "text/uri-list", "ustar" : "application/x-ustar", "utz" : "application/vnd.uiq.theme", "uu" : "text/x-uuencode", "uva" : "audio/vnd.dece.audio", "uvd" : "application/vnd.dece.data", "uvf" : "application/vnd.dece.data", "uvg" : "image/vnd.dece.graphic", "uvh" : "video/vnd.dece.hd", "uvi" : "image/vnd.dece.graphic", "uvm" : "video/vnd.dece.mobile", "uvp" : "video/vnd.dece.pd", "uvs" : "video/vnd.dece.sd", "uvt" : "application/vnd.dece.ttml+xml", "uvu" : "video/vnd.uvvu.mp4", "uvv" : "video/vnd.dece.video", "uvva" : "audio/vnd.dece.audio", "uvvd" : "application/vnd.dece.data", "uvvf" : "application/vnd.dece.data", "uvvg" : "image/vnd.dece.graphic", "uvvh" : "video/vnd.dece.hd", "uvvi" : "image/vnd.dece.graphic", "uvvm" : "video/vnd.dece.mobile", "uvvp" : "video/vnd.dece.pd", "uvvs" : "video/vnd.dece.sd", "uvvt" : "application/vnd.dece.ttml+xml", "uvvu" : "video/vnd.uvvu.mp4", "uvvv" : "video/vnd.dece.video", "uvvx" : "application/vnd.dece.unspecified", "uvvz" : "application/vnd.dece.zip", "uvx" : "application/vnd.dece.unspecified", "uvz" : "application/vnd.dece.zip", "vcard" : "text/vcard", "vcd" : "application/x-cdlink", "vcf" : "text/x-vcard", "vcg" : "application/vnd.groove-vcard", "vcs" : "text/x-vcalendar", "vcx" : "application/vnd.vcx", "vis" : "application/vnd.visionary", "viv" : "video/vnd.vivo", "vob" : "video/x-ms-vob", "vor" : "application/vnd.stardivision.writer", "vox" : "application/x-authorware-bin", "vrml" : "model/vrml", "vsd" : "application/vnd.visio", "vsf" : "application/vnd.vsf", "vss" : "application/vnd.visio", "vst" : "application/vnd.visio", "vsw" : "application/vnd.visio", "vtu" : "model/vnd.vtu", "vxml" : "application/voicexml+xml", "w3d" : "application/x-director", "wad" : "application/x-doom", "wav" : "audio/x-wav", "wax" : "audio/x-ms-wax", "wbmp" : "image/vnd.wap.wbmp", "wbs" : "application/vnd.criticaltools.wbs+xml", "wbxml" : "application/vnd.wap.wbxml", "wcm" : "application/vnd.ms-works", "wdb" : "application/vnd.ms-works", "wdp" : "image/vnd.ms-photo", "weba" : "audio/webm", "webm" : "video/webm", "webp" : "image/webp", "wg" : "application/vnd.pmi.widget", "wgt" : "application/widget", "wks" : "application/vnd.ms-works", "wm" : "video/x-ms-wm", "wma" : "audio/x-ms-wma", "wmd" : "application/x-ms-wmd", "wmf" : "application/x-msmetafile", "wml" : "text/vnd.wap.wml", "wmlc" : "application/vnd.wap.wmlc", "wmls" : "text/vnd.wap.wmlscript", "wmlsc" : "application/vnd.wap.wmlscriptc", "wmv" : "video/x-ms-wmv", "wmx" : "video/x-ms-wmx", "wmz" : "application/x-ms-wmz", "woff" : "application/x-font-woff", "wpd" : "application/vnd.wordperfect", "wpl" : "application/vnd.ms-wpl", "wps" : "application/vnd.ms-works", "wqd" : "application/vnd.wqd", "wri" : "application/x-mswrite", "wrl" : "model/vrml", "wsdl" : "application/wsdl+xml", "wspolicy" : "application/wspolicy+xml", "wtb" : "application/vnd.webturbo", "wvx" : "video/x-ms-wvx", "x32" : "application/x-authorware-bin", "x3d" : "model/x3d+xml", "x3db" : "model/x3d+binary", "x3dbz" : "model/x3d+binary", "x3dv" : "model/x3d+vrml", "x3dvz" : "model/x3d+vrml", "x3dz" : "model/x3d+xml", "xaml" : "application/xaml+xml", "xap" : "application/x-silverlight-app", "xar" : "application/vnd.xara", "xbap" : "application/x-ms-xbap", "xbd" : "application/vnd.fujixerox.docuworks.binder", "xbm" : "image/x-xbitmap", "xdf" : "application/xcap-diff+xml", "xdm" : "application/vnd.syncml.dm+xml", "xdp" : "application/vnd.adobe.xdp+xml", "xdssc" : "application/dssc+xml", "xdw" : "application/vnd.fujixerox.docuworks", "xenc" : "application/xenc+xml", "xer" : "application/patch-ops-error+xml", "xfdf" : "application/vnd.adobe.xfdf", "xfdl" : "application/vnd.xfdl", "xht" : "application/xhtml+xml", "xhtml" : "application/xhtml+xml", "xhvml" : "application/xv+xml", "xif" : "image/vnd.xiff", "xla" : "application/vnd.ms-excel", "xlam" : "application/vnd.ms-excel.addin.macroenabled.12", "xlc" : "application/vnd.ms-excel", "xlf" : "application/x-xliff+xml", "xlm" : "application/vnd.ms-excel", "xls" : "application/vnd.ms-excel", "xlsb" : "application/vnd.ms-excel.sheet.binary.macroenabled.12", "xlsm" : "application/vnd.ms-excel.sheet.macroenabled.12", "xlsx" : "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "xlt" : "application/vnd.ms-excel", "xltm" : "application/vnd.ms-excel.template.macroenabled.12", "xltx" : "application/vnd.openxmlformats-officedocument.spreadsheetml.template", "xlw" : "application/vnd.ms-excel", "xm" : "audio/xm", "xml" : "application/xml", "xo" : "application/vnd.olpc-sugar", "xop" : "application/xop+xml", "xpi" : "application/x-xpinstall", "xpl" : "application/xproc+xml", "xpm" : "image/x-xpixmap", "xpr" : "application/vnd.is-xpr", "xps" : "application/vnd.ms-xpsdocument", "xpw" : "application/vnd.intercon.formnet", "xpx" : "application/vnd.intercon.formnet", "xsl" : "application/xml", "xslt" : "application/xslt+xml", "xsm" : "application/vnd.syncml+xml", "xspf" : "application/xspf+xml", "xul" : "application/vnd.mozilla.xul+xml", "xvm" : "application/xv+xml", "xvml" : "application/xv+xml", "xwd" : "image/x-xwindowdump", "xyz" : "chemical/x-xyz", "xz" : "application/x-xz", "yaml" : "text/yaml", "yang" : "application/yang", "yin" : "application/yin+xml", "yml" : "text/yaml", "z" : "application/x-compress", "z1" : "application/x-zmachine", "z2" : "application/x-zmachine", "z3" : "application/x-zmachine", "z4" : "application/x-zmachine", "z5" : "application/x-zmachine", "z6" : "application/x-zmachine", "z7" : "application/x-zmachine", "z8" : "application/x-zmachine", "zaz" : "application/vnd.zzazz.deck+xml", "zip" : "application/zip", "zir" : "application/vnd.zul", "zirz" : "application/vnd.zul", "zmm" : "application/vnd.handheld-entertainment+xml", "123" : "application/vnd.lotus-1-2-3"};
BPlayerMain.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
